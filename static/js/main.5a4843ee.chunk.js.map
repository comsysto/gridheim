{"version":3,"sources":["common/listgroup/ListGroup.tsx","common/listgroup/ListGroupItemAction.tsx","common/media/MediaContainer.tsx","common/media/MediaBody.tsx","common/GridMapList.tsx","common/FullPageWithHeading.tsx","common/ExplanationBox.tsx","common/PageHeader.tsx","common/PageHeaderWithButtons.tsx","App/GridMapsPage.tsx","App/SessionsPage/SessionList.tsx","utils/arrayToDict.ts","utils/useRouter.ts","utils/useNavigation.ts","App/SessionsPage.tsx","App/ManageTokenTypesPage.tsx","App/AboutPage/IntroSection.tsx","App/AboutPage/HelloSection.tsx","data/labels.tsx","App/AboutPage.tsx","utils/Immerable.ts","model/Token.ts","model/Square.ts","model/Drawing.ts","model/DrawingPane.ts","model/ViewBox.ts","utils/uuid.ts","services/AbstractService.ts","utils/range.ts","App/PlayPage/services/BattleMapService.ts","model/DrawingColor.ts","model/DrawingWidth.ts","services/AbstractModeBasedService.ts","App/PlayPage/services/modebased/PlayModeService.ts","App/PlayPage/services/modebased/DrawingService.ts","model/TokenType.ts","App/PlayPage/services/AssetService.ts","utils/is.ts","App/PlayPage/services/modebased/ModeBasedService.ts","App/PlayPage/services/modebased/ManageTokenService.ts","App/PlayPage/services/ModeService.ts","App/PlayPage/services/SaveSessionService.ts","App/PlayPage/Layout/PlayMap/DisplayBackgroundImage.tsx","utils/useObservable.ts","utils/classesMap.ts","common/DisplayToken.tsx","App/PlayPage/Layout/PlayMap/DisplayTokens.tsx","utils/pointInSvgFromEvent.ts","App/PlayPage/Layout/PlayMap/DrawingCapturePane.tsx","App/PlayPage/Layout/PlayMap/DrawingPane.tsx","App/PlayPage/Layout/PlayMap/ZoomPane.tsx","App/PlayPage/common/BattleGrid.tsx","App/PlayPage/Layout/PlayMap/BackgroundGrid.tsx","App/PlayPage/Layout/PlayMap/SelectionGrid.tsx","App/PlayPage/Layout/PlayMap.tsx","App/PlayPage/common/ControlBarButton.tsx","App/PlayPage/Layout/ControlBar/DrawingControlBar.tsx","App/PlayPage/Layout/ControlBar/ModeControlBar.tsx","App/PlayPage/Layout/ControlBar/ManageTokenControlBar.tsx","App/PlayPage/Layout/ControlBar.tsx","common/LayoutGrid.tsx","App/PlayPage/Layout/AddTokenModal/TokenTypeSelection.tsx","common/Modal.tsx","App/PlayPage/Layout/AddTokenModal.tsx","App/PlayPage/Layout.tsx","App/PlayPage/NoSessionsFound.tsx","App/PlayPage.tsx","services/IndexedDbStorageProvider.ts","App/StartPage/actions/PlayAction.ts","App/StartPage/actions/NewSessionAction.ts","App/StartPage/actions/ShowSessionsAction.ts","App/StartPage/actions/ShowGridMapsAction.ts","App/StartPage/StartSection.tsx","App/StartPage/StartSectionItem.tsx","App/StartPage.tsx","App/StartPage/actions/NewGridMapAction.ts","App/StartPage/actions/AboutAction.ts","App/StartPage/actions/OpenSourceAction.ts","App/StartPage/actions/AssetAction.ts","model/GridMap.ts","model/Transformation.tsx","model/BackgroundImage.ts","services/AbstractStorage.tsx","services/GridMapStorage.tsx","model/Session.ts","services/SessionStorage.tsx","App/NewGridMapPage/AddGridMap/ImageUpload.tsx","utils/useDragSvg.ts","utils/pointDistance.ts","App/NewGridMapPage/AddGridMap/TransformationSetup/SelectionRect.tsx","App/NewGridMapPage/AddGridMap/TransformationSetup/common/ViewControls.tsx","App/NewGridMapPage/AddGridMap/TransformationSetup/PlaceSquare.tsx","App/NewGridMapPage/AddGridMap/TransformationSetup/PreviewGrid.tsx","App/NewGridMapPage/AddGridMap/TransformationSetup.tsx","App/NewGridMapPage/AddGridMap/AddMetadata.tsx","common/StepIndicator.tsx","App/NewGridMapPage/NewGridMap.tsx","App/NewGridMapPage.tsx","App/SessionsPage/StartSession.tsx","App/SessionsPage/NoGridMapsFound.tsx","App/NewSessionPage.tsx","data/opensource.ts","App/OpenSourcePage.tsx","services/SettingStorage.tsx","App/RedirectToAboutOnFirstVisit.tsx","App/HomeButton.tsx","data/links.ts","App/Legal.tsx","App/AppPage.tsx","App/AssetsPage.tsx","App.tsx","serviceWorker.js","index.tsx","images/john-westrock-UHFQPFt5-WA-unsplash.jpg"],"names":["ListGroup","className","children","ListGroupItemAction","active","onClick","href","event","preventDefault","MediaContainer","MediaBody","GridMapList","gridMaps","selected","onSelect","Object","values","map","gridMap","key","name","getWidthInSquares","getHeightInSquares","transformation","scale","dx","dy","src","image","url","ResetScrolling","React","createContext","FullPageWithHeading","heading","ref","useRef","Provider","value","current","scrollTo","ExplanationBox","PageHeader","icon","headline","PageHeaderWithButtons","Children","child","i","GridMapsPage","gridMapStorage","useState","setSelected","setGridMaps","reload","useCallback","findAll","subscribe","next","useEffect","FileMedia","type","delete","Trashcan","SessionList","sessions","gridMapsForName","session","gridMapName","date","arrayToDict","list","fn","reduce","dict","useRouter","useContext","RouterContext","useNavigation","router","destinations","destination","history","push","SessionsPage","sessionStorage","setSessions","setGridMapForName","combineLatest","findCurrentSessionName","routing","play","navigateToPlay","Repo","storeCurrentSessionName","Play","ManageTokenTypesPage","IntroSection","Milestone","size","HelloSection","GistSecret","labels","freeze","playPage","controlBar","drawBackgroundButton","drawNotesButton","playButton","addTokensButton","zoomButton","newSessionPage","explanation","assetPage","openSourcePage","aboutPage","startLink","startPage","sections","info","Info","about","description","button","openSource","assets","newGridMap","newSession","showGridMaps","showSessions","AboutPage","to","start","Immerable","target","immerable","Token","id","tokenType","label","square","Square","x","y","this","Drawing","path","color","width","CURRENT_ID","p","join","DrawingPane","drawings","json","drawingJson","drawing","withDrawingRemoved","drawingId","filter","d","ViewBox","height","uuid","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","AbstractService","disposeS$","Subject","dispose$","asObservable","complete","o","pipe","takeUntil","range","n","Array","keys","BattleMapService","sessionStorageService","tokensS$","BehaviorSubject","tokens$","gridMap$","selectedTokenS$","selectedToken$","selectedSquareS$","selectedSquare$","squareSelectableS$","squareSelectable$","tokenSelectableS$","tokenSelectable$","tokenSizeS$","tokenSize$","hoveringSquareS$","hoveringSquare$","highlightedSquares$","squareSelectable","tokenSize","selectedToken","hoveringSquare","EMPTY_READONLY_ARRAY","squares","flat","debounceTime","viewBox$","scaleS$","scale$","throttleTime","positionS$","position$","token","tokenSelectable","transform","tokens","produce","oldSelectedToken","newToken","find","tokenLabel","updateTokens","selectToken","length","selectable","factor","position","tokenId","s","DrawingColor","DrawingWidth","AbstractModeBasedService","activeS$","active$","onDeactivate$","onActivate","PlayModeService","battleMapService","setTokenSelectable","setSquareSelectable","selectSquare","distinctUntilChanged","a1","a2","a","b","selectedSquare","forEach","DrawingService","paneS$","pane$","drawingColorS$","red","drawingColor$","drawingWidthS$","m","drawingWidth$","drawingModeS$","drawingMode$","points$","pane","currentDrawing","drawingColor","drawingWidth","point","withPointAdded","panePreview","withDrawingAdded","error","withId","drawingMode","TokenType","border","AssetService","defaultStrokeColor","tokenTypes","tokenLabels","is","isEqualToOneOf","some","ModeBasedService","mode$","services","disposeSubject","disposeLastState","mode","service","activate","console","log","ManageTokenService","assetService","mode$S","tap","modeCallbacks","deactivate$","setTokenSize","tokenType$","tokenLabel$","addToken","removeSelectedToken","inactive","isSwitchTokenType$","tokenTypeS$","tokenLabelS$","controlServices","ModeService","initalMode","modeBasedServices","modeS$","untilDisposed","SaveSessionService","onLoad","toStore","sessionS$","session$","gridMapS$","auditTime","saveSession","store","valuesToStore","onLoadSubject","flatMap","sessionName","of","throwError","findBy","loadedSession","loadedData","content","subject","observable","data","with","toLocaleString","catchError","DisplayBackgroundImage","asTransformString","xlinkHref","useObservable","observable$","defaultValue","dependencies","observableState","setObservableState","toSubscribe","subscription","unsubscribe","classesMap","classNameMap","DisplayToken","tokenClasses","fill","stroke","cx","cy","DisplayTokens","pointInSvgFromEvent","e","element","currentTarget","svgPoint","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","DrawingCapturePane","drawingService","pointSubject","setPointSubject","onPointerDown","setPointerCapture","pointerId","currentlyDrawing","onPointerUp","releasePointerCapture","completeDrawing","onPointerCancel","onPointerMove","pointInSvg","drawingPane","points","svgPath","removeDrawing","ZoomPane","setFactor","pos","setPos","startPosBead","setStartPosBead","paneRef","moving","setMoving","updateFactor","diffX","switchScale","onBeadMouseMove","onBeadMouseDown","onBeadMouseUp","updatePosition","currentPos","diffY","movePosition","ceil","onPointerDownCapture","onPointerMoveCapture","onPointerUpCapture","BattleGrid","BackgroundGrid","SelectionGrid","highlightedSquares","onHover","highlightedMap","toCoordinateString","highlighted","onMouseOver","PlayMap","backgroundDrawingService","notesDrawingService","modeService","viewBox","notesDrawing","zoomActive","toViewBoxString","hoverOverSquare","ControlBarButton","classes","text","iconSize","tooltip","iconHeight","additionalClasses","title","iconSizeByWidth","l","DrawingControlBar","drawingModeButton","switchDrawingMode","Pencil","Pulse","switchDrawingWidth","widthButton","Paintcan","switchDrawingColor","colorButton","ModeControlBar","modeButton","activeInMode","switchMode","GitCompare","Octoface","Note","Search","ManageTokenControlBar","manageTokenService","currentMode","Plus","btn","ControlBar","LayoutGrid","items","columns","component","item","idx","TokenTypeSelection","svgSize","maxTokenSize","Modal","onOk","okEnabled","onCancel","buttonText","header","open","modalElementRef","useLayoutEffect","$","modal","on","tabIndex","disabled","undefined","AddTokenModal","showModal","selectedTokenType","selectedTokenLabel","selectedTokenSize","setTokenType","setTokenLabel","Layout","props","NoSessionsFound","PlayPage","setServices","sessionLoaded","setSessionLoaded","saveSessionService","playModeService","zoom","add","tokensJson","mappedTokens","tokenJson","tokenTypeForName","withCurrentDrawingRemoved","paneJson","setPane","fromJson","loadAndStart","toPromise","then","result","dispose","IndexedDbStorageProvider","db","Dexie","blobs","version","stores","TABLE_NAME","table","fromPromise","get","entry","toArray","put","playAction","findCurrentSession","descriptionText","actionText","section","newSessionAction","count","newSessions","showSessionsAction","showGridMapsAction","StartSection","hero","index","StartSectionItem","StartPage","actions","action","take","entries","sectionIndex","sectionName","actionIndex","GridMap","STORAGE_KEY_PREFIX","startsWith","copy","assign","Transformation","BackgroundImage","AbstractStorage","storageProvider","isStorageKey","toStorageKey","parseJson","keyToStorageKey","listKeys","observables","loadObject","forkJoin","array","objectKey","jsonString","JSON","stringify","set","parse","remove","GridMapStorage","storageKey","Session","CURRENT_SESSION_STORAGE_KEY","SessionStorage","ImageUpload","initialUrl","onApply","imageUrl","setImageUrl","onChange","files","file","reader","FileReader","onloadend","readAsDataURL","htmlFor","Check","useDragSvg","config","draggingRef","returnedDragging","setReturnedDragging","startPoint","configRef","setDragging","dragging","eventHandler","svgTarget","onStart","onMove","document","addEventListener","p1","p2","sqrt","pow","onFinished","removeEventListener","SelectionRect","selectionRect","setSelectionRect","updateRect","rect","strokeSize","dragRect","max","useDragCorner","changeRect","dragCornerMatrix","fillOpacity","strokeDasharray","strokeWidth","drag","strokeOpacity","ViewControls","transformationFromProps","onTransformationChange","setTransformation","updateTransformation","t","DiffAdded","DiffRemoved","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","viewPositionToLabel","center","PlaceSquare","viewPosition","default","setRect","style","PreviewGrid","imageTransformation","viewTransformation","setViewTransformation","xSquareCount","ySquareCount","TransformationSetup","onStep","rect1","setRect1","r1","r2","averageA","distanceX","abs","calculatedAX","round","distanceY","calculatedA","calculateTransformation","AddMetadata","onSave","setName","Tag","placeholder","StepIndicator","steps","activeIndex","indexOf","step","future","Star","ChevronRight","Verified","upload","selectSquare1","selectSquare2","previewGrid","metadata","NewGridMap","setImage","setStep","saveGridMap","resetScrolling","X","img","Image","onload","ImageModel","setImageFromUrl","NewGridMapPage","navigateToStart","gridMapImage","selectBackground","StartSession","setBackgroundName","NoGridMapsFound","NewSessionPage","noGridMaps","opensource","page","licence","licenceUrl","Bootstrap","RxJS","Typescript","Octicons","Formik","Immer","JQuery","OpenSourcePage","SettingToggle","localStorage","getItem","setItem","settingStorage","redirectToAbout","RedirectToAboutOnFirstVisit","HomeButton","Home","links","Legal","Law","Key","AppPage","noBackground","noHomeButton","noRedirectToAboutOnFirstVisit","backgroundImage","AssetsPage","Boolean","window","location","hostname","match","shim","ReactDOM","render","exact","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5a4843ee.chunk.js","sourcesContent":["import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n}\n\nexport const ListGroup: FC<Props> = ({ className, children }: Props) => {\n  return <div className={`list-group ${className || \"\"}`}>{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n  className?: string;\n  active?: boolean;\n  onClick?: () => void;\n}\n\nexport const ListGroupItemAction: FC<Props> = ({\n  children,\n  className,\n  active,\n  onClick\n}: Props) => {\n  return (\n    <a\n      href=\"#\"\n      onClick={event => {\n        event.preventDefault();\n        onClick && onClick();\n      }}\n      className={`list-group-item list-group-item-action ${className} ${\n        active ? \"active\" : \"\"\n      }`}\n    >\n      {children}\n    </a>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const MediaContainer: FC<Props> = ({ children }: Props) => {\n  return <div className=\"media\">{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const MediaBody: FC<Props> = ({ children }: Props) => {\n  return <div className=\"media-body\">{children}</div>;\n};\n","import React, { FC } from \"react\";\nimport { ListGroup } from \"./listgroup/ListGroup\";\nimport { ListGroupItemAction } from \"./listgroup/ListGroupItemAction\";\nimport { GridMap } from \"../model/GridMap\";\nimport { MediaContainer } from \"./media/MediaContainer\";\nimport { MediaBody } from \"./media/MediaBody\";\n\ninterface Props {\n  gridMaps: ReadonlyArray<GridMap>;\n  selected: GridMap | null;\n  onSelect: (selected: GridMap) => void;\n}\n\nexport const GridMapList: FC<Props> = ({\n  gridMaps,\n  selected,\n  onSelect\n}: Props) => {\n  return (\n    <ListGroup>\n      {Object.values(gridMaps).map(gridMap => (\n        <ListGroupItemAction\n          // className=\"gridMap-list_item\"\n          active={gridMap === selected}\n          key={gridMap.name}\n          onClick={() => onSelect(gridMap)}\n        >\n          <MediaContainer>\n            <MediaBody>\n              <h4>{gridMap.name}</h4>\n              <dl className=\"row\">\n                <dt className=\"col-sm-3\">Size in Squares</dt>\n                <dd className=\"col-sm-9\">\n                  {gridMap.getWidthInSquares()}x{gridMap.getHeightInSquares()}\n                </dd>\n\n                <dt className=\"col-sm-3\">Scale</dt>\n                <dd className=\"col-sm-9\">{gridMap.transformation.scale}</dd>\n\n                <dt className=\"col-sm-3\">X Offset</dt>\n                <dd className=\"col-sm-9\">{gridMap.transformation.dx}</dd>\n\n                <dt className=\"col-sm-3\">Y Offset</dt>\n                <dd className=\"col-sm-9\">{gridMap.transformation.dy}</dd>\n              </dl>\n            </MediaBody>\n            <img\n              className=\"ml-3 img-thumbnail image-300\"\n              src={gridMap.image.url}\n            />\n          </MediaContainer>\n        </ListGroupItemAction>\n      ))}\n    </ListGroup>\n  );\n};\n","import React, { FC, ReactNode, useRef } from \"react\";\n\ninterface Props {\n  heading: ReactNode;\n  children?: ReactNode;\n}\n\nexport const ResetScrolling = React.createContext<() => void>(() => {});\n\nexport const FullPageWithHeading: FC<Props> = ({\n  heading,\n  children\n}: Props) => {\n  const onResetScrolling = (): void => {\n    if (ref.current) {\n      ref.current.scrollTo(0, 0);\n    }\n  };\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  return (\n    <>\n      <div\n        ref={ref}\n        className=\"container h-100 scrollable-y full-page-with-heading_content-container\"\n      >\n        <div className=\"container text-center full-page-with-heading_heading-container\">\n          {heading}\n        </div>\n        <ResetScrolling.Provider value={onResetScrolling}>\n          {children}\n        </ResetScrolling.Provider>\n      </div>\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const ExplanationBox: FC<Props> = ({ children }: Props) => {\n  return <div className=\"alert alert-primary\">{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  icon: Icon;\n  headline: string;\n  children?: ReactNode;\n}\n\nexport const PageHeader: FC<Props> = ({ icon, headline, children }: Props) => {\n  return (\n    <>\n      <h1>\n        {/*<Octicon icon={icon} size={40} />*/}\n        <span className=\"ml-4\">{headline}</span>\n      </h1>\n      {children}\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Icon } from \"@primer/octicons-react\";\nimport { PageHeader } from \"./PageHeader\";\n\ninterface Props {\n  icon: Icon;\n  headline: string;\n  children: ReactNode;\n}\n\nexport const PageHeaderWithButtons: FC<Props> = ({\n  icon,\n  headline,\n  children\n}: Props) => {\n  return (\n    <PageHeader icon={icon} headline={headline}>\n      <div className=\"ml-5 mt-3 mb-3 text-left\">\n        {React.Children.map(children, (child, i) => (\n          <>\n            {i !== 0 && <span className=\"ml-2\" />}\n            {child}\n          </>\n        ))}\n      </div>\n    </PageHeader>\n  );\n};\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport { GridMapStorage } from \"../services/GridMapStorage\";\nimport { GridMap } from \"../model/GridMap\";\nimport { GridMapList } from \"../common/GridMapList\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, { FileMedia, Trashcan } from \"@primer/octicons-react\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { PageHeaderWithButtons } from \"../common/PageHeaderWithButtons\";\n\ninterface Props {\n  gridMapStorage: GridMapStorage;\n}\n\nexport const GridMapsPage: FC<Props> = ({ gridMapStorage }: Props) => {\n  const [selected, setSelected] = useState<GridMap | null>(null);\n  const [gridMaps, setGridMaps] = useState<ReadonlyArray<GridMap>>([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const reload = useCallback((): void => {\n    gridMapStorage.findAll().subscribe({ next: setGridMaps });\n  }, [gridMapStorage]);\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  const heading = (\n    <PageHeaderWithButtons icon={FileMedia} headline=\"Manage Maps\">\n      {selected && (\n        <>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger ml-2\"\n            onClick={() => {\n              gridMapStorage.delete(selected.name);\n              setSelected(null);\n              reload();\n            }}\n          >\n            <Octicon icon={Trashcan} />\n            Delete Selected Map\n          </button>\n        </>\n      )}\n    </PageHeaderWithButtons>\n  );\n\n  return (\n    <>\n      <FullPageWithHeading heading={heading}>\n        <ExplanationBox>\n          <strong>Maps</strong> are stored images with a grid drawn over them.\n          <br />\n          You create a map by selecting an image file on your computer and\n          configure a grid for them. The images are stored locally in your\n          browser local storage and are not sent to the internet.\n        </ExplanationBox>\n        <div>\n          <div className=\"col-md-12\">\n            <GridMapList\n              gridMaps={gridMaps}\n              selected={selected}\n              onSelect={setSelected}\n            />\n          </div>\n        </div>\n      </FullPageWithHeading>\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { ListGroupItemAction } from \"../../common/listgroup/ListGroupItemAction\";\nimport { MediaContainer } from \"../../common/media/MediaContainer\";\nimport { MediaBody } from \"../../common/media/MediaBody\";\nimport { ListGroup } from \"../../common/listgroup/ListGroup\";\nimport { Session } from \"../../model/Session\";\nimport { GridMap } from \"../../model/GridMap\";\nimport { Dict } from \"../../utils/types\";\n\ninterface Props {\n  sessions: ReadonlyArray<Session>;\n  gridMapsForName: Readonly<Dict<GridMap>>;\n  children?: (session: Session) => ReactNode;\n}\n\nexport const SessionList: FC<Props> = ({\n  sessions,\n  gridMapsForName,\n  children\n}: Props) => {\n  return (\n    <ListGroup>\n      {sessions.map(session => {\n        const gridMap = gridMapsForName[session.gridMapName];\n\n        return (\n          <ListGroupItemAction key={session.name}>\n            <MediaContainer>\n              <MediaBody>\n                <h4>{session.name}</h4>\n                <dl className=\"row\">\n                  {gridMap && (\n                    <>\n                      <dt className=\"col-sm-3\">Map</dt>\n                      <dd className=\"col-sm-9\">\n                        {gridMap.name} ({gridMap.getWidthInSquares()}x\n                        {gridMap.getHeightInSquares()})\n                      </dd>\n                    </>\n                  )}\n\n                  <dt className=\"col-sm-3\">Date</dt>\n                  <dd className=\"col-sm-9\">{session.date}</dd>\n                </dl>\n                {!gridMap && (\n                  <span className=\"badge badge-pill badge-danger\">\n                    Invalid: Background is missing\n                  </span>\n                )}\n                <div>{children && children(session)}</div>\n              </MediaBody>\n              {gridMap && (\n                <img\n                  src={gridMap.image.url}\n                  className=\"img-thumbnail image-200\"\n                />\n              )}\n            </MediaContainer>\n          </ListGroupItemAction>\n        );\n      })}\n    </ListGroup>\n  );\n};\n","import { Dict } from \"./types\";\n\nexport function arrayToDict<T>(\n  list: ReadonlyArray<T>,\n  fn: (t: T) => string\n): Readonly<Dict<T>> {\n  return list.reduce(\n    (dict, value) => {\n      dict[fn(value)] = value;\n      return dict;\n    },\n    {} as Dict<T>\n  );\n}\n","import { useContext } from \"react\";\nimport {\n  __RouterContext as RouterContext,\n  RouteComponentProps\n} from \"react-router\";\n\nexport const useRouter = (): RouteComponentProps => {\n  return useContext(RouterContext);\n};\n","import { useRouter } from \"./useRouter\";\n\nexport const useNavigation = <T extends string[]>(\n  ...destinations: T\n): { [K in keyof T]: () => void } => {\n  const router = useRouter();\n  return destinations.map(destination => () => {\n    router.history.push(destination);\n  }) as any;\n};\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { Session } from \"../model/Session\";\nimport { SessionStorage } from \"../services/SessionStorage\";\nimport { GridMapStorage } from \"../services/GridMapStorage\";\nimport { GridMap } from \"../model/GridMap\";\nimport { Dict } from \"../utils/types\";\nimport Octicon, { Play, Repo, Trashcan } from \"@primer/octicons-react\";\nimport { SessionList } from \"./SessionsPage/SessionList\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { combineLatest } from \"rxjs\";\nimport { arrayToDict } from \"../utils/arrayToDict\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { useNavigation } from \"../utils/useNavigation\";\nimport { routing } from \"../App\";\n\ninterface Props {\n  gridMapStorage: GridMapStorage;\n  sessionStorage: SessionStorage;\n}\n\nexport const SessionsPage: FC<Props> = ({\n  gridMapStorage,\n  sessionStorage\n}: Props) => {\n  const [sessions, setSessions] = useState<ReadonlyArray<Session>>([]);\n  const [gridMapsForName, setGridMapForName] = useState<\n    Readonly<Dict<GridMap>>\n  >({});\n\n  const reload = useCallback((): void => {\n    combineLatest([\n      sessionStorage.findAll(),\n      gridMapStorage.findAll(),\n      sessionStorage.findCurrentSessionName()\n    ]).subscribe({\n      next: ([sessions, gridMaps, sessionName]) => {\n        setSessions(sessions);\n        setGridMapForName(arrayToDict(gridMaps, gridMap => gridMap.name));\n      }\n    });\n  }, [sessionStorage, gridMapStorage]);\n\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  const [navigateToPlay] = useNavigation(routing.play);\n\n  const heading = <PageHeader icon={Repo} headline=\"Sessions\" />;\n\n  return (\n    <FullPageWithHeading heading={heading}>\n      <ExplanationBox>\n        <strong>Sessions</strong> are the place where all token positions on the\n        map and all drawings are stored.\n        <br />\n        You can switch between sessions on this screen so you can come back to a\n        game later ...\n      </ExplanationBox>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <SessionList sessions={sessions} gridMapsForName={gridMapsForName}>\n            {session => (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary mr-2\"\n                  onClick={() => {\n                    sessionStorage.storeCurrentSessionName(session.name);\n                    navigateToPlay();\n                  }}\n                >\n                  <Octicon icon={Play} />\n                  Start Session\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => {\n                    sessionStorage.delete(session.name);\n                    reload();\n                  }}\n                >\n                  <Octicon icon={Trashcan} />\n                  Delete Session\n                </button>\n              </>\n            )}\n          </SessionList>\n        </div>\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","import React, { FC } from \"react\";\n\ninterface Props {}\n\nexport const ManageTokenTypesPage: FC<Props> = ({  }: Props) => {\n  return (\n    <>\n      <h1>Manage Token Types</h1>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { Milestone } from \"@primer/octicons-react\";\n\ninterface Props {}\n\nexport const IntroSection: FC<Props> = ({  }: Props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <p>\n          <strong>Gridheim</strong> is a digital grid map. Grid maps are used\n          for pen&pencil roll playing games (like D&D, pathfinder, etc.) to show\n          the position of characters and monsters on a map of the environment.\n        </p>\n\n        <h5 className=\"mt-5\">\n          <Octicon icon={Milestone} size={25} />\n          <span className=\"ml-3\">\n            The goals of <strong>Gridheim</strong> are ...{\" \"}\n          </span>\n        </h5>\n        <ul>\n          <li>A good user experience</li>\n          <li>Cross platform and cross device compatibility</li>\n          <li>Pen support</li>\n          <li>Offline support via service worker</li>\n          <li>\n            Data privacy - All data is only stored locally in your browser\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { MediaBody } from \"../../common/media/MediaBody\";\nimport Octicon, { GistSecret } from \"@primer/octicons-react\";\nimport { MediaContainer } from \"../../common/media/MediaContainer\";\n\ninterface Props {}\n\nexport const HelloSection: FC<Props> = ({  }: Props) => {\n  return (\n    <div className=\"card mt-5\">\n      <div className=\"card-body\">\n        <MediaContainer>\n          <MediaBody>\n            <h5>\n              <Octicon icon={GistSecret} size={25} />\n              <span className=\"ml-3\">\n                Hello my name is <strong>Otto</strong> ...\n              </span>\n            </h5>\n            <p>\n              ... and I&apos;m a Software Engineer at\n              <a href=\"https://comsystoreply.de/\"> Comsysto Reply </a>\n              nice to meet you!\n              <br />\n              <small>\n                <a href=\"https://comsystoreply.de/karriere\">\n                  (PS: we&apos;re hiring)\n                </a>\n              </small>\n            </p>\n            <p>\n              Let me explain to you why I created yet another map tool :D ...\n              <br />\n              It all begun when I searched for a way to visualise battles in my\n              D&D campaign.\n              <br />\n              The first approach was to use a physical map, which was nearly\n              impossible for the huge maps that are often used in campaign\n              books. The printout would be more than 2 meters in length.\n              <br />\n              The next thing we tried was to use a tablet with a pen. This works\n              quite smoothly because it has a similar usability than the pencil\n              drawn maps of my youth, but it was quite challenging to move the\n              tokens around. Every token has to be erased and drawn again in a\n              other location. So we tried finding a dedicated software that\n              would run on tablets, sadly we don&apos;t found one that has\n              worked with the pen which was a blast to use :D ...\n            </p>\n            <p>\n              In the mean time I was building some dashboard prototypes at work\n              that uses SVG graphics together with React which has quite similar\n              characteristics ...\n              <br />\n              ... so I decided to give it a try, how hard can it be XD\n            </p>\n          </MediaBody>\n          <img\n            className=\"img-thumbnail mr-3\"\n            src=\"https://www.gravatar.com/avatar/6f1aded52d041be71a1f5168c6b7e7dd?s=250\"\n          />\n        </MediaContainer>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FileMedia, Info, Play } from \"@primer/octicons-react\";\n\nexport const labels = Object.freeze({\n  playPage: {\n    controlBar: {\n      drawBackgroundButton:\n        \"Draw something that should be shown on the gridMap like spell effects, environment hazards etc.\",\n      drawNotesButton:\n        \"Open the notes pane where you can write some notes with a pen.\",\n      playButton: \"Enter play mode, so you can move tokens.\",\n      addTokensButton: \"Add a new token to the game board.\",\n      zoomButton: \"Zoom in or out and change orientation of the map.\"\n    }\n  },\n  newSessionPage: {\n    headline: \"Start New Session\",\n    explanation: (\n      <>\n        <strong>Sessions</strong> are the place where all token positions on the\n        map and all drawings are stored.\n        <br />\n        You can switch between sessions on this screen so you can come back to a\n        game later ...\n      </>\n    )\n  },\n  assetPage: {\n    headline: \"Used 3rd Party Assets\"\n  },\n  openSourcePage: {\n    headline: \"Used Open Source Components\"\n  },\n  aboutPage: {\n    headline: \"Let me tell you about Gridheim, Friend ...\",\n    startLink: \"Enough talk just start ...\"\n  },\n  startPage: {\n    headline: \"Welcome to Gridheim, Friend!\",\n    sections: {\n      play: {\n        headline: \"Play\",\n        icon: Play\n      },\n      gridMaps: {\n        headline: \"Maps\",\n        icon: FileMedia\n      },\n      info: {\n        headline: \"Info\",\n        icon: Info\n      }\n    },\n    about: {\n      description: \"TBD\",\n      button: \"About\"\n    },\n    openSource: {\n      description: \"TBD\",\n      button: \"Open Source\"\n    },\n    assets: {\n      description: \"TBD\",\n      button: \"3rd Party Assets\"\n    },\n    newGridMap: {\n      description: \"TBD\",\n      button: \"Add Map\"\n    },\n    newSession: {\n      description: \"TBD\",\n      button: \"Start New Session\"\n    },\n    play: {\n      description: \"TBD\",\n      button: \"Continue Session\"\n    },\n    showGridMaps: {\n      description: \"TBD\",\n      button: \"Manage Maps\"\n    },\n    showSessions: {\n      description: \"TBD\",\n      button: \"Manage Sessions\"\n    }\n  }\n});\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, { Info, Play } from \"@primer/octicons-react\";\nimport { routing } from \"../App\";\nimport { Link } from \"react-router-dom\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { IntroSection } from \"./AboutPage/IntroSection\";\nimport { HelloSection } from \"./AboutPage/HelloSection\";\nimport { labels } from \"../data/labels\";\n\ninterface Props {}\n\nexport const AboutPage: FC<Props> = ({  }: Props) => {\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader icon={Info} headline={labels.aboutPage.headline}>\n          <Link to={routing.start}>\n            <Octicon icon={Play} /> {labels.aboutPage.startLink}\n          </Link>\n        </PageHeader>\n      }\n    >\n      <IntroSection />\n      <HelloSection />\n    </FullPageWithHeading>\n  );\n};\n","import { immerable } from \"immer\";\n\nexport function Immerable(): ClassDecorator {\n  return (target: any) => {\n    target[immerable] = true;\n  };\n}\n","import { TokenType } from \"./TokenType\";\nimport { Immerable } from \"../utils/Immerable\";\nimport { Square } from \"./Square\";\n\n@Immerable()\nexport class Token {\n  constructor(\n    readonly id: string,\n    readonly tokenType: TokenType,\n    readonly label: string,\n    readonly square: Square,\n    readonly size: number = tokenType.size\n  ) {}\n}\n","import { Immerable } from \"../utils/Immerable\";\n\n@Immerable()\nexport class Square {\n  constructor(readonly x: number, readonly y: number) {}\n\n  toCoordinateString(): string {\n    return `${this.x}/${this.y}`;\n  }\n}\n","import { DrawingColor } from \"./DrawingColor\";\nimport { DrawingWidth } from \"./DrawingWidth\";\n\nexport class Drawing {\n  static current(color: DrawingColor, width: DrawingWidth): Drawing {\n    return new Drawing(Drawing.CURRENT_ID, [], color, width);\n  }\n\n  static readonly CURRENT_ID = \"current\";\n\n  readonly current = this.id === Drawing.CURRENT_ID;\n\n  constructor(\n    readonly id: string,\n    readonly path: ReadonlyArray<[number, number]>,\n    readonly color: DrawingColor,\n    readonly width: DrawingWidth\n  ) {}\n\n  get svgPath(): string {\n    return this.path.map(p => `${p[0]},${p[1]}`).join(\" \");\n  }\n\n  withPointAdded(x: number, y: number): Drawing {\n    return new Drawing(this.id, [...this.path, [x, y]], this.color, this.width);\n  }\n\n  withId(id: string): Drawing {\n    return new Drawing(id, this.path, this.color, this.width);\n  }\n}\n","import { Drawing } from \"./Drawing\";\n\nexport class DrawingPane {\n  static fromJson(json: any): DrawingPane {\n    const drawings = json.drawings.map(\n      (drawingJson: any) =>\n        new Drawing(\n          drawingJson.id,\n          drawingJson.path,\n          drawingJson.color,\n          drawingJson.width\n        )\n    );\n    return new DrawingPane(drawings);\n  }\n\n  constructor(readonly drawings: ReadonlyArray<Drawing>) {}\n\n  withDrawingAdded(drawing: Drawing): DrawingPane {\n    return new DrawingPane([...this.drawings, drawing]);\n  }\n\n  withCurrentDrawingRemoved(): DrawingPane {\n    return this.withDrawingRemoved(Drawing.CURRENT_ID);\n  }\n\n  withDrawingRemoved(drawingId: string): DrawingPane {\n    return new DrawingPane(this.drawings.filter(d => d.id !== drawingId));\n  }\n}\n","import { Immerable } from \"../utils/Immerable\";\n\n@Immerable()\nexport class ViewBox {\n  constructor(\n    readonly x: number,\n    readonly y: number,\n    readonly width: number,\n    readonly height: number\n  ) {}\n\n  toViewBoxString(): string {\n    return `${this.x} ${this.y} ${this.width} ${this.height}`;\n  }\n}\n","export function uuid(): string {\n  // Public Domain/MIT\n  // Based on https://stackoverflow.com/a/8809472\n  let d = new Date().getTime();\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now(); //use high-precision timer if available\n  }\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nexport abstract class AbstractService {\n  private readonly disposeS$ = new Subject<void>();\n  protected readonly dispose$ = this.disposeS$.asObservable();\n\n  dispose(): void {\n    this.disposeS$.next();\n    this.disposeS$.complete();\n  }\n\n  protected untilDisposed<T>(o: Observable<T>): Observable<T> {\n    return o.pipe(takeUntil(this.dispose$));\n  }\n}\n","export const range = (n: number): ReadonlyArray<number> => [...Array(n).keys()];\n","import { ViewBox } from \"../../../model/ViewBox\";\nimport { Token } from \"../../../model/Token\";\nimport { BehaviorSubject, combineLatest, Observable } from \"rxjs\";\nimport { Square } from \"../../../model/Square\";\nimport produce, { Draft } from \"immer\";\nimport { TokenType } from \"../../../model/TokenType\";\nimport { uuid } from \"../../../utils/uuid\";\nimport { debounceTime, map, throttleTime } from \"rxjs/operators\";\nimport { AbstractService } from \"../../../services/AbstractService\";\nimport { SaveSessionService } from \"./SaveSessionService\";\nimport { range } from \"../../../utils/range\";\n\nexport class BattleMapService extends AbstractService {\n  private static readonly EMPTY_READONLY_ARRAY: ReadonlyArray<\n    any\n  > = Object.freeze([]);\n\n  private readonly tokensS$ = new BehaviorSubject<ReadonlyArray<Token>>([]);\n\n  readonly tokens$ = this.tokensS$.asObservable();\n\n  readonly gridMap$ = this.sessionStorageService.gridMap$;\n\n  private selectedTokenS$ = new BehaviorSubject<Token | null>(null);\n  readonly selectedToken$ = this.selectedTokenS$.asObservable();\n\n  private readonly selectedSquareS$ = new BehaviorSubject<Square | null>(null);\n  readonly selectedSquare$ = this.selectedSquareS$.asObservable();\n\n  private readonly squareSelectableS$ = new BehaviorSubject<boolean>(false);\n  readonly squareSelectable$ = this.squareSelectableS$.asObservable();\n\n  private readonly tokenSelectableS$ = new BehaviorSubject<boolean>(false);\n  readonly tokenSelectable$ = this.tokenSelectableS$.asObservable();\n\n  private readonly tokenSizeS$ = new BehaviorSubject<number>(1);\n  readonly tokenSize$ = this.tokenSizeS$.asObservable();\n\n  private readonly hoveringSquareS$ = new BehaviorSubject<Square | null>(null);\n  readonly hoveringSquare$ = this.hoveringSquareS$.asObservable();\n\n  public readonly highlightedSquares$: Observable<\n    ReadonlyArray<Square>\n  > = combineLatest([\n    this.squareSelectable$,\n    this.tokenSize$,\n    this.selectedToken$,\n    this.hoveringSquare$\n  ]).pipe(\n    map(([squareSelectable, tokenSize, selectedToken, hoveringSquare]) => {\n      if (!hoveringSquare || !squareSelectable) {\n        return BattleMapService.EMPTY_READONLY_ARRAY;\n      }\n\n      const size = selectedToken ? selectedToken.size : tokenSize;\n      const squares = range(size).map(dx =>\n        range(size).map(\n          dy => new Square(hoveringSquare.x + dx, hoveringSquare.y + dy)\n        )\n      );\n      return Object.freeze(squares.flat());\n    }),\n    debounceTime(50)\n  );\n\n  readonly viewBox$ = this.gridMap$.pipe(\n    map(map =>\n      map\n        ? new ViewBox(0, 0, map.getWidthInSquares(), map.getHeightInSquares())\n        : new ViewBox(0, 0, 0, 0)\n    )\n  );\n\n  private readonly scaleS$ = new BehaviorSubject(1);\n  readonly scale$ = this.scaleS$.asObservable().pipe(throttleTime(200));\n\n  private readonly positionS$ = new BehaviorSubject({ x: 0, y: 0 });\n  readonly position$ = this.positionS$.asObservable().pipe(throttleTime(200));\n\n  constructor(private readonly sessionStorageService: SaveSessionService) {\n    super();\n  }\n\n  selectToken(token: Token | null): void {\n    if (this.tokenSelectable) {\n      this.selectedTokenS$.next(token);\n    }\n  }\n\n  get selectedToken(): Token | null {\n    return this.selectedTokenS$.value;\n  }\n\n  selectSquare(square: Square | null): void {\n    this.selectedSquareS$.next(square);\n  }\n\n  updateTokens(\n    transform: (tokens: Draft<Token>[]) => Draft<Token[]> | void\n  ): void {\n    const tokens = produce(this.tokensS$.value, transform);\n    this.tokensS$.next(tokens);\n\n    const oldSelectedToken = this.selectedTokenS$.value;\n    if (oldSelectedToken) {\n      const newToken = this.tokensS$.value.find(\n        token => oldSelectedToken.id === token.id\n      );\n      this.selectedTokenS$.next(newToken || null);\n    }\n  }\n\n  addToken(\n    tokenType: TokenType,\n    tokenLabel: string,\n    tokenSize: number,\n    square: Square\n  ): void {\n    this.updateTokens(tokens => {\n      tokens.push(new Token(uuid(), tokenType, tokenLabel, square, tokenSize));\n    });\n    const tokens = this.tokensS$.value;\n    this.selectToken(tokens[tokens.length - 1]);\n  }\n\n  setSquareSelectable(selectable: boolean): void {\n    this.squareSelectableS$.next(selectable);\n  }\n\n  get squareSelectable(): boolean {\n    return this.squareSelectableS$.value;\n  }\n\n  setTokenSelectable(selectable: boolean): void {\n    this.tokenSelectableS$.next(selectable);\n  }\n\n  get tokenSelectable(): boolean {\n    return this.tokenSelectableS$.value;\n  }\n\n  switchScale(factor: number): void {\n    this.scaleS$.next(1 + factor * 0.1);\n  }\n\n  get scale(): number {\n    return this.scaleS$.value;\n  }\n\n  get position(): { x: number; y: number } {\n    return this.positionS$.value;\n  }\n\n  get tokenSize(): number {\n    return this.tokenSizeS$.value;\n  }\n\n  movePosition(dx: number, dy: number): void {\n    const { x, y } = this.position;\n    this.positionS$.next({ x: x + dx, y: y + dy });\n  }\n\n  removeSelectedToken(): void {\n    if (this.selectedToken !== null) {\n      const tokenId = this.selectedToken.id;\n      this.updateTokens(tokens => {\n        return tokens.filter(token => token.id !== tokenId);\n      });\n    }\n  }\n\n  hoverOverSquare(s: Square | null): void {\n    this.hoveringSquareS$.next(s);\n  }\n\n  setTokenSize(tokenSize: number): void {\n    this.tokenSizeS$.next(tokenSize);\n  }\n}\n","export enum DrawingColor {\n  red = \"red\",\n  yellow = \"yellow\",\n  blue = \"blue\",\n  green = \"green\",\n  purple = \"purple\",\n  orange = \"orange\"\n}\n","export enum DrawingWidth {\n  s = \"s\",\n  m = \"m\",\n  l = \"l\"\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { ModeBasedService } from \"../App/PlayPage/services/modebased/ModeBasedService\";\nimport { AbstractService } from \"./AbstractService\";\n\nexport abstract class AbstractModeBasedService extends AbstractService\n  implements ModeBasedService {\n  private readonly activeS$ = new BehaviorSubject(false);\n  readonly active$ = this.activeS$.asObservable();\n\n  activate(onDeactivate$: Observable<void>): void {\n    this.onActivate(onDeactivate$);\n    onDeactivate$.subscribe({\n      next: () => this.activeS$.next(false)\n    });\n    this.activeS$.next(true);\n  }\n\n  abstract onActivate(onDeactivate$: Observable<void>): void;\n\n  get active(): boolean {\n    return this.activeS$.value;\n  }\n}\n","import { BattleMapService } from \"../BattleMapService\";\nimport { combineLatest, Observable } from \"rxjs\";\nimport { distinctUntilChanged, takeUntil } from \"rxjs/operators\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\n\nexport class PlayModeService extends AbstractModeBasedService {\n  constructor(private readonly battleMapService: BattleMapService) {\n    super();\n  }\n\n  onActivate(onDeactivate$: Observable<void>): void {\n    this.battleMapService.setTokenSelectable(true);\n    this.battleMapService.setSquareSelectable(true);\n    this.battleMapService.selectSquare(null);\n    this.battleMapService.selectToken(null);\n\n    combineLatest([\n      this.battleMapService.selectedToken$,\n      this.battleMapService.selectedSquare$\n    ])\n      .pipe(\n        takeUntil(onDeactivate$),\n        distinctUntilChanged((a1, a2) => a1 === a2, ([a, b]) => `${a}/${b}`)\n      )\n      .subscribe(([selectedToken, selectedSquare]) => {\n        if (selectedToken && !selectedSquare) {\n          this.battleMapService.setSquareSelectable(true);\n        }\n        if (!selectedToken && !selectedSquare) {\n          this.battleMapService.setSquareSelectable(false);\n        }\n        if (selectedToken && selectedSquare) {\n          this.battleMapService.selectSquare(null);\n          this.battleMapService.updateTokens(tokens => {\n            tokens\n              .filter(token => token.id === selectedToken.id)\n              .forEach(token => (token.square = selectedSquare));\n          });\n        }\n      });\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { Drawing } from \"../../../../model/Drawing\";\nimport { DrawingPane } from \"../../../../model/DrawingPane\";\nimport { uuid } from \"../../../../utils/uuid\";\nimport { DrawingColor } from \"../../../../model/DrawingColor\";\nimport { DrawingWidth } from \"../../../../model/DrawingWidth\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\n\nexport type DrawingMode = \"draw\" | \"erase\";\n\nexport class DrawingService extends AbstractModeBasedService {\n  private readonly paneS$ = new BehaviorSubject(new DrawingPane([]));\n  readonly pane$ = this.paneS$.asObservable();\n\n  private readonly drawingColorS$ = new BehaviorSubject<DrawingColor>(\n    DrawingColor.red\n  );\n  readonly drawingColor$ = this.drawingColorS$.asObservable();\n\n  private readonly drawingWidthS$ = new BehaviorSubject<DrawingWidth>(\n    DrawingWidth.m\n  );\n  readonly drawingWidth$ = this.drawingWidthS$.asObservable();\n\n  private readonly drawingModeS$ = new BehaviorSubject<DrawingMode>(\"draw\");\n  readonly drawingMode$ = this.drawingModeS$.asObservable();\n\n  currentlyDrawing(points$: Observable<[number, number]>): void {\n    if (!this.active) {\n      return;\n    }\n    const pane: DrawingPane = this.paneS$.value;\n    let currentDrawing = Drawing.current(this.drawingColor, this.drawingWidth);\n    points$.subscribe({\n      next: point => {\n        currentDrawing = currentDrawing.withPointAdded(...point);\n        const panePreview = pane.withDrawingAdded(currentDrawing);\n        this.paneS$.next(panePreview);\n      },\n      error: () => {\n        // on error reset the pane...\n        this.paneS$.next(pane);\n      },\n      complete: () => {\n        this.paneS$.next(pane.withDrawingAdded(currentDrawing.withId(uuid())));\n      }\n    });\n  }\n\n  removeDrawing(drawingId: string): void {\n    const pane: DrawingPane = this.paneS$.value;\n    this.paneS$.next(pane.withDrawingRemoved(drawingId));\n  }\n\n  switchDrawingColor(drawingColor: DrawingColor): void {\n    this.drawingColorS$.next(drawingColor);\n  }\n\n  get drawingColor(): DrawingColor {\n    return this.drawingColorS$.value;\n  }\n\n  switchDrawingWidth(drawingWidth: DrawingWidth): void {\n    this.drawingWidthS$.next(drawingWidth);\n  }\n\n  switchDrawingMode(drawingMode: DrawingMode): void {\n    this.drawingModeS$.next(drawingMode);\n  }\n\n  get drawingMode(): DrawingMode {\n    return this.drawingModeS$.value;\n  }\n\n  get drawingWidth(): DrawingWidth {\n    return this.drawingWidthS$.value;\n  }\n\n  setPane(pane: DrawingPane): void {\n    this.paneS$.next(pane);\n  }\n\n  onActivate(): void {}\n}\n","import { Immerable } from \"../utils/Immerable\";\n\n@Immerable()\nexport class TokenType {\n  constructor(\n    readonly size: number,\n    readonly color: string,\n    readonly border: string,\n    readonly name: string\n  ) {}\n}\n","import { TokenType } from \"../../../model/TokenType\";\nimport { AbstractService } from \"../../../services/AbstractService\";\n\nexport class AssetService extends AbstractService {\n  readonly defaultStrokeColor = \"#555555\";\n  readonly tokenTypes = [\n    new TokenType(1, \"#ff28fb\", \"#ffaaf3\", \"Mora\"),\n    new TokenType(1, \"#ff8902\", \"#ffd069\", \"Elsa\"),\n\n    new TokenType(1, \"#78cc85\", this.defaultStrokeColor, \"LightGreen\"),\n    new TokenType(1, \"#077919\", this.defaultStrokeColor, \"Green\"),\n    new TokenType(1, \"#98c6ff\", this.defaultStrokeColor, \"LightBlue\"),\n    new TokenType(1, \"#0282ff\", this.defaultStrokeColor, \"Blue\"),\n    new TokenType(1, \"#9f6a00\", this.defaultStrokeColor, \"LightBrown\"),\n    new TokenType(1, \"#513200\", this.defaultStrokeColor, \"Brown\"),\n    new TokenType(1, \"#ff5354\", this.defaultStrokeColor, \"LightRed\"),\n    new TokenType(1, \"#c70200\", this.defaultStrokeColor, \"Red\"),\n    new TokenType(1, \"#ffff8e\", this.defaultStrokeColor, \"LightYellow\"),\n    new TokenType(1, \"#ffef00\", this.defaultStrokeColor, \"Yellow\"),\n    new TokenType(1, \"#d67eff\", this.defaultStrokeColor, \"LightPurple\"),\n    new TokenType(1, \"#9f00d3\", this.defaultStrokeColor, \"Purple\"),\n    new TokenType(1, \"#f4e4ee\", this.defaultStrokeColor, \"LightGrey\"),\n    new TokenType(1, \"#645e5d\", this.defaultStrokeColor, \"DarkGrey\")\n  ];\n\n  tokenTypeForName(name: string): TokenType | null {\n    return this.tokenTypes.find(type => type.name === name) || null;\n  }\n\n  readonly tokenLabels = [\n    \" \",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"Boss\",\n    \"L1\",\n    \"L2\",\n    \"L3\",\n    \"M1\",\n    \"M2\",\n    \"M3\",\n    \"P1\",\n    \"P2\",\n    \"P3\"\n  ];\n}\n","export function is<T, R extends T>(...isEqualToOneOf: R[]): (v: T) => boolean {\n  return value => isEqualToOneOf.some(i => i === value);\n}\n","import { Observable, Subject } from \"rxjs\";\n\nexport interface ModeBasedService {\n  activate(onDeactivate: Observable<void>): void;\n}\n\nexport class ModeBasedService {\n  static controlServices<T extends string>(\n    mode$: Observable<T>,\n    services: { [K in T]: ModeBasedService | null }\n  ): void {\n    let disposeSubject: Subject<void> | null = null;\n    const disposeLastState = (): void => {\n      if (disposeSubject) {\n        disposeSubject.next();\n        disposeSubject.complete();\n        disposeSubject = null;\n      }\n    };\n    mode$.subscribe({\n      next: mode => {\n        disposeLastState();\n        if (mode) {\n          const service = services[mode];\n          if (service) {\n            disposeSubject = new Subject<void>();\n            service.activate(disposeSubject);\n          }\n        }\n      },\n      complete: () => {\n        console.log(\"mode based complete\");\n        disposeLastState();\n      },\n      error: () => {\n        disposeLastState();\n      }\n    });\n  }\n}\n","import { BattleMapService } from \"../BattleMapService\";\nimport { BehaviorSubject, combineLatest, Observable } from \"rxjs\";\nimport { map, takeUntil, tap } from \"rxjs/operators\";\nimport { TokenType } from \"../../../../model/TokenType\";\nimport { AssetService } from \"../AssetService\";\nimport { is } from \"../../../../utils/is\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\nimport { ModeBasedService } from \"./ModeBasedService\";\n\nexport type Mode =\n  | \"switch-token-type\"\n  | \"add-token\"\n  | \"remove-token\"\n  | \"inactive\";\n\nexport class ManageTokenService extends AbstractModeBasedService {\n  readonly mode$S = new BehaviorSubject<Mode>(\"add-token\");\n  readonly mode$ = this.mode$S\n    .asObservable()\n    .pipe(tap(m => console.log(\"manageTokenMode\", m)));\n\n  private readonly modeCallbacks: { [T in Mode]: ModeBasedService | null } = {\n    \"switch-token-type\": {\n      activate: () => {\n        this.battleMapService.setTokenSelectable(false);\n        this.battleMapService.setSquareSelectable(false);\n        this.battleMapService.selectSquare(null);\n        this.battleMapService.selectToken(null);\n      }\n    },\n\n    \"add-token\": {\n      activate: deactivate$ => {\n        this.battleMapService.setTokenSelectable(false);\n        this.battleMapService.setSquareSelectable(true);\n        this.battleMapService.selectSquare(null);\n        this.battleMapService.selectToken(null);\n        this.battleMapService.setTokenSize(this.tokenSizeS$.value);\n        combineLatest([\n          this.tokenType$,\n          this.tokenLabel$,\n          this.tokenSize$,\n          this.battleMapService.selectedSquare$\n        ])\n          .pipe(takeUntil(deactivate$))\n          .subscribe(([tokenType, tokenLabel, tokenSize, selectedSquare]) => {\n            if (selectedSquare && tokenType && tokenLabel && tokenSize) {\n              this.battleMapService.selectSquare(null);\n              this.battleMapService.addToken(\n                tokenType,\n                tokenLabel,\n                tokenSize,\n                selectedSquare\n              );\n            }\n          });\n\n        deactivate$.subscribe({\n          next: () => {\n            this.battleMapService.setTokenSize(1);\n          }\n        });\n      }\n    },\n\n    \"remove-token\": {\n      activate: deactivate$ => {\n        this.battleMapService.setTokenSelectable(true);\n        this.battleMapService.setSquareSelectable(false);\n        this.battleMapService.selectSquare(null);\n        this.battleMapService.selectToken(null);\n        combineLatest([\n          this.tokenType$,\n          this.tokenLabel$,\n          this.battleMapService.selectedToken$\n        ])\n          .pipe(takeUntil(deactivate$))\n          .subscribe(([tokenType, tokenLabel, selectedToken]) => {\n            if (selectedToken && tokenType && tokenLabel) {\n              this.battleMapService.removeSelectedToken();\n            }\n          });\n      }\n    },\n\n    inactive: null\n  };\n\n  readonly isSwitchTokenType$ = this.mode$.pipe(map(is(\"switch-token-type\")));\n\n  private readonly tokenTypeS$ = new BehaviorSubject<TokenType>(\n    this.assetService.tokenTypes[0]\n  );\n  readonly tokenType$ = this.tokenTypeS$.asObservable();\n\n  private readonly tokenLabelS$ = new BehaviorSubject<string>(\n    this.assetService.tokenLabels[0]\n  );\n  readonly tokenLabel$ = this.tokenLabelS$.asObservable();\n\n  private readonly tokenSizeS$ = new BehaviorSubject<number>(1);\n  readonly tokenSize$ = this.tokenSizeS$.asObservable();\n\n  constructor(\n    private readonly battleMapService: BattleMapService,\n    private readonly assetService: AssetService\n  ) {\n    super();\n  }\n\n  onActivate(deactivate$: Observable<void>): void {\n    ModeBasedService.controlServices(\n      this.mode$.pipe(takeUntil(deactivate$)),\n      this.modeCallbacks\n    );\n\n    deactivate$.subscribe({\n      next: () => {\n        this.mode$S.next(\"inactive\");\n      }\n    });\n\n    this.mode$S.next(\"add-token\");\n  }\n\n  setTokenType(tokenType: TokenType): void {\n    this.tokenTypeS$.next(tokenType);\n  }\n\n  get tokenType(): TokenType | null {\n    return this.tokenTypeS$.value;\n  }\n\n  get tokenLabel(): string | null {\n    return this.tokenLabelS$.value;\n  }\n\n  setTokenLabel(label: string): void {\n    this.tokenLabelS$.next(label);\n  }\n\n  get tokenSize(): number {\n    return this.tokenSizeS$.value;\n  }\n\n  setTokenSize(size: number): void {\n    this.tokenSizeS$.next(size);\n  }\n\n  switchMode(mode: Mode): void {\n    this.mode$S.next(mode);\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\nimport { ModeBasedService } from \"./modebased/ModeBasedService\";\nimport { AbstractService } from \"../../../services/AbstractService\";\n\nexport type Mode =\n  | \"play\"\n  | \"draw-background\"\n  | \"draw-notes\"\n  | \"manage-token\"\n  | \"zoom\";\n\nexport class ModeService extends AbstractService {\n  private readonly modeS$ = new BehaviorSubject<Mode>(this.initalMode);\n  readonly mode$ = this.modeS$.asObservable();\n\n  constructor(\n    private readonly initalMode: Mode,\n    modeBasedServices: { [T in Mode]: ModeBasedService | null }\n  ) {\n    super();\n    ModeBasedService.controlServices(\n      this.untilDisposed(this.mode$),\n      modeBasedServices\n    );\n  }\n\n  switchMode(mode: Mode): void {\n    this.modeS$.next(mode);\n  }\n\n  get mode(): Mode {\n    return this.modeS$.value;\n  }\n}\n","import { BehaviorSubject, Observable, of, Subject, throwError } from \"rxjs\";\nimport { auditTime, catchError, flatMap, map } from \"rxjs/operators\";\nimport { Session } from \"../../../model/Session\";\nimport { GridMap } from \"../../../model/GridMap\";\nimport { GridMapStorage } from \"../../../services/GridMapStorage\";\nimport { SessionStorage } from \"../../../services/SessionStorage\";\nimport { AbstractService } from \"../../../services/AbstractService\";\n\nexport class SaveSessionService extends AbstractService {\n  private onLoad: { [name: string]: Subject<any> } = {};\n  private toStore: { [name: string]: Observable<any> } = {};\n  private readonly sessionS$ = new BehaviorSubject<Session | null>(null);\n  readonly session$ = this.untilDisposed(this.sessionS$.asObservable());\n  private readonly gridMapS$ = new BehaviorSubject<GridMap | null>(null);\n  readonly gridMap$ = this.untilDisposed(this.gridMapS$.asObservable());\n\n  constructor(\n    private readonly gridMapStorage: GridMapStorage,\n    private readonly sessionStorage: SessionStorage\n  ) {\n    super();\n    this.session$.pipe(auditTime(10000)).subscribe({\n      next: () => {\n        console.log(\"saving session\", this.session);\n        this.saveSession();\n      }\n    });\n  }\n\n  saveSession(): void {\n    this.session && this.sessionStorage.store(this.session);\n  }\n\n  add<T>(name: string, valuesToStore: Observable<T>): Observable<T> {\n    const onLoadSubject = new Subject<T>();\n    this.onLoad = { ...this.onLoad, [name]: onLoadSubject };\n    this.toStore = { ...this.toStore, [name]: valuesToStore };\n    return onLoadSubject.asObservable();\n  }\n\n  loadAndStart(): Observable<boolean> {\n    return this.sessionStorage.findCurrentSessionName().pipe(\n      flatMap(sessionName =>\n        sessionName\n          ? of(sessionName!)\n          : throwError(\"No current session name found in local storage\")\n      ),\n      flatMap(sessionName => this.sessionStorage.findBy(sessionName)),\n      flatMap(session =>\n        session ? of(session) : throwError(\"Failed Loading Session\")\n      ),\n      flatMap(session =>\n        this.gridMapStorage\n          .findBy(session.gridMapName)\n          .pipe(map(gridMap => [session, gridMap] as const))\n      ),\n      flatMap(([session, gridMap]) =>\n        gridMap\n          ? of([session, gridMap] as const)\n          : throwError(\"Session with no gridMapName\")\n      ),\n      map(([loadedSession, gridMap]) => {\n        Object.keys(this.onLoad).forEach(name => {\n          const loadedData = loadedSession.content[name];\n          if (loadedData) {\n            const subject = this.onLoad[name];\n            subject.next(loadedData);\n            subject.complete();\n          }\n        });\n\n        Object.keys(this.toStore).forEach(name => {\n          const observable = this.toStore[name];\n          this.untilDisposed(observable).subscribe(data => {\n            if (this.session) {\n              this.sessionS$.next(\n                this.session.with({\n                  date: new Date().toLocaleString(),\n                  content: { ...this.session.content, [name]: data }\n                })\n              );\n            }\n          });\n        });\n\n        this.sessionS$.next(loadedSession);\n        this.gridMapS$.next(gridMap);\n        return true;\n      }),\n      catchError(error => {\n        console.log(`Failed loading session: ${error}`);\n        return of(false);\n      })\n    );\n  }\n\n  get session(): Session | null {\n    return this.sessionS$.value;\n  }\n}\n","import React, { FC } from \"react\";\nimport { GridMap } from \"../../../../model/GridMap\";\n\ninterface Props {\n  gridMap: GridMap;\n}\n\nexport const DisplayBackgroundImage: FC<Props> = ({ gridMap }: Props) => {\n  return (\n    <g transform={gridMap.transformation.asTransformString()}>\n      <image\n        width={gridMap.image.width}\n        height={gridMap.image.height}\n        xlinkHref={gridMap.image.url}\n      />\n    </g>\n  );\n};\n","import { Observable } from \"rxjs\";\nimport { useEffect, useState } from \"react\";\n\nexport function useObservable<T>(\n  observable$:\n    | (() => Observable<T> | undefined | null)\n    | Observable<T>\n    | undefined\n    | null,\n  defaultValue: T,\n  dependencies: any[] = [observable$]\n): T {\n  const [observableState, setObservableState] = useState<T>(defaultValue);\n\n  useEffect((): (() => void) | undefined => {\n    if (!observable$) {\n      return;\n    }\n    let toSubscribe: Observable<T> | undefined | null;\n    if (typeof observable$ === \"function\") {\n      toSubscribe = observable$();\n    } else {\n      toSubscribe = observable$;\n    }\n\n    if (toSubscribe) {\n      const subscription = toSubscribe.subscribe(value => {\n        setObservableState(value);\n      });\n      return (): void => subscription.unsubscribe();\n    }\n  }, dependencies);\n\n  return observableState;\n}\n","export type ClassesMap = { [className: string]: boolean };\nexport const classesMap = (classNameMap: ClassesMap): string => {\n  const selectedClassNames = Object.keys(classNameMap).filter(\n    className => classNameMap[className]\n  );\n\n  return selectedClassNames.join(\" \");\n};\n","import React, { FC } from \"react\";\nimport { TokenType } from \"../model/TokenType\";\nimport { Square } from \"../model/Square\";\nimport { classesMap, ClassesMap } from \"../utils/classesMap\";\n\ninterface Props {\n  tokenType: TokenType;\n  tokenLabel: string;\n  tokenSize: number;\n  tokenClasses?: ClassesMap;\n  square?: Square;\n  onClick?: () => void;\n}\n\nexport const DisplayToken: FC<Props> = ({\n  tokenClasses,\n  tokenType,\n  tokenSize,\n  tokenLabel,\n  square,\n  onClick\n}: Props) => {\n  square = square || new Square(0, 0);\n  return (\n    <g onClick={onClick}>\n      <circle\n        className={`token ${tokenClasses ? classesMap(tokenClasses) : \"\"}`}\n        fill={tokenType.color}\n        stroke={tokenType.border}\n        r={tokenSize / 2}\n        cx={square.x + tokenSize / 2}\n        cy={square.y + tokenSize / 2}\n      />\n      {tokenLabel && (\n        <text\n          className=\"token-text\"\n          x={square.x + tokenSize / 2}\n          y={square.y + 0.2 + tokenSize / 2}\n        >\n          {tokenLabel}\n        </text>\n      )}\n    </g>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Token } from \"../../../../model/Token\";\nimport { Observable } from \"rxjs\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\n\ninterface Props {\n  tokens: ReadonlyArray<Token>;\n  onClick: (token: Token | null) => void;\n  selectedToken$: Observable<Token | null>;\n}\n\nexport const DisplayTokens: FC<Props> = ({\n  tokens,\n  onClick,\n  selectedToken$\n}: Props) => {\n  const selectedToken = useObservable(selectedToken$, null);\n\n  const renderToken = (token: Token): ReactNode => {\n    return (\n      <g key={token.id}>\n        <DisplayToken\n          tokenType={token.tokenType}\n          tokenLabel={token.label}\n          tokenSize={token.size}\n          square={token.square}\n          onClick={() => onClick(token)}\n        />\n      </g>\n    );\n  };\n\n  return (\n    <g>\n      {tokens.map(renderToken)}\n      {selectedToken && (\n        <DisplayToken\n          tokenType={selectedToken.tokenType}\n          tokenLabel={selectedToken.label}\n          tokenSize={selectedToken.size}\n          square={selectedToken.square}\n          onClick={() => onClick(null)}\n          tokenClasses={{ \"selected-token\": true }}\n        />\n      )}\n    </g>\n  );\n};\n","export type MouseEventOnSvg = {\n  currentTarget: SVGGraphicsElement;\n  clientX: number;\n  clientY: number;\n};\ntype PointLike = { x: number; y: number };\n\nexport function pointInSvgFromEvent(\n  e: MouseEventOnSvg,\n  target: SVGGraphicsElement = e.currentTarget\n): PointLike {\n  const element = target!;\n  const svgPoint = element.ownerSVGElement!.createSVGPoint();\n  svgPoint.x = e.clientX;\n  svgPoint.y = e.clientY;\n  const pointInSvg = svgPoint.matrixTransform(\n    element.getScreenCTM()!.inverse()\n  );\n  return pointInSvg;\n}\n","import React, { FC, PointerEvent, useState } from \"react\";\nimport { DrawingService } from \"../../services/modebased/DrawingService\";\nimport { Subject } from \"rxjs\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { pointInSvgFromEvent } from \"../../../../utils/pointInSvgFromEvent\";\n\ninterface Props {\n  drawingService: DrawingService;\n}\n\nexport const DrawingCapturePane: FC<Props> = ({ drawingService }: Props) => {\n  const [pointSubject, setPointSubject] = useState<Subject<\n    [number, number]\n  > | null>(null);\n  const active = useObservable(drawingService.active$, false);\n  const drawingMode = useObservable(drawingService.drawingMode$, \"draw\");\n\n  const completeDrawing = (e: PointerEvent<SVGRectElement>): void => {\n    if (!pointSubject) {\n      return;\n    }\n\n    pointSubject.complete();\n    setPointSubject(null);\n    e.currentTarget.releasePointerCapture(e.pointerId);\n  };\n\n  const onMouseMove = (e: PointerEvent<SVGRectElement>): void => {\n    if (!pointSubject) {\n      return;\n    }\n    const pointInSvg = pointInSvgFromEvent(e);\n    pointSubject.next([pointInSvg.x, pointInSvg.y]);\n  };\n\n  const onMouseDown = (e: PointerEvent<SVGRectElement>): void => {\n    if (!drawingService.active) {\n      return;\n    }\n    e.currentTarget.setPointerCapture(e.pointerId);\n\n    const subject = new Subject<[number, number]>();\n    setPointSubject(subject);\n    drawingService.currentlyDrawing(subject);\n  };\n\n  const onMouseUp = (e: PointerEvent<SVGRectElement>): void => {\n    completeDrawing(e);\n  };\n\n  return (\n    <>\n      {drawingMode === \"draw\" && active && (\n        <rect\n          x={-500}\n          y={-500}\n          width={1000}\n          height={1000}\n          className=\"drawing-capture-pane\"\n          onPointerDown={onMouseDown}\n          onPointerUp={onMouseUp}\n          onPointerCancel={e => console.log(\"canceled\", { ...e })}\n          onPointerMove={onMouseMove}\n        />\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { DrawingService } from \"../../services/modebased/DrawingService\";\n\ninterface Props {\n  drawingService: DrawingService;\n  name: string;\n}\n\nexport const DrawingPane: FC<Props> = ({ drawingService, name }: Props) => {\n  const drawingPane = useObservable(drawingService.pane$, null);\n  const drawingMode = useObservable(drawingService.drawingMode$, \"draw\");\n  const onClick = (drawingId: string) => {\n    return (): void => {\n      if (drawingService.drawingMode !== \"erase\") {\n        return;\n      }\n\n      drawingService.removeDrawing(drawingId);\n    };\n  };\n  return (\n    drawingPane && (\n      <>\n        {\n          <g id={name} className={`drawing-pane ${name} ${drawingMode} `}>\n            <rect\n              x={-500}\n              y={-500}\n              width={1000}\n              height={1000}\n              className={`drawing-pane-background ${name}`}\n            />\n            {drawingPane.drawings.map(drawing => (\n              <polyline\n                key={drawing.id}\n                className={classesMap({\n                  drawing: true,\n                  current: drawing.id === \"current\",\n                  [`drawing-${drawing.color}`]: true,\n                  [`drawing-${drawing.width}`]: true\n                })}\n                points={drawing.svgPath}\n                onClick={onClick(drawing.id)}\n              />\n            ))}\n          </g>\n        }\n      </>\n    )\n  );\n};\n","import React, { FC, MouseEvent, PointerEvent, useRef, useState } from \"react\";\nimport { range } from \"../../../../utils/range\";\nimport { pointInSvgFromEvent } from \"../../../../utils/pointInSvgFromEvent\";\nimport { BattleMapService } from \"../../services/BattleMapService\";\n\ninterface Props {\n  battleMapService: BattleMapService;\n}\n\nexport const ZoomPane: FC<Props> = ({ battleMapService }: Props) => {\n  const [factor, setFactor] = useState(0);\n  const [pos, setPos] = useState<{ x: number; y: number } | null>(null);\n  const [startPosBead, setStartPosBead] = useState<{\n    x: number;\n    y: number;\n  } | null>(null);\n  const paneRef = useRef<SVGRectElement>(null);\n  const [moving, setMoving] = useState(false);\n\n  const updateFactor = (e: React.PointerEvent<SVGCircleElement>): void => {\n    if (!startPosBead) {\n      return;\n    }\n    const currentPos = pointInSvgFromEvent(e);\n    const diffX = currentPos.x - startPosBead.x;\n    setFactor(diffX);\n    battleMapService.switchScale(diffX);\n  };\n\n  const onBeadMouseMove = (e: PointerEvent<SVGCircleElement>): void => {\n    updateFactor(e);\n  };\n\n  const onBeadMouseDown = (e: PointerEvent<SVGCircleElement>): void => {\n    const { x, y } = pointInSvgFromEvent(e);\n    setStartPosBead({ x: x - factor, y });\n    e.currentTarget.setPointerCapture(e.pointerId);\n  };\n\n  const onBeadMouseUp = (e: PointerEvent<SVGCircleElement>): void => {\n    updateFactor(e);\n    setStartPosBead(null);\n    e.currentTarget.releasePointerCapture(e.pointerId);\n  };\n\n  const onClickOnPane = (e: MouseEvent<SVGRectElement>): void => {\n    setPos(pointInSvgFromEvent(e));\n  };\n\n  const updatePosition = (e: React.PointerEvent<SVGCircleElement>): void => {\n    if (!pos || !moving) {\n      return;\n    }\n    const currentPos = pointInSvgFromEvent(e, paneRef.current!);\n    const diffX = currentPos.x - pos.x;\n    const diffY = currentPos.y - pos.y;\n    setPos(currentPos);\n    battleMapService.movePosition(diffX, diffY);\n  };\n\n  const onControlMouseMove = (e: PointerEvent<SVGCircleElement>): void => {\n    updatePosition(e);\n  };\n\n  const onControlMouseDown = (e: PointerEvent<SVGCircleElement>): void => {\n    e.currentTarget.setPointerCapture(e.pointerId);\n    setMoving(true);\n    updatePosition(e);\n  };\n\n  const onControlMouseUp = (e: PointerEvent<SVGCircleElement>): void => {\n    e.currentTarget.releasePointerCapture(e.pointerId);\n    setMoving(false);\n    updatePosition(e);\n  };\n\n  return (\n    <>\n      <rect\n        ref={paneRef}\n        x={-500}\n        y={-500}\n        width={1000}\n        height={1000}\n        className=\"zoom-pane\"\n        onClick={onClickOnPane}\n      />\n\n      {pos && (\n        <g className=\"zoom-control\" transform={`translate(${pos.x} ${pos.y})`}>\n          {range(50).map(i => (\n            <circle\n              className=\"zoom-control-bead\"\n              key={`${Math.ceil(i - factor - 1)}`}\n              cx={1 + i + (factor % 1)}\n              cy={0}\n              r={0.2}\n              onPointerDownCapture={onBeadMouseDown}\n              onPointerMoveCapture={onBeadMouseMove}\n              onPointerUpCapture={onBeadMouseUp}\n            />\n          ))}\n          <circle\n            className=\"zoom-control-center\"\n            cx={0}\n            cy={0}\n            r={0.5}\n            onPointerDownCapture={onControlMouseDown}\n            onPointerMoveCapture={onControlMouseMove}\n            onPointerUpCapture={onControlMouseUp}\n          />\n        </g>\n      )}\n    </>\n  );\n};\n","import React, { FC, ReactChild, ReactChildren } from \"react\";\nimport { range } from \"../../../utils/range\";\n\ninterface Props {\n  width: number;\n  height: number;\n  children: (x: number, y: number) => ReactChildren | ReactChild;\n}\n\nexport const BattleGrid: FC<Props> = ({ children, width, height }: Props) => {\n  return <>{range(width).map(x => range(height).map(y => children(x, y)))}</>;\n};\n","import React, { FC } from \"react\";\nimport { BattleGrid } from \"../../common/BattleGrid\";\n\ninterface Props {\n  width: number;\n  height: number;\n}\n\nexport const BackgroundGrid: FC<Props> = ({ width, height }: Props) => {\n  return (\n    <BattleGrid width={width} height={height}>\n      {(x, y) => (\n        <rect\n          key={`${x}/${y}`}\n          className=\"background-grid\"\n          x={x}\n          y={y}\n          height={1}\n          width={1}\n        />\n      )}\n    </BattleGrid>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Square } from \"../../../../model/Square\";\nimport { BattleGrid } from \"../../common/BattleGrid\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { Dict } from \"../../../../utils/types\";\n\ninterface Props {\n  width: number;\n  height: number;\n  highlightedSquares: ReadonlyArray<Square>;\n  onClick: (square: Square) => void;\n  onHover: (square: Square) => void;\n}\n\nexport const SelectionGrid: FC<Props> = ({\n  onClick,\n  width,\n  height,\n  highlightedSquares,\n  onHover\n}: Props) => {\n  const highlightedMap = highlightedSquares.reduce(\n    (map, square) => {\n      map[square.toCoordinateString()] = true;\n      return map;\n    },\n    {} as Dict<boolean>\n  );\n\n  return (\n    <BattleGrid width={width} height={height}>\n      {(x, y) => {\n        const square = new Square(x, y);\n        return (\n          <rect\n            key={square.toCoordinateString()}\n            className={classesMap({\n              \"selection-grid\": true,\n              highlighted: highlightedMap[square.toCoordinateString()]\n            })}\n            x={x}\n            y={y}\n            height={1}\n            width={1}\n            onClick={() => onClick && onClick(square)}\n            onMouseOver={() => onHover(square)}\n          />\n        );\n      }}\n    </BattleGrid>\n  );\n};\n","import React, { FC } from \"react\";\nimport { BattleMapService } from \"../services/BattleMapService\";\nimport { DisplayBackgroundImage } from \"./PlayMap/DisplayBackgroundImage\";\nimport { DisplayTokens } from \"./PlayMap/DisplayTokens\";\nimport { useObservable } from \"../../../utils/useObservable\";\nimport { DrawingCapturePane } from \"./PlayMap/DrawingCapturePane\";\nimport { DrawingService } from \"../services/modebased/DrawingService\";\nimport { DrawingPane } from \"./PlayMap/DrawingPane\";\nimport { ModeService } from \"../services/ModeService\";\nimport { map } from \"rxjs/operators\";\nimport { ZoomPane } from \"./PlayMap/ZoomPane\";\nimport { is } from \"../../../utils/is\";\nimport { combineLatest } from \"rxjs\";\nimport { BackgroundGrid } from \"./PlayMap/BackgroundGrid\";\nimport { SelectionGrid } from \"./PlayMap/SelectionGrid\";\nimport { ViewBox } from \"../../../model/ViewBox\";\n\ninterface Props {\n  battleMapService: BattleMapService;\n  backgroundDrawingService: DrawingService;\n  notesDrawingService: DrawingService;\n  modeService: ModeService;\n}\n\nexport const PlayMap: FC<Props> = ({\n  battleMapService,\n  backgroundDrawingService,\n  notesDrawingService,\n  modeService\n}: Props) => {\n  const viewBox = useObservable(\n    battleMapService.viewBox$,\n    new ViewBox(0, 0, 0, 0)\n  );\n  const tokens = useObservable(battleMapService.tokens$, []);\n  const notesDrawing = useObservable(notesDrawingService.active$, false);\n  const squareSelectable = useObservable(\n    combineLatest([\n      battleMapService.squareSelectable$,\n      modeService.mode$.pipe(map(is(\"play\", \"manage-token\")))\n    ]).pipe(map(([a, b]) => a && b)),\n    false\n  );\n  const zoomActive = useObservable(\n    modeService.mode$.pipe(map(is(\"zoom\"))),\n    false\n  );\n  const gridMap = useObservable(battleMapService.gridMap$, null);\n  const scale = useObservable(battleMapService.scale$, battleMapService.scale);\n  const position = useObservable(\n    battleMapService.position$,\n    battleMapService.position\n  );\n  const highlightedSquares = useObservable(\n    battleMapService.highlightedSquares$,\n    []\n  );\n  return (\n    <>\n      {gridMap && (\n        <svg className=\"h-100 w-100\" viewBox={viewBox.toViewBoxString()}>\n          <g\n            transform={`translate(${position.x} ${position.y}) scale(${scale}, ${scale})`}\n          >\n            <DisplayBackgroundImage gridMap={gridMap} />\n            <BackgroundGrid\n              width={gridMap.getWidthInSquares()}\n              height={gridMap.getHeightInSquares()}\n            />\n            <DrawingPane\n              name=\"background\"\n              drawingService={backgroundDrawingService}\n            />\n            {squareSelectable && (\n              <SelectionGrid\n                width={gridMap.getWidthInSquares()}\n                height={gridMap.getHeightInSquares()}\n                highlightedSquares={highlightedSquares}\n                onClick={s => battleMapService.selectSquare(s)}\n                onHover={s => battleMapService.hoverOverSquare(s)}\n              />\n            )}\n            <DisplayTokens\n              tokens={tokens}\n              selectedToken$={battleMapService.selectedToken$}\n              onClick={token => battleMapService.selectToken(token)}\n            />\n            {// disable this component here, so the background DrawingPane is always shown...\n            notesDrawing && (\n              <DrawingPane name=\"notes\" drawingService={notesDrawingService} />\n            )}\n\n            <DrawingCapturePane drawingService={notesDrawingService} />\n            <DrawingCapturePane drawingService={backgroundDrawingService} />\n          </g>\n          {zoomActive && <ZoomPane battleMapService={battleMapService} />}\n        </svg>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ClassesMap, classesMap } from \"../../../utils/classesMap\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  classes?: ClassesMap | string;\n  onClick?: () => void;\n  icon?: Icon;\n  text?: string;\n  tooltip?: string;\n  iconSize?: number;\n  iconHeight?: number;\n}\n\nexport const ControlBarButton: FC<Props> = ({\n  classes,\n  onClick,\n  icon,\n  text,\n  iconSize,\n  tooltip,\n  iconHeight\n}: Props) => {\n  let additionalClasses = \"\";\n  if (typeof classes === \"string\") {\n    additionalClasses = classes;\n  } else if (typeof classes === \"object\") {\n    additionalClasses = classesMap(classes);\n  }\n\n  const size = iconSize || 16;\n\n  return (\n    <div>\n      <a\n        href=\"#\"\n        title={tooltip}\n        onClick={e => {\n          e.preventDefault();\n          onClick && onClick();\n        }}\n        className={\"btn btn-sm mb-md-2 \" + additionalClasses}\n      >\n        <div className=\"icon-button-content\">\n          {icon && (\n            <Octicon icon={icon} width={size} height={iconHeight || size} />\n          )}\n          {text && <span>{text}</span>}\n        </div>\n      </a>\n    </div>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport {\n  Icon,\n  Paintcan,\n  Pencil,\n  Pulse,\n  Trashcan\n} from \"@primer/octicons-react\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport {\n  DrawingMode,\n  DrawingService\n} from \"../../services/modebased/DrawingService\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport { DrawingColor } from \"../../../../model/DrawingColor\";\nimport { DrawingWidth } from \"../../../../model/DrawingWidth\";\n\ninterface Props {\n  drawingService: DrawingService;\n}\n\nconst iconSizeByWidth = {\n  [DrawingWidth.s]: 8,\n  [DrawingWidth.m]: 12,\n  [DrawingWidth.l]: 16\n};\n\nexport const DrawingControlBar: FC<Props> = ({ drawingService }: Props) => {\n  const drawingColor = useObservable(\n    drawingService.drawingColor$,\n    drawingService.drawingColor\n  );\n  const drawingWidth = useObservable(\n    drawingService.drawingWidth$,\n    drawingService.drawingWidth\n  );\n  const active = useObservable(drawingService.active$, false);\n  const drawingMode = useObservable(drawingService.drawingMode$, \"draw\");\n  const widthButton = (width: DrawingWidth): ReactNode => (\n    <ControlBarButton\n      key={width}\n      icon={Pulse}\n      iconSize={iconSizeByWidth[width]}\n      onClick={() => drawingService.switchDrawingWidth(width)}\n      classes={{\n        [`btn-secondary`]: drawingWidth === width,\n        [`btn-outline-secondary`]: drawingWidth !== width,\n        \"drawing-pane-button\": true\n      }}\n    />\n  );\n  const colorButton = (color: DrawingColor): ReactNode => (\n    <ControlBarButton\n      key={color}\n      icon={Paintcan}\n      onClick={() => drawingService.switchDrawingColor(color)}\n      classes={{\n        [`drawing-button-${color}`]: drawingColor !== color,\n        [`drawing-button-${color}-selected`]: drawingColor === color\n      }}\n    />\n  );\n\n  const drawingModeButton = (mode: DrawingMode, icon: Icon): ReactNode => (\n    <ControlBarButton\n      key={mode}\n      icon={icon}\n      onClick={() => drawingService.switchDrawingMode(mode)}\n      classes={{\n        [`btn-warning`]: drawingMode === mode,\n        [`btn-outline-warning`]: drawingMode !== mode\n      }}\n    />\n  );\n\n  return (\n    <>\n      {active && (\n        <div className=\"mt-md-5\">\n          {drawingModeButton(\"draw\", Pencil)}\n          {drawingModeButton(\"erase\", Trashcan)}\n          <div className=\"mt-md-4\" />\n          {Object.values(DrawingWidth).map(width => widthButton(width))}\n          <div className=\"mt-md-4\" />\n          {Object.values(DrawingColor).map(color => colorButton(color))}\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport {\n  FileMedia,\n  GitCompare,\n  Icon,\n  Note,\n  Octoface,\n  Search\n} from \"@primer/octicons-react\";\nimport { Mode, ModeService } from \"../../services/ModeService\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport { labels } from \"../../../../data/labels\";\n\ninterface Props {\n  modeService: ModeService;\n}\n\nexport const ModeControlBar: FC<Props> = ({ modeService }: Props) => {\n  const mode = useObservable(modeService.mode$, \"play\");\n\n  const modeButton = (\n    icon: Icon,\n    activeInMode: Mode,\n    tooltip: string\n  ): ReactNode => (\n    <ControlBarButton\n      icon={icon}\n      onClick={() => modeService.switchMode(activeInMode)}\n      classes={{\n        \"btn-outline-primary\": activeInMode !== mode,\n        \"btn-primary\": activeInMode === mode\n      }}\n      tooltip={tooltip}\n    />\n  );\n\n  return (\n    <div className=\"\">\n      {modeButton(GitCompare, \"play\", labels.playPage.controlBar.playButton)}\n      {modeButton(\n        Octoface,\n        \"manage-token\",\n        labels.playPage.controlBar.addTokensButton\n      )}\n      {modeButton(\n        Note,\n        \"draw-notes\",\n        labels.playPage.controlBar.drawNotesButton\n      )}\n      {modeButton(\n        FileMedia,\n        \"draw-background\",\n        labels.playPage.controlBar.drawBackgroundButton\n      )}\n      {modeButton(Search, \"zoom\", labels.playPage.controlBar.zoomButton)}\n    </div>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Icon, Plus, Trashcan } from \"@primer/octicons-react\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport {\n  ManageTokenService,\n  Mode\n} from \"../../services/modebased/ManageTokenService\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\nimport { classesMap } from \"../../../../utils/classesMap\";\n\ninterface Props {\n  manageTokenService: ManageTokenService;\n}\n\nexport const ManageTokenControlBar: FC<Props> = ({\n  manageTokenService\n}: Props) => {\n  const active = useObservable(manageTokenService.active$, false);\n  const tokenType = useObservable(manageTokenService.tokenType$, null);\n  const tokenLabel = useObservable(manageTokenService.tokenLabel$, null);\n  const currentMode = useObservable(manageTokenService.mode$, \"add-token\");\n\n  const modeButton = (icon: Icon, mode: Mode): ReactNode => (\n    <ControlBarButton\n      icon={icon}\n      onClick={() => manageTokenService.switchMode(mode)}\n      classes={{\n        \"btn-warning\": mode === currentMode,\n        \"btn-outline-warning\": mode !== currentMode\n      }}\n    />\n  );\n\n  return (\n    <>\n      {active && (\n        <div className=\"mt-md-5\">\n          {modeButton(Plus, \"add-token\")}\n          {modeButton(Trashcan, \"remove-token\")}\n          <div>\n            <a\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault();\n                manageTokenService.switchMode(\"switch-token-type\");\n              }}\n              className={classesMap({\n                btn: true,\n                \"btn-sm\": true,\n                \"btn-warning\": \"switch-token-type\" === currentMode,\n                \"btn-outline-warning\": \"switch-token-type\" !== currentMode\n              })}\n            >\n              {tokenType && tokenLabel && (\n                <svg viewBox=\"-0.1 -0.1 1.15 1.15\" width={16} height={16}>\n                  <DisplayToken\n                    tokenLabel={tokenLabel}\n                    tokenType={tokenType}\n                    tokenSize={1}\n                  />\n                </svg>\n              )}\n            </a>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ModeService } from \"../services/ModeService\";\nimport { DrawingService } from \"../services/modebased/DrawingService\";\nimport { ManageTokenService } from \"../services/modebased/ManageTokenService\";\nimport { DrawingControlBar } from \"./ControlBar/DrawingControlBar\";\nimport { ModeControlBar } from \"./ControlBar/ModeControlBar\";\nimport { ManageTokenControlBar } from \"./ControlBar/ManageTokenControlBar\";\n\ninterface Props {\n  modeService: ModeService;\n  backgroundDrawingService: DrawingService;\n  notesDrawingService: DrawingService;\n  manageTokenService: ManageTokenService;\n}\n\nexport const ControlBar: FC<Props> = ({\n  modeService,\n  notesDrawingService,\n  backgroundDrawingService,\n  manageTokenService\n}: Props) => {\n  return (\n    <div className=\"navbar navbar-dark bg-dark control-pane\">\n      <ModeControlBar modeService={modeService} />\n      <DrawingControlBar drawingService={notesDrawingService} />\n      <DrawingControlBar drawingService={backgroundDrawingService} />\n      <ManageTokenControlBar manageTokenService={manageTokenService} />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ReactElementLike } from \"prop-types\";\n\ninterface Props {\n  component: (item: any) => ReactElementLike;\n  items: ReadonlyArray<any>;\n  columns: number;\n}\n\nexport const LayoutGrid: FC<Props> = ({ items, columns, component }: Props) => {\n  return (\n    <div className=\"row p-2\">\n      {items.map((item, idx) => (\n        <div key={idx} className={`col-${12 / columns}`}>\n          {component(item)}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\nimport { TokenType } from \"../../../../model/TokenType\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { ViewBox } from \"../../../../model/ViewBox\";\nimport { BackgroundGrid } from \"../PlayMap/BackgroundGrid\";\n\ninterface Props {\n  tokenType: TokenType;\n  tokenLabel: string;\n  tokenSize: number;\n  onClick: () => void;\n  selected: boolean;\n  svgSize: number;\n  maxTokenSize: number;\n}\n\nexport const TokenTypeSelection: FC<Props> = ({\n  tokenType,\n  tokenLabel,\n  tokenSize,\n  onClick,\n  selected,\n  svgSize,\n  maxTokenSize\n}: Props) => {\n  const viewBox = new ViewBox(\n    -0.25,\n    -0.25,\n    maxTokenSize + 0.5,\n    maxTokenSize + 0.5\n  );\n  return (\n    <a\n      className={classesMap({\n        btn: true,\n        \"btn-outline-secondary\": !selected,\n        \"btn-secondary\": selected\n      })}\n      onClick={event => {\n        event.preventDefault();\n        onClick();\n      }}\n    >\n      <svg viewBox={viewBox.toViewBoxString()} width={svgSize} height={svgSize}>\n        <BackgroundGrid width={maxTokenSize} height={maxTokenSize} />\n        <DisplayToken\n          tokenLabel={tokenLabel}\n          tokenType={tokenType}\n          tokenSize={tokenSize}\n        />\n      </svg>\n    </a>\n  );\n};\n","import React, {\n  FC,\n  ReactChild,\n  ReactChildren,\n  useLayoutEffect,\n  useRef\n} from \"react\";\nimport $ from \"jquery\";\n\ninterface Props {\n  children: ReactChild | ReactChildren | false | undefined;\n  onOk?: () => void;\n  onCancel?: () => void;\n  buttonText: string;\n  header: string;\n  open: boolean;\n  okEnabled?: boolean;\n}\n\nexport const Modal: FC<Props> = ({\n  children,\n  onOk,\n  okEnabled,\n  onCancel,\n  buttonText,\n  header,\n  open\n}: Props) => {\n  const modalElementRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    $(modalElementRef.current!)\n      .modal(\"hide\")\n      .on(\"hide.bs.modal\", () => {\n        onCancel && onCancel();\n      });\n  }, [onCancel]);\n\n  useLayoutEffect(() => {\n    console.log(\"effect after open\", open);\n    $(modalElementRef.current!).modal(open ? \"show\" : \"hide\");\n  }, [open]);\n\n  const ok = (): void => {\n    $(modalElementRef.current!).modal(\"hide\");\n    onOk && onOk();\n  };\n\n  return (\n    <div\n      ref={modalElementRef}\n      className=\"modal fade\"\n      id=\"exampleModal\"\n      tabIndex={-1}\n    >\n      <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{header}</h5>\n            <button type=\"button\" className=\"close\" onClick={onCancel}>\n              <span>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">{children}</div>\n          <div className=\"modal-footer\">\n            {onOk && (\n              <button\n                onClick={ok}\n                disabled={okEnabled !== undefined && !okEnabled}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                {buttonText}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { LayoutGrid } from \"../../../common/LayoutGrid\";\nimport { TokenTypeSelection } from \"./AddTokenModal/TokenTypeSelection\";\nimport { Modal } from \"../../../common/Modal\";\nimport { ManageTokenService } from \"../services/modebased/ManageTokenService\";\nimport { useObservable } from \"../../../utils/useObservable\";\nimport { AssetService } from \"../services/AssetService\";\nimport { range } from \"../../../utils/range\";\n\ninterface Props {\n  assetService: AssetService;\n  manageTokenService: ManageTokenService;\n}\n\nexport const AddTokenModal: FC<Props> = ({\n  assetService,\n  manageTokenService\n}: Props) => {\n  const showModal = useObservable(manageTokenService.isSwitchTokenType$, false);\n  const selectedTokenType = useObservable(\n    manageTokenService.tokenType$,\n    manageTokenService.tokenType\n  );\n  const selectedTokenLabel = useObservable(\n    manageTokenService.tokenLabel$,\n    manageTokenService.tokenLabel\n  );\n  const selectedTokenSize = useObservable(\n    manageTokenService.tokenSize$,\n    manageTokenService.tokenSize\n  );\n\n  const onCancel = useCallback(\n    () => manageTokenService.switchMode(\"add-token\"),\n    [manageTokenService]\n  );\n\n  return (\n    <Modal\n      onCancel={onCancel}\n      buttonText={\"place it\"}\n      header={\"Add Token\"}\n      open={showModal}\n    >\n      {!!selectedTokenLabel && !!selectedTokenType && !!selectedTokenSize && (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <LayoutGrid\n                items={assetService.tokenTypes}\n                columns={4}\n                component={tokenType => (\n                  <TokenTypeSelection\n                    tokenLabel={selectedTokenLabel}\n                    tokenType={tokenType}\n                    tokenSize={1} // to preserve the layout\n                    onClick={() => manageTokenService.setTokenType(tokenType)}\n                    selected={tokenType === selectedTokenType}\n                    svgSize={35}\n                    maxTokenSize={1}\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-4\">\n              <LayoutGrid\n                items={assetService.tokenLabels}\n                columns={4}\n                component={label => (\n                  <TokenTypeSelection\n                    tokenLabel={label}\n                    tokenType={selectedTokenType}\n                    tokenSize={1} // to preserve the layout\n                    onClick={() => manageTokenService.setTokenLabel(label)}\n                    selected={selectedTokenLabel === label}\n                    svgSize={35}\n                    maxTokenSize={1}\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-4\">\n              <LayoutGrid\n                items={range(3)}\n                columns={1}\n                component={i => {\n                  const size = i + 1;\n                  return (\n                    <TokenTypeSelection\n                      tokenLabel={selectedTokenLabel}\n                      tokenType={selectedTokenType}\n                      tokenSize={size}\n                      onClick={() => manageTokenService.setTokenSize(size)}\n                      selected={selectedTokenSize === size}\n                      svgSize={90}\n                      maxTokenSize={3}\n                    />\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import React, { FC } from \"react\";\nimport { PlayMap } from \"./Layout/PlayMap\";\nimport { ControlBar } from \"./Layout/ControlBar\";\nimport { AddTokenModal } from \"./Layout/AddTokenModal\";\nimport { Services } from \"./services/Services\";\n\ninterface Props extends Services {}\n\nexport const Layout: FC<Props> = (props: Props) => {\n  return (\n    <>\n      {\n        <div className=\"App h-100\">\n          <PlayMap {...props!} />\n          <ControlBar {...props!} />\n        </div>\n      }\n      {\n        <div className=\"App h-100\">\n          <AddTokenModal {...props} />\n        </div>\n      }\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../../common/FullPageWithHeading\";\nimport { Link } from \"react-router-dom\";\nimport { routing } from \"../../App\";\n\ninterface Props {}\n\nexport const NoSessionsFound: FC<Props> = ({  }: Props) => {\n  return (\n    <FullPageWithHeading heading={<h1>Welcome to Gridheim, Stranger!</h1>}>\n      <h3>No Session found</h3>\n      <span>\n        It seems that you don&apos;t have a session (yet) or that the session is\n        invalid :(\n      </span>\n      <br />\n      <br />\n      <span>\n        Please go <Link to={routing.sessions}>here</Link> to create a session so\n        we can play :D\n      </span>\n    </FullPageWithHeading>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Token } from \"../model/Token\";\nimport { Square } from \"../model/Square\";\nimport { DrawingPane } from \"../model/DrawingPane\";\nimport { map } from \"rxjs/operators\";\nimport { Services } from \"./PlayPage/services/Services\";\nimport { BattleMapService } from \"./PlayPage/services/BattleMapService\";\nimport { PlayModeService } from \"./PlayPage/services/modebased/PlayModeService\";\nimport { DrawingService } from \"./PlayPage/services/modebased/DrawingService\";\nimport { AssetService } from \"./PlayPage/services/AssetService\";\nimport { ManageTokenService } from \"./PlayPage/services/modebased/ManageTokenService\";\nimport { ModeService } from \"./PlayPage/services/ModeService\";\nimport { SaveSessionService } from \"./PlayPage/services/SaveSessionService\";\nimport { Layout } from \"./PlayPage/Layout\";\nimport { SessionStorage } from \"../services/SessionStorage\";\nimport { GridMapStorage } from \"../services/GridMapStorage\";\nimport { NoSessionsFound } from \"./PlayPage/NoSessionsFound\";\n\ninterface Props {\n  gridMapStorage: GridMapStorage;\n  sessionStorage: SessionStorage;\n}\n\nexport const PlayPage: FC<Props> = ({\n  gridMapStorage,\n  sessionStorage\n}: Props) => {\n  const [services, setServices] = useState<Services | null>(null);\n  const [sessionLoaded, setSessionLoaded] = useState<\n    \"FAILED\" | \"LOADING\" | \"LOADED\"\n  >(\"LOADING\");\n  useEffect(() => {\n    const saveSessionService = new SaveSessionService(\n      gridMapStorage,\n      sessionStorage\n    );\n    const battleMapService = new BattleMapService(saveSessionService);\n    const playModeService = new PlayModeService(battleMapService);\n    const backgroundDrawingService = new DrawingService();\n    const notesDrawingService = new DrawingService();\n    const assetService = new AssetService();\n    const manageTokenService = new ManageTokenService(\n      battleMapService,\n      assetService\n    );\n    const modeService = new ModeService(\"play\", {\n      play: playModeService,\n      \"draw-background\": backgroundDrawingService,\n      \"draw-notes\": notesDrawingService,\n      \"manage-token\": manageTokenService,\n      zoom: null\n    });\n\n    saveSessionService\n      .add(\"tokens\", battleMapService.tokens$)\n      .subscribe(tokensJson => {\n        const mappedTokens = tokensJson.flatMap(tokenJson => {\n          const tokenType = assetService.tokenTypeForName(\n            tokenJson.tokenType.name\n          );\n          if (!tokenType) {\n            return [];\n          }\n          return [\n            new Token(\n              tokenJson.id,\n              tokenType,\n              tokenJson.label,\n              new Square(tokenJson.square.x, tokenJson.square.y),\n              tokenJson.size\n            )\n          ];\n        });\n\n        battleMapService.updateTokens(() => mappedTokens);\n      });\n\n    saveSessionService\n      .add(\n        \"background-pane\",\n        backgroundDrawingService.pane$.pipe(\n          map(p => p.withCurrentDrawingRemoved())\n        )\n      )\n      .subscribe(paneJson => {\n        backgroundDrawingService.setPane(DrawingPane.fromJson(paneJson));\n      });\n\n    saveSessionService\n      .add(\n        \"notes-pane\",\n        notesDrawingService.pane$.pipe(map(p => p.withCurrentDrawingRemoved()))\n      )\n      .subscribe(paneJson => {\n        notesDrawingService.setPane(DrawingPane.fromJson(paneJson));\n      });\n\n    saveSessionService\n      .loadAndStart()\n      .toPromise()\n      .then(result => setSessionLoaded(result ? \"LOADED\" : \"FAILED\"));\n\n    setServices({\n      battleMapService,\n      playModeService,\n      backgroundDrawingService,\n      notesDrawingService,\n      modeService,\n      manageTokenService,\n      assetService\n    });\n    return () => {\n      console.log(\"disposing PlayApp\");\n      saveSessionService.saveSession();\n      battleMapService.dispose();\n      playModeService.dispose();\n      backgroundDrawingService.dispose();\n      notesDrawingService.dispose();\n      modeService.dispose();\n      manageTokenService.dispose();\n      assetService.dispose();\n    };\n  }, [sessionStorage, gridMapStorage]);\n\n  return (\n    <>\n      {(!services || sessionLoaded === \"LOADING\") && (\n        <div className=\"App h-100\">\n          <span>loading ...</span>\n        </div>\n      )}\n      {sessionLoaded === \"FAILED\" && !!services && <NoSessionsFound />}\n      {sessionLoaded === \"LOADED\" && !!services && <Layout {...services} />}\n    </>\n  );\n};\n","import { StorageProvider } from \"./StorageProvider\";\nimport Dexie from \"dexie\";\nimport { Observable } from \"rxjs\";\nimport { fromPromise } from \"rxjs/internal-compatibility\";\n\nexport class IndexedDbStorageProvider implements StorageProvider {\n  private static readonly TABLE_NAME = \"blobs\";\n\n  private readonly db = new Dexie(\"GridHeimBlobStorage\");\n  private readonly blobs: Dexie.Table<\n    { key: string; value: string },\n    string\n  > = (() => {\n    this.db.version(1).stores({\n      [IndexedDbStorageProvider.TABLE_NAME]: \"key\"\n    });\n    return this.db.table(IndexedDbStorageProvider.TABLE_NAME);\n  })();\n\n  get(key: string): Observable<string | null> {\n    return fromPromise(\n      this.blobs.get(key).then(entry => (entry ? entry.value : null))\n    );\n  }\n\n  listKeys(): Observable<ReadonlyArray<string>> {\n    return fromPromise(\n      this.blobs\n        .toArray()\n        .then(result => Object.freeze(result.map(entry => entry.key)))\n    );\n  }\n\n  set(key: string, value: string): Observable<void> {\n    return fromPromise(this.blobs.put({ key, value }).then(() => undefined));\n  }\n\n  remove(key: string): Observable<void> {\n    return fromPromise(this.blobs.delete(key).then(() => undefined));\n  }\n}\n","import { Action } from \"../Action\";\nimport { SessionStorage } from \"../../../services/SessionStorage\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const playAction = (\n  sessionStorage: SessionStorage\n): Observable<Action | null> => {\n  return sessionStorage.findCurrentSession().pipe(\n    map(([name, session]) => {\n      if (!name || !session) {\n        return null;\n      }\n\n      return {\n        to: routing.play,\n        descriptionText: labels.startPage.play.description,\n        actionText: `${labels.startPage.play.button} '${name}'`,\n        section: \"play\"\n      };\n    })\n  );\n};\n","import { Action } from \"../Action\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { GridMapStorage } from \"../../../services/GridMapStorage\";\nimport { labels } from \"../../../data/labels\";\n\nexport const newSessionAction = (\n  gridMapStorage: GridMapStorage\n): Observable<Action | null> => {\n  return gridMapStorage.count().pipe(\n    map(count => {\n      if (count === 0) {\n        return null;\n      }\n\n      return {\n        to: routing.newSessions,\n        descriptionText: labels.startPage.newSession.description,\n        actionText: labels.startPage.newSession.button,\n        section: \"play\"\n      };\n    })\n  );\n};\n","import { Action } from \"../Action\";\nimport { SessionStorage } from \"../../../services/SessionStorage\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const showSessionsAction = (\n  sessionStorage: SessionStorage\n): Observable<Action | null> => {\n  return sessionStorage.count().pipe(\n    map(count => {\n      if (count === 0) {\n        return null;\n      }\n\n      return {\n        to: routing.sessions,\n        descriptionText: labels.startPage.showSessions.description,\n        actionText: labels.startPage.showSessions.button,\n        section: \"play\"\n      };\n    })\n  );\n};\n","import { Action } from \"../Action\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { GridMapStorage } from \"../../../services/GridMapStorage\";\nimport { labels } from \"../../../data/labels\";\n\nexport const showGridMapsAction = (\n  gridMapStorage: GridMapStorage\n): Observable<Action | null> => {\n  return gridMapStorage.count().pipe(\n    map(count => {\n      if (count === 0) {\n        return null;\n      }\n\n      return {\n        to: routing.gridMaps,\n        descriptionText: labels.startPage.showGridMaps.description,\n        actionText: labels.startPage.showGridMaps.button,\n        section: \"gridMaps\"\n      };\n    })\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  headline: string;\n  icon: Icon;\n  children: ReactNode;\n  hero?: boolean;\n}\n\nexport const StartSection: FC<Props> = ({\n  headline,\n  icon,\n  children,\n  hero\n}: Props) => {\n  return (\n    <>\n      <div className=\"row mb-5\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className={`card-header${hero ? \" bg-dark text-white\" : \"\"}`}>\n              <h4>\n                <Octicon icon={icon} size={30} /> {headline}\n              </h4>\n            </div>\n            <div className=\"card-body\">\n              {React.Children.map(children, (child, index) => {\n                return (\n                  <>\n                    {index !== 0 && <hr />}\n                    {child}\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { classesMap } from \"../../utils/classesMap\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  description: string;\n  hero?: boolean;\n  actionText: string;\n  to: string;\n}\n\nexport const StartSectionItem: FC<Props> = ({\n  description,\n  hero,\n  actionText,\n  to\n}: Props) => {\n  return (\n    <>\n      <p className=\"card-text\">{description}</p>\n      <Link\n        className={classesMap({\n          btn: true,\n          \"btn-secondary\": !hero,\n          \"btn-primary\": !!hero,\n          \"btn-lg\": !!hero\n        })}\n        to={to}\n      >\n        {actionText}\n      </Link>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, {\n  FileMedia,\n  Icon,\n  Info,\n  Key,\n  Law,\n  Milestone,\n  Play\n} from \"@primer/octicons-react\";\nimport { routing } from \"../App\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { GridMapStorage } from \"../services/GridMapStorage\";\nimport { SessionStorage } from \"../services/SessionStorage\";\nimport { useObservable } from \"../utils/useObservable\";\nimport { map, take } from \"rxjs/operators\";\nimport { playAction } from \"./StartPage/actions/PlayAction\";\nimport { newSessionAction } from \"./StartPage/actions/NewSessionAction\";\nimport { showSessionsAction } from \"./StartPage/actions/ShowSessionsAction\";\nimport { newGridMapAction } from \"./StartPage/actions/NewGridMapAction\";\nimport { showGridMapsAction } from \"./StartPage/actions/ShowGridMapsAction\";\nimport { Action } from \"./StartPage/Action\";\nimport { combineLatest } from \"rxjs\";\nimport { Dict } from \"../utils/types\";\nimport { StartSection } from \"./StartPage/StartSection\";\nimport { StartSectionItem } from \"./StartPage/StartSectionItem\";\nimport { labels } from \"../data/labels\";\nimport { links } from \"../data/links\";\nimport { aboutAction } from \"./StartPage/actions/AboutAction\";\nimport { openSourceAction } from \"./StartPage/actions/OpenSourceAction\";\nimport { assetAction } from \"./StartPage/actions/AssetAction\";\n\ninterface Props {\n  gridMapStorage: GridMapStorage;\n  sessionStorage: SessionStorage;\n}\nconst sections: Dict<{ icon: Icon; headline: string }> =\n  labels.startPage.sections;\n\nexport const StartPage: FC<Props> = ({\n  gridMapStorage,\n  sessionStorage\n}: Props) => {\n  const actions: Dict<Array<Action>> = useObservable(\n    combineLatest([\n      playAction(sessionStorage),\n      newSessionAction(gridMapStorage),\n      showSessionsAction(sessionStorage),\n      newGridMapAction(),\n      showGridMapsAction(gridMapStorage),\n      aboutAction(),\n      openSourceAction(),\n      assetAction()\n    ]).pipe(\n      map(actions =>\n        actions.reduce(\n          (result, action) => {\n            if (!action) {\n              return result;\n            }\n            const section = action.section;\n            return {\n              ...result,\n              [section]: [...(result[section] || []), action]\n            };\n          },\n          {} as Dict<Array<Action>>\n        )\n      ),\n      take(1)\n    ),\n    {},\n    [sessionStorage, gridMapStorage]\n  );\n\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader icon={Milestone} headline={labels.startPage.headline} />\n      }\n    >\n      <div className=\"container\">\n        {Object.entries(actions).map(([sectionName, actions], sectionIndex) => (\n          <StartSection\n            key={sectionName}\n            headline={sections[sectionName].headline}\n            icon={sections[sectionName].icon}\n            hero={true}\n          >\n            {actions.map((action, actionIndex) => (\n              <StartSectionItem\n                key={actionIndex}\n                description={action.descriptionText}\n                hero={actionIndex === 0 && sectionIndex === 0}\n                actionText={action.actionText}\n                to={action.to}\n              />\n            ))}\n          </StartSection>\n        ))}\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const newGridMapAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.newGridMap,\n    descriptionText: labels.startPage.newGridMap.description,\n    actionText: labels.startPage.newGridMap.button,\n    section: \"gridMaps\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const aboutAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.about,\n    descriptionText: labels.startPage.about.description,\n    actionText: labels.startPage.about.button,\n    section: \"info\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const openSourceAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.openSource,\n    descriptionText: labels.startPage.openSource.description,\n    actionText: labels.startPage.openSource.button,\n    section: \"info\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const assetAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.assets,\n    descriptionText: labels.startPage.assets.description,\n    actionText: labels.startPage.assets.button,\n    section: \"info\"\n  });\n};\n","import { Immerable } from \"../utils/Immerable\";\nimport { Transformation } from \"./Transformation\";\nimport { BackgroundImage } from \"./BackgroundImage\";\nimport { PropsOf } from \"../utils/types\";\n\n@Immerable()\nexport class GridMap {\n  static readonly STORAGE_KEY_PREFIX = \"map-\";\n\n  static storageKey(gridMapName: string): string {\n    return `${this.STORAGE_KEY_PREFIX}${gridMapName}`;\n  }\n\n  static isStorageKey(key: string): boolean {\n    return key.startsWith(this.STORAGE_KEY_PREFIX);\n  }\n\n  public static of(props: PropsOf<GridMap>): GridMap {\n    return Object.freeze(\n      new GridMap(props.name, props.image, props.transformation)\n    );\n  }\n\n  private constructor(\n    readonly name: string,\n    readonly image: BackgroundImage,\n    readonly transformation: Transformation\n  ) {}\n\n  with(props: { [T in keyof GridMap]?: GridMap[T] }): GridMap {\n    const copy = new GridMap(this.name, this.image, this.transformation);\n    return Object.freeze(Object.assign(copy, props));\n  }\n\n  getWidthInSquares(): number {\n    return Math.ceil(this.image.width * this.transformation.scale);\n  }\n\n  getHeightInSquares(): number {\n    return Math.ceil(this.image.height * this.transformation.scale);\n  }\n}\n","import { PropsOf, SomePropsOf } from \"../utils/types\";\n\nexport class Transformation {\n  public static default(): Transformation {\n    return Object.freeze(new Transformation(0, 0, 1));\n  }\n\n  public static of(props: PropsOf<Transformation>): Transformation {\n    return Object.freeze(new Transformation(props.dx, props.dy, props.scale));\n  }\n\n  private constructor(\n    readonly dx: number,\n    readonly dy: number,\n    readonly scale: number\n  ) {}\n\n  with(props: SomePropsOf<Transformation>): Transformation {\n    const copy = new Transformation(this.dx, this.dy, this.scale);\n    return Object.freeze(Object.assign(copy, props));\n  }\n\n  asTransformString(): string {\n    return `scale(${this.scale} ${this.scale}) translate(${this.dx} ${this.dy})`;\n  }\n}\n","import { PropsOf } from \"../utils/types\";\n\nexport class BackgroundImage {\n  public static of(props: PropsOf<BackgroundImage>): BackgroundImage {\n    return Object.freeze(\n      new BackgroundImage(props.url, props.width, props.height)\n    );\n  }\n\n  constructor(\n    readonly url: string,\n    readonly width: number,\n    readonly height: number\n  ) {}\n\n  with(\n    props: { [T in keyof BackgroundImage]?: BackgroundImage[T] }\n  ): BackgroundImage {\n    const copy = new BackgroundImage(this.url, this.width, this.height);\n    return Object.freeze(Object.assign(copy, props));\n  }\n}\n","import { StorageProvider } from \"./StorageProvider\";\nimport { forkJoin, Observable, of } from \"rxjs\";\nimport { flatMap, map } from \"rxjs/operators\";\n\nexport abstract class AbstractStorage<T, K> {\n  protected abstract readonly isStorageKey: (key: string) => boolean;\n  protected abstract readonly toStorageKey: (o: T) => string;\n  protected abstract readonly parseJson: (json: any) => T | null;\n  protected abstract readonly keyToStorageKey: (k: K) => string;\n\n  constructor(protected readonly storageProvider: StorageProvider) {}\n\n  findAll(): Observable<ReadonlyArray<T>> {\n    return this.storageProvider.listKeys().pipe(\n      flatMap(list => {\n        const observables: Array<Observable<T | null>> = list.flatMap(key => {\n          const keyResult: Observable<T | null>[] =\n            key && this.isStorageKey(key) ? [this.loadObject(key)] : [];\n          return keyResult;\n        });\n\n        if (observables.length === 0) {\n          return of([]);\n        }\n\n        return forkJoin(observables).pipe(\n          map(array => array.flatMap(a => (!!a ? [a] : []))),\n          map(array => Object.freeze(array))\n        );\n      })\n    );\n  }\n\n  count(): Observable<number> {\n    return this.storageProvider\n      .listKeys()\n      .pipe(map(keys => keys.filter(key => this.isStorageKey(key)).length));\n  }\n\n  findBy(objectKey: K): Observable<T | null> {\n    return this.loadObject(this.keyToStorageKey(objectKey));\n  }\n\n  store(o: T): Observable<void> {\n    const jsonString = JSON.stringify(o);\n    return this.storageProvider.set(this.toStorageKey(o), jsonString);\n  }\n\n  private loadObject(name: string): Observable<T | null> {\n    return this.storageProvider.get(name).pipe(\n      map(content => {\n        if (content === null) {\n          return null;\n        }\n        const json: any = JSON.parse(content);\n        try {\n          return this.parseJson(json);\n        } catch (e) {\n          console.log(`Failed loading ${name} from local storage`, { name, e });\n          return null;\n        }\n      })\n    );\n  }\n\n  delete(objectKey: K | null): Observable<void> {\n    if (!objectKey) {\n      return of(undefined);\n    }\n    return this.storageProvider.remove(this.keyToStorageKey(objectKey));\n  }\n}\n","import { GridMap } from \"../model/GridMap\";\nimport { Transformation } from \"../model/Transformation\";\nimport { BackgroundImage } from \"../model/BackgroundImage\";\nimport { AbstractStorage } from \"./AbstractStorage\";\n\nexport class GridMapStorage extends AbstractStorage<GridMap, string> {\n  protected readonly isStorageKey = (key: string): boolean =>\n    GridMap.isStorageKey(key);\n  protected readonly parseJson = (json: any): GridMap => {\n    return GridMap.of({\n      name: json.name,\n      image: BackgroundImage.of(json.image),\n      transformation: Transformation.of(json.transformation)\n    });\n  };\n\n  protected readonly toStorageKey = (gridMap: GridMap): string =>\n    GridMap.storageKey(gridMap.name);\n  protected readonly keyToStorageKey = (name: string): string =>\n    GridMap.storageKey(name);\n}\n","import { PropsOf, SomePropsOf } from \"../utils/types\";\n\nexport class Session {\n  static readonly STORAGE_KEY_PREFIX = \"session-\";\n  static readonly CURRENT_SESSION_STORAGE_KEY = \"current-session\";\n\n  static storageKey(sessionName: string): string {\n    return `${this.STORAGE_KEY_PREFIX}${sessionName}`;\n  }\n\n  static isStorageKey(key: string): boolean {\n    return key.startsWith(this.STORAGE_KEY_PREFIX);\n  }\n\n  public static of(props: PropsOf<Session>): Session {\n    return Object.freeze(\n      new Session(props.name, props.date, props.gridMapName, props.content)\n    );\n  }\n\n  private constructor(\n    readonly name: string,\n    readonly date: string,\n    readonly gridMapName: string,\n    readonly content: { [name: string]: any }\n  ) {}\n\n  with(props: SomePropsOf<Session>): Session {\n    const copy = new Session(\n      this.name,\n      this.date,\n      this.gridMapName,\n      this.content\n    );\n    return Object.freeze(Object.assign(copy, props));\n  }\n}\n","import { AbstractStorage } from \"./AbstractStorage\";\nimport { Session } from \"../model/Session\";\nimport { Observable, of } from \"rxjs\";\nimport { flatMap, map } from \"rxjs/operators\";\n\nexport class SessionStorage extends AbstractStorage<Session, string> {\n  protected readonly isStorageKey = (key: string): boolean =>\n    Session.isStorageKey(key);\n\n  protected readonly parseJson = (json: any): Session => {\n    return Session.of({\n      name: json.name,\n      date: json.date,\n      gridMapName: json.gridMapName,\n      content: json.content\n    });\n  };\n\n  protected readonly toStorageKey = (session: Session): string =>\n    Session.storageKey(session.name);\n\n  storeCurrentSessionName(name: string): Observable<void> {\n    return this.storageProvider.set(Session.CURRENT_SESSION_STORAGE_KEY, name);\n  }\n\n  findCurrentSessionName(): Observable<string | null> {\n    return this.storageProvider.get(Session.CURRENT_SESSION_STORAGE_KEY);\n  }\n\n  protected readonly keyToStorageKey = (name: string): string =>\n    Session.storageKey(name);\n\n  findCurrentSession(): Observable<readonly [string | null, Session | null]> {\n    return this.findCurrentSessionName().pipe(\n      flatMap(name => {\n        if (!name) {\n          return of([null, null] as const);\n        }\n        return this.findBy(name).pipe(map(session => [name, session] as const));\n      })\n    );\n  }\n}\n","import React, { ChangeEvent, FC, useEffect, useState } from \"react\";\nimport { ExplanationBox } from \"../../../common/ExplanationBox\";\nimport Octicon, { Check } from \"@primer/octicons-react\";\n\ninterface Props {\n  initialUrl: string | null;\n  onApply: (url: string) => void;\n}\n\nexport const ImageUpload: FC<Props> = ({ initialUrl, onApply }: Props) => {\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    setImageUrl(initialUrl);\n  }, [initialUrl]);\n\n  const onFileChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const files = event!.target!.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const url = reader.result as string;\n        setImageUrl(url);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n  const onResetImage = (): void => {\n    setImageUrl(null);\n  };\n\n  const onNext = (): void => {\n    onApply(imageUrl!);\n  };\n\n  return (\n    <>\n      {!!imageUrl || (\n        <div className=\"row mt-3\">\n          <div className=\"col-md-12\">\n            <ExplanationBox>\n              Select a image from your computer, that should be used as map.\n              <br />\n              This file is <em>not</em> uploaded in the internet but stored in\n              your browser ...\n            </ExplanationBox>\n            <div className=\"custom-file\">\n              <input\n                type=\"file\"\n                className=\"custom-file-input\"\n                id=\"customFile\"\n                onChange={onFileChange}\n              />\n              <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                Choose file\n              </label>\n            </div>\n          </div>\n        </div>\n      )}\n      {!!imageUrl && (\n        <div className=\"row mt-3\">\n          <div className=\"col-md-12\">\n            <div>\n              <button\n                className=\"btn btn-secondary btn-sm\"\n                type=\"button\"\n                onClick={onResetImage}\n              >\n                Change\n              </button>\n            </div>\n            <img\n              className=\"img-thumbnail gridMap-form_image-preview\"\n              src={imageUrl}\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"row mt-3\">\n        <div className=\"col-md-12\">\n          <button\n            className=\"btn btn-sm btn-success mt-2\"\n            disabled={!imageUrl}\n            onClick={onNext}\n            type=\"button\"\n          >\n            <Octicon icon={Check} />\n            Next\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Point } from \"./types\";\nimport { PointerEvent as ReactPointerEvent, useRef, useState } from \"react\";\nimport { pointInSvgFromEvent } from \"./pointInSvgFromEvent\";\nimport { pointDistance } from \"./pointDistance\";\n\nexport interface SvgDraggingConfig {\n  onStart: (this: SvgDraggingConfig, p: Point) => void;\n  onMove: (this: SvgDraggingConfig, p: Point) => void;\n  onFinished: (this: SvgDraggingConfig, p: Point) => void;\n  onCancel: () => void;\n}\n\nexport interface SvgDrag {\n  dragging: boolean;\n  eventHandler: {\n    onPointerDown: (e: ReactPointerEvent<SVGGraphicsElement>) => void;\n  };\n}\n\nexport const useDragSvg = (config: SvgDraggingConfig): SvgDrag => {\n  const draggingRef = useRef(false);\n  const [returnedDragging, setReturnedDragging] = useState(false);\n  const startPoint = useRef<Point | null>(null);\n  const configRef = useRef(config);\n  configRef.current = config;\n\n  const setDragging = (dragging: boolean): void => {\n    draggingRef.current = dragging;\n    setReturnedDragging(dragging);\n  };\n\n  const onPointerDown = (e: ReactPointerEvent<SVGGraphicsElement>): void => {\n    const svgTarget = e.currentTarget;\n    const point = pointInSvgFromEvent(e);\n    if (!draggingRef.current) {\n      setDragging(true);\n      startPoint.current = point;\n      configRef.current.onStart(point);\n\n      const onPointerMove = (e: PointerEvent): void => {\n        const point = pointInSvgFromEvent({\n          clientX: e.clientX,\n          clientY: e.clientY,\n          currentTarget: svgTarget\n        });\n        configRef.current.onMove(point);\n      };\n\n      const onPointerUp = (e: PointerEvent): void => {\n        const point = pointInSvgFromEvent({\n          clientX: e.clientX,\n          clientY: e.clientY,\n          currentTarget: svgTarget\n        });\n\n        const d = startPoint.current\n          ? pointDistance(startPoint.current, point)\n          : -1;\n\n        if (d > 0.5) {\n          configRef.current.onFinished(point);\n          setDragging(false);\n          document.removeEventListener(\"pointermove\", onPointerMove);\n          document.removeEventListener(\"pointerup\", onPointerUp);\n        }\n      };\n\n      document.addEventListener(\"pointermove\", onPointerMove);\n      document.addEventListener(\"pointerup\", onPointerUp);\n    }\n  };\n\n  return {\n    dragging: returnedDragging,\n    eventHandler: {\n      onPointerDown\n    }\n  };\n};\n","import { Point } from \"./types\";\n\nexport const pointDistance = (p1: Point, p2: Point): number => {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n};\n","import React, { FC, useState } from \"react\";\nimport { range } from \"../../../../utils/range\";\nimport { Point } from \"../../../../utils/types\";\nimport { SvgDrag, useDragSvg } from \"../../../../utils/useDragSvg\";\n\nexport interface Rect {\n  x: number;\n  y: number;\n  a: number;\n}\n\ninterface Props {\n  width: number;\n  height: number;\n  onChange: (rect: Rect | null) => void;\n}\n\nexport const SelectionRect: FC<Props> = ({\n  width,\n  height,\n  onChange\n}: Props) => {\n  const [selectionRect, setSelectionRect] = useState<Rect | null>(null);\n  const updateRect = (rect: Rect | null): void => {\n    setSelectionRect(rect);\n    onChange(\n      rect\n        ? { x: rect.x + rect.a / 3, y: rect.y + rect.a / 3, a: rect.a / 3 }\n        : null\n    );\n  };\n\n  const strokeSize = width / 600;\n\n  const dragRect = useDragSvg({\n    onStart: ({ x, y }) => {\n      setSelectionRect({ x, y, a: 0 });\n    },\n    onMove: ({ x, y }) => {\n      if (selectionRect) {\n        const dx = x - selectionRect.x;\n        const dy = y - selectionRect.y;\n        const a = Math.max(0, Math.max(dx, dy));\n        updateRect({ ...selectionRect, a });\n      }\n    },\n    onFinished: function(p) {\n      this.onMove(p);\n    },\n    onCancel: () => {\n      updateRect(null);\n    }\n  });\n\n  const useDragCorner = (\n    changeRect: (point: Point, rect: Rect) => Rect\n  ): SvgDrag => {\n    const cornerDragging = useDragSvg({\n      onStart: ({ x, y }) => {},\n      onMove: point => {\n        if (selectionRect) {\n          updateRect(changeRect(point, selectionRect));\n        }\n      },\n      onFinished: function(p) {\n        this.onMove(p);\n      },\n      onCancel: () => {\n        setSelectionRect(null);\n      }\n    });\n    return cornerDragging;\n  };\n\n  const dragCornerMatrix = [\n    [\n      useDragCorner(({ x, y }, rect) => {\n        const d = Math.max(rect.x - x, rect.y - y);\n        return {\n          x: rect.x - d,\n          y: rect.y - d,\n          a: rect.a + d\n        };\n      }),\n      useDragCorner(({ x, y }, rect) => {\n        const d = Math.max(rect.x - x, y - rect.y - rect.a);\n        return {\n          ...rect,\n          x: rect.x - d,\n          a: rect.a + d\n        };\n      })\n    ],\n    [\n      useDragCorner(({ x, y }, rect) => {\n        const d = Math.max(x - rect.x - rect.a, rect.y - y);\n        return {\n          ...rect,\n          y: rect.y - d,\n          a: rect.a + d\n        };\n      }),\n      useDragCorner(({ x, y }, rect) => {\n        return {\n          ...rect,\n          a: Math.max(x - rect.x, y - rect.y)\n        };\n      })\n    ]\n  ];\n\n  return (\n    <g>\n      <rect\n        fillOpacity={0.01}\n        x={0}\n        y={0}\n        width={width}\n        height={height}\n        {...dragRect.eventHandler}\n      />\n      {selectionRect && (\n        <g>\n          {range(3).flatMap(x =>\n            range(3).map(y => (\n              <rect\n                key={`${x}/${y}`}\n                x={selectionRect.x + (x * selectionRect.a) / 3}\n                y={selectionRect.y + (y * selectionRect.a) / 3}\n                width={selectionRect.a / 3}\n                height={selectionRect.a / 3}\n                stroke={dragRect.dragging ? \"#0f86ff\" : \"red\"}\n                fillOpacity={0}\n                strokeDasharray={`${strokeSize} ${strokeSize}`}\n                strokeWidth={strokeSize}\n              />\n            ))\n          )}\n          {!dragRect.dragging &&\n            range(2).flatMap(x =>\n              range(2).map(y => {\n                const drag = dragCornerMatrix[x][y];\n                return (\n                  <rect\n                    key={`${x}/${y}`}\n                    x={selectionRect.x + x * selectionRect.a - strokeSize * 2}\n                    y={selectionRect.y + y * selectionRect.a - strokeSize * 2}\n                    width={strokeSize * 4}\n                    height={strokeSize * 4}\n                    strokeOpacity={0}\n                    fill={drag.dragging ? \"#0f86ff\" : \"red\"}\n                    {...drag.eventHandler}\n                  />\n                );\n              })\n            )}\n        </g>\n      )}\n    </g>\n  );\n};\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\nimport Octicon, {\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n  DiffAdded,\n  DiffRemoved,\n  Icon\n} from \"@primer/octicons-react\";\nimport { Transformation } from \"../../../../../model/Transformation\";\n\ninterface Props {\n  transformation: Transformation;\n  onTransformationChange: (t: Transformation) => void;\n}\n\nexport const ViewControls: FC<Props> = ({\n  transformation: transformationFromProps,\n  onTransformationChange\n}: Props) => {\n  const [transformation, setTransformation] = useState(transformationFromProps);\n\n  useEffect(() => {\n    setTransformation(transformationFromProps);\n  }, [transformationFromProps]);\n\n  const updateTransformation = (t: Transformation): void => {\n    setTransformation(t);\n    onTransformationChange(t);\n  };\n\n  const translateFactor = 100;\n\n  const offsetXPlus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dx: transformation.dx - transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const offsetXMinus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dx: transformation.dx + transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const offsetYPlus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dy: transformation.dy - transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const offsetYMinus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dy: transformation.dy + transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const zoomIn = (): void => {\n    updateTransformation(\n      transformation.with({ scale: transformation.scale + 0.1 })\n    );\n  };\n\n  const zoomOut = (): void => {\n    updateTransformation(\n      transformation.with({ scale: transformation.scale - 0.1 })\n    );\n  };\n\n  const button = (icon: Icon, fn: () => void): ReactNode => {\n    return (\n      <button\n        className=\"btn btn-sm btn-secondary ml-2\"\n        onClick={fn}\n        type=\"button\"\n      >\n        <Octicon icon={icon} />\n      </button>\n    );\n  };\n\n  return (\n    <>\n      {button(DiffAdded, zoomIn)}\n      {button(DiffRemoved, zoomOut)}\n      {button(ArrowUp, offsetYMinus)}\n      {button(ArrowDown, offsetYPlus)}\n      {button(ArrowLeft, offsetXMinus)}\n      {button(ArrowRight, offsetXPlus)}\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Transformation } from \"../../../../model/Transformation\";\nimport Octicon, { Check } from \"@primer/octicons-react\";\nimport { BackgroundImage } from \"../../../../model/BackgroundImage\";\nimport { ExplanationBox } from \"../../../../common/ExplanationBox\";\nimport { SelectionRect } from \"./SelectionRect\";\nimport { Rect } from \"../../../../utils/types\";\nimport { ViewControls } from \"./common/ViewControls\";\n\nconst viewPositionToLabel = {\n  center: \"center\",\n  \"left-top\": \"top left corner\",\n  \"right-bottom\": \"bottom right corner\"\n};\n\ninterface Props {\n  image: BackgroundImage;\n  onApply: (rect: Rect) => void;\n  viewPosition: \"center\" | \"left-top\" | \"right-bottom\";\n}\n\nexport const PlaceSquare: FC<Props> = ({\n  image,\n  onApply,\n  viewPosition\n}: Props) => {\n  const [transformation, setTransformation] = useState(\n    Transformation.default()\n  );\n\n  const [rect, setRect] = useState<null | Rect>(null);\n\n  useEffect(() => {\n    const scale = (600 / image.width) * 2;\n\n    const t = Transformation.default().with({\n      scale: scale,\n      dx: viewPosition === \"left-top\" ? 0 : -(image.width - 600 / scale),\n      dy: viewPosition === \"left-top\" ? 0 : -(image.height - 600 / scale)\n    });\n    setTransformation(t);\n  }, [image, viewPosition]);\n\n  const apply = (): void => {\n    if (!rect) {\n      return;\n    }\n\n    onApply(rect);\n  };\n\n  return (\n    <>\n      <div className=\"row mt-3\">\n        <div className=\"col-md-12\">\n          <ExplanationBox>\n            For calculating the grid position, draw a rect over the image where\n            9 squares of the battle grid should be displayed later. Try to\n            select an area in the\n            <em>{viewPositionToLabel[viewPosition]}</em> of the map.\n            <br />\n          </ExplanationBox>\n\n          <div className=\"mb-2\">\n            <ViewControls\n              transformation={transformation}\n              onTransformationChange={setTransformation}\n            />\n          </div>\n          <svg style={{ width: 600, height: 600 }} className=\"img-thumbnail\">\n            <g transform={transformation.asTransformString()}>\n              <image\n                width={image.width}\n                height={image.height}\n                xlinkHref={image.url}\n              />\n              <SelectionRect\n                width={image.width}\n                height={image.width}\n                onChange={setRect}\n              />\n            </g>\n          </svg>\n          <div>\n            <button\n              className=\"btn btn-sm btn-success mt-2\"\n              onClick={apply}\n              type=\"button\"\n              disabled={!rect}\n            >\n              <Octicon icon={Check} />\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { Transformation } from \"../../../../model/Transformation\";\nimport Octicon, { Check } from \"@primer/octicons-react\";\nimport { BackgroundImage } from \"../../../../model/BackgroundImage\";\nimport { range } from \"../../../../utils/range\";\nimport { ExplanationBox } from \"../../../../common/ExplanationBox\";\nimport { ViewControls } from \"./common/ViewControls\";\n\ninterface Props {\n  image: BackgroundImage;\n  imageTransformation: Transformation;\n  onApply: (t: Transformation) => void;\n}\n\ninterface Rect {\n  x: number;\n  y: number;\n  a: number;\n}\n\nexport const PreviewGrid: FC<Props> = ({\n  image,\n  onApply,\n  imageTransformation\n}: Props) => {\n  const [viewTransformation, setViewTransformation] = useState(\n    Transformation.default()\n  );\n\n  const apply = (): void => {\n    onApply(imageTransformation);\n  };\n\n  const xSquareCount = Math.ceil(image.width * imageTransformation.scale + 1);\n  const ySquareCount = Math.ceil(image.height * imageTransformation.scale + 1);\n\n  return (\n    <>\n      <div className=\"row mt-3\">\n        <div className=\"col-md-12\">\n          <ExplanationBox>\n            As I promised! Here you can make last adjustments to the grid ...\n          </ExplanationBox>\n          <div className=\"mb-2\">\n            <ViewControls\n              transformation={viewTransformation}\n              onTransformationChange={setViewTransformation}\n            />\n          </div>\n          <svg\n            style={{ width: 600, height: 600 }}\n            viewBox={`0 0 ${xSquareCount} ${ySquareCount}`}\n            className=\"img-thumbnail\"\n          >\n            <g transform={viewTransformation.asTransformString()}>\n              <g transform={imageTransformation.asTransformString()}>\n                <image\n                  width={image.width}\n                  height={image.height}\n                  xlinkHref={image.url}\n                />\n              </g>\n              {range(xSquareCount).map(x => {\n                return range(ySquareCount).map(y => {\n                  return (\n                    <rect\n                      key={`${x}/${y}`}\n                      x={x}\n                      y={y}\n                      width=\"1\"\n                      height=\"1\"\n                      stroke=\"red\"\n                      strokeWidth={0.03}\n                      fillOpacity={0}\n                    />\n                  );\n                });\n              })}\n            </g>\n          </svg>\n\n          <div>\n            <button\n              className=\"btn btn-sm btn-success mt-2\"\n              onClick={apply}\n              type=\"button\"\n            >\n              <Octicon icon={Check} />\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { Transformation } from \"../../../model/Transformation\";\nimport { PlaceSquare } from \"./TransformationSetup/PlaceSquare\";\nimport { PreviewGrid } from \"./TransformationSetup/PreviewGrid\";\nimport { BackgroundImage } from \"../../../model/BackgroundImage\";\nimport { Rect } from \"../../../utils/types\";\n\ninterface Props {\n  image: BackgroundImage;\n  onApply: (t: Transformation) => void;\n  onStep: (stage: \"exampleRect1\" | \"exampleRect2\" | \"preview\") => void;\n}\n\nexport const TransformationSetup: FC<Props> = ({\n  image,\n  onApply,\n  onStep\n}: Props) => {\n  const [rect1, setRect1] = useState<Rect | null>(null);\n  const [transformation, setTransformation] = useState<Transformation | null>(\n    null\n  );\n\n  const calculateTransformation = (r1: Rect, r2: Rect): Transformation => {\n    const averageA = (r1.a + r2.a) / 2;\n\n    const distanceX = Math.abs(r2.x - r1.x);\n    const squareCountX = Math.round(distanceX / averageA);\n    const calculatedAX = distanceX / squareCountX;\n\n    const distanceY = Math.abs(r2.y - r1.y);\n    const squareCountY = Math.round(distanceY / averageA);\n    const calculatedAY = distanceY / squareCountY;\n\n    const calculatedA = (calculatedAX + calculatedAY) / 2;\n\n    const dx1 = -r1.x % calculatedA;\n    const dx2 = -r2.x % calculatedA;\n    const dx = (dx1 + dx2) / 2;\n\n    const dy1 = -r1.y % calculatedA;\n    const dy2 = -r2.y % calculatedA;\n    const dy = (dy1 + dy2) / 2;\n\n    return Transformation.of({ scale: 1 / calculatedA, dx, dy });\n  };\n\n  if (!rect1) {\n    onStep(\"exampleRect1\");\n  }\n\n  return (\n    <>\n      {image && !rect1 && (\n        <PlaceSquare\n          viewPosition=\"left-top\"\n          image={image}\n          onApply={r => {\n            setRect1(r);\n            onStep(\"exampleRect2\");\n          }}\n        />\n      )}\n      {image && rect1 && !transformation && (\n        <PlaceSquare\n          viewPosition=\"center\"\n          image={image}\n          onApply={r => {\n            onStep(\"preview\");\n            setTransformation(calculateTransformation(rect1!, r));\n          }}\n        />\n      )}\n      {image && rect1 && transformation && (\n        <PreviewGrid\n          image={image}\n          imageTransformation={transformation}\n          onApply={r => {\n            onApply(transformation);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport Octicon, { Tag } from \"@primer/octicons-react\";\n\ninterface Props {\n  onSave: (name: string) => void;\n}\n\nexport const AddMetadata: FC<Props> = ({ onSave }: Props) => {\n  const [name, setName] = useState<undefined | string>(\"\");\n  return (\n    <>\n      <div className=\"row mt-3\">\n        <div className=\"col-md-12\">\n          <div className=\"alert alert-primary\">\n            Last step provide a good name for the map ... and your done :D\n          </div>\n          <div className=\"input-group mb-2\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">\n                <Octicon icon={Tag} />\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Background Name\"\n              onChange={(e): void => {\n                setName(e.target.value);\n              }}\n              value={name}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col-md-12\">\n          <button\n            className=\"btn btn-success\"\n            type=\"button\"\n            onClick={(): void => {\n              name && onSave(name);\n            }}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { ChevronRight, Star, Verified } from \"@primer/octicons-react\";\n\n// KISS :D\ninterface Props {\n  steps: ReadonlyArray<string>;\n  active: string;\n}\n\nexport const StepIndicator: FC<Props> = ({ steps, active }: Props) => {\n  const activeIndex = steps.indexOf(active);\n  return (\n    <>\n      <div>\n        {steps.map((step, i) => {\n          const current = i === activeIndex;\n          const future = i > activeIndex;\n          return (\n            <span key={step}>\n              <span\n                className={`badge badge-${\n                  current ? \"primary\" : future ? \"secondary\" : \"success\"\n                } ml-2 mr-2`}\n              >\n                {current && <Octicon icon={Star} />}\n                {step}\n              </span>\n              <Octicon icon={ChevronRight} />\n            </span>\n          );\n        })}\n        <span className=\"badge badge-dark  ml-2 mr-2\">\n          <Octicon icon={Verified} /> Finished\n        </span>\n      </div>\n    </>\n  );\n};\n","import React, { FC, useContext, useState } from \"react\";\nimport { GridMap } from \"../../model/GridMap\";\nimport { ImageUpload } from \"./AddGridMap/ImageUpload\";\nimport { BackgroundImage as ImageModel } from \"../../model/BackgroundImage\";\nimport { Transformation } from \"../../model/Transformation\";\nimport { TransformationSetup } from \"./AddGridMap/TransformationSetup\";\nimport { AddMetadata } from \"./AddGridMap/AddMetadata\";\nimport { StepIndicator } from \"../../common/StepIndicator\";\nimport Octicon, { X } from \"@primer/octicons-react\";\nimport { ResetScrolling } from \"../../common/FullPageWithHeading\";\n\ninterface Props {\n  onSave: (gridMapImage: GridMap) => void;\n  onCancel: () => void;\n}\n\nconst steps = {\n  upload: \"Upload Image\",\n  selectSquare1: \"Select Example Square 1\",\n  selectSquare2: \"Select Example Square 2\",\n  previewGrid: \"Preview Grid\",\n  metadata: \"Add Metadata\"\n};\nexport const NewGridMap: FC<Props> = ({ onSave, onCancel }: Props) => {\n  const [image, setImage] = useState<ImageModel | null>(null);\n  const [step, setStep] = useState<string>(steps.upload);\n  const [transformation, setTransformation] = useState<Transformation | null>(\n    null\n  );\n\n  const saveGridMap = (name: string): void => {\n    if (!name || !image || !transformation) {\n      return;\n    }\n    onSave(GridMap.of({ name, image, transformation }));\n  };\n\n  const setImageFromUrl = (url: string): void => {\n    if (url) {\n      const img = new Image();\n\n      img.onload = function() {\n        setImage(new ImageModel(url, img.width, img.height));\n      };\n\n      img.src = url;\n    } else {\n      setImage(null);\n    }\n  };\n\n  const resetScrolling = useContext(ResetScrolling);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <a\n          href=\"#\"\n          className=\"btn btn-secondary float-right\"\n          onClick={event => {\n            event.preventDefault();\n            onCancel();\n          }}\n        >\n          <Octicon icon={X} />\n        </a>\n        <h5>Add Map</h5>\n      </div>\n\n      <div className=\"card-body\">\n        <StepIndicator steps={Object.values(steps)} active={step} />\n        {!image && (\n          <ImageUpload\n            initialUrl={null}\n            onApply={url => {\n              setImageFromUrl(url);\n              setStep(steps.selectSquare1);\n              resetScrolling();\n            }}\n          />\n        )}\n        {image && !transformation && (\n          <TransformationSetup\n            image={image}\n            onApply={transformation => {\n              setTransformation(transformation);\n              setStep(steps.metadata);\n              resetScrolling();\n            }}\n            onStep={step => {\n              setStep(\n                step === \"exampleRect1\"\n                  ? steps.selectSquare1\n                  : step === \"exampleRect2\"\n                  ? steps.selectSquare2\n                  : steps.previewGrid\n              );\n              resetScrolling();\n            }}\n          />\n        )}\n        {image && transformation && (\n          <AddMetadata\n            onSave={name => {\n              saveGridMap(name);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { GridMapStorage } from \"../services/GridMapStorage\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { NewGridMap } from \"./NewGridMapPage/NewGridMap\";\nimport { FileMedia } from \"@primer/octicons-react\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { useRouter } from \"../utils/useRouter\";\nimport { routing } from \"../App\";\n\ninterface Props {\n  gridMapStorage: GridMapStorage;\n}\n\nexport const NewGridMapPage: FC<Props> = ({ gridMapStorage }: Props) => {\n  const heading = <PageHeader icon={FileMedia} headline=\"Add Map\"></PageHeader>;\n\n  const router = useRouter();\n  const navigateToStart = (): void => {\n    router.history.push(routing.start);\n  };\n\n  return (\n    <>\n      <FullPageWithHeading heading={heading}>\n        <ExplanationBox>\n          <strong>Maps</strong> are stored images with a grid drawn over them.\n          <br />\n          You create a map by selecting an image file on your computer and\n          configure a grid for them. The images are stored locally in your\n          browser local storage and are not sent to the internet.\n        </ExplanationBox>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <NewGridMap\n              onSave={gridMapImage => {\n                gridMapStorage.store(gridMapImage);\n                navigateToStart();\n              }}\n              onCancel={() => navigateToStart()}\n            />\n          </div>\n        </div>\n      </FullPageWithHeading>\n    </>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { StepIndicator } from \"../../common/StepIndicator\";\nimport { Session } from \"../../model/Session\";\nimport { GridMapList } from \"../../common/GridMapList\";\nimport { GridMap } from \"../../model/GridMap\";\nimport Octicon, { Tag, X } from \"@primer/octicons-react\";\nimport { ExplanationBox } from \"../../common/ExplanationBox\";\n\ninterface Props {\n  onSave: (session: Session) => void;\n  onCancel: () => void;\n  gridMaps: ReadonlyArray<GridMap>;\n}\n\nconst steps = {\n  selectBackground: \"Select Background\",\n  metadata: \"Add Metadata\"\n};\nexport const StartSession: FC<Props> = ({\n  onSave,\n  onCancel,\n  gridMaps\n}: Props) => {\n  const [step, setStep] = useState<string>(steps.selectBackground);\n  const [gridMapName, setBackgroundName] = useState<string | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const save = (): void => {\n    if (!name || !gridMapName) {\n      return;\n    }\n    onSave(\n      Session.of({\n        name,\n        date: new Date().toLocaleString(),\n        gridMapName,\n        content: {}\n      })\n    );\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <a\n          href=\"#\"\n          className=\"btn btn-secondary float-right\"\n          onClick={event => {\n            event.preventDefault();\n            onCancel();\n          }}\n        >\n          <Octicon icon={X} />\n        </a>\n        <h5>Start Session</h5>\n      </div>\n\n      <div className=\"card-body\">\n        <StepIndicator steps={Object.values(steps)} active={step} />\n        {!gridMapName && (\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <ExplanationBox>\n                Select a map where you want to play from the list below ...\n              </ExplanationBox>\n\n              <GridMapList\n                gridMaps={gridMaps}\n                selected={null}\n                onSelect={gridMap => {\n                  setBackgroundName(gridMap.name);\n                  setStep(steps.metadata);\n                }}\n              />\n            </div>\n          </div>\n        )}\n        {gridMapName && (\n          <>\n            <div className=\"row mt-3\">\n              <div className=\"col-md-12\">\n                <ExplanationBox>\n                  Provide a memorable name and some other useful information ...\n                  and your done :D\n                </ExplanationBox>\n                <div className=\"input-group mb-2\">\n                  <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">\n                      <Octicon icon={Tag} />\n                    </div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Session Name\"\n                    onChange={e => setName(e.target.value)}\n                    value={name}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-md-12\">\n                <button\n                  className=\"btn btn-success\"\n                  type=\"button\"\n                  onClick={() => name && save()}\n                >\n                  Save and Start Session\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { routing } from \"../../App\";\n\ninterface Props {}\n\nexport const NoGridMapsFound: FC<Props> = ({  }: Props) => {\n  return (\n    <>\n      <h3>No Maps found</h3>\n      <span>\n        Oh no! It seems that you want create a sessions but we can&apos;t find\n        any map :(\n      </span>\n      <br />\n      <br />\n      <span>\n        Please go <Link to={routing.gridMaps}>here</Link> to create a map.\n        <br />\n        Afterwards come back via the menu in the top left corner (Sessions) to\n        start a session.\n      </span>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { SessionStorage } from \"../services/SessionStorage\";\nimport { GridMapStorage } from \"../services/GridMapStorage\";\nimport { GridMap } from \"../model/GridMap\";\nimport { Dict } from \"../utils/types\";\nimport { Repo } from \"@primer/octicons-react\";\nimport { StartSession } from \"./SessionsPage/StartSession\";\nimport { NoGridMapsFound } from \"./SessionsPage/NoGridMapsFound\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { arrayToDict } from \"../utils/arrayToDict\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { routing } from \"../App\";\nimport { useNavigation } from \"../utils/useNavigation\";\nimport { labels } from \"../data/labels\";\n\ninterface Props {\n  sessionStorage: SessionStorage;\n  gridMapStorage: GridMapStorage;\n}\n\nexport const NewSessionPage: FC<Props> = ({\n  sessionStorage,\n  gridMapStorage\n}: Props) => {\n  const [gridMapsForName, setGridMapForName] = useState<\n    Readonly<Dict<GridMap>>\n  >({});\n\n  useEffect(() => {\n    gridMapStorage.findAll().subscribe({\n      next: gridMaps => {\n        setGridMapForName(arrayToDict(gridMaps, gridMap => gridMap.name));\n      }\n    });\n  }, [gridMapStorage, sessionStorage]);\n\n  const [navigateToStart, navigateToPlay] = useNavigation(\n    routing.start,\n    routing.play\n  );\n  const noGridMaps = Object.keys(gridMapsForName).length === 0;\n\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader icon={Repo} headline={labels.newSessionPage.headline} />\n      }\n    >\n      <ExplanationBox>{labels.newSessionPage.explanation}</ExplanationBox>\n      {noGridMaps && <NoGridMapsFound />}\n\n      {!noGridMaps && (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <StartSession\n              onSave={session => {\n                sessionStorage.store(session);\n                sessionStorage.storeCurrentSessionName(session.name);\n                navigateToPlay();\n              }}\n              onCancel={() => {\n                navigateToStart();\n              }}\n              gridMaps={Object.values(gridMapsForName)}\n            />\n          </div>\n        </div>\n      )}\n    </FullPageWithHeading>\n  );\n};\n","export const opensource = Object.freeze({\n  React: {\n    page: \"https://reactjs.org\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/facebook/react/blob/master/LICENSE\"\n  },\n  Bootstrap: {\n    page: \"https://getbootstrap.com\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/twbs/bootstrap/blob/master/LICENSEs\"\n  },\n  \"React Router\": {\n    page: \"https://reacttraining.com/react-router/\",\n    licence: \"MIT\",\n    licenceUrl:\n      \"https://github.com/ReactTraining/react-router/blob/master/LICENSE\"\n  },\n  RxJS: {\n    page: \"https://rxjs-dev.firebaseapp.com/\",\n    licence: \"Apache 2.0\",\n    licenceUrl: \"https://github.com/ReactiveX/rxjs/blob/master/LICENSE.txt\"\n  },\n  Typescript: {\n    page: \"https://www.typescriptlang.org/\",\n    licence: \"Apache 2.0\",\n    licenceUrl:\n      \"https://github.com/microsoft/TypeScript/blob/master/LICENSE.txt\"\n  },\n  Octicons: {\n    page: \"https://octicons.github.com/\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  Formik: {\n    page: \"https://jaredpalmer.com/formik/docs/overview\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/jaredpalmer/formik/blob/master/LICENSE\"\n  },\n  Immer: {\n    page: \"https://immerjs.github.io/immer/docs/introduction\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/immerjs/immer/blob/master/LICENSE\"\n  },\n  \"Dexie.js\": {\n    page: \"https://dexie.org/\",\n    licence: \"Apache 2.0\",\n    licenceUrl: \"https://github.com/dfahlander/Dexie.js/blob/master/LICENSE\"\n  },\n  JQuery: {\n    page: \"https://jquery.com/\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/jquery/jquery/blob/master/LICENSE.txt\"\n  },\n  \"Popper.js\": {\n    page: \"https://popper.js.org/\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/FezVrasta/popper.js/blob/master/LICENSE.md\"\n  },\n  \"Create React App\": {\n    page: \"https://create-react-app.dev/\",\n    licence: \"MIT\",\n    licenceUrl:\n      \"https://github.com/facebook/create-react-app/blob/master/LICENSE\"\n  },\n  \"es-shims/Array.prototype.flatMap\": {\n    page: \"https://github.com/es-shims/Array.prototype.flatMap\",\n    licence: \"MIT\",\n    licenceUrl:\n      \"https://github.com/es-shims/Array.prototype.flatMap/blob/master/LICENSE\"\n  }\n});\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, {\n  FileMedia,\n  MarkGithub,\n  Octoface\n} from \"@primer/octicons-react\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { opensource } from \"../data/opensource\";\nimport { labels } from \"../data/labels\";\n\ninterface Props {}\n\nexport const OpenSourcePage: FC<Props> = ({  }: Props) => {\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader\n          icon={Octoface}\n          headline={labels.openSourcePage.headline}\n        ></PageHeader>\n      }\n    >\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <blockquote className=\"blockquote\">\n            <p className=\"mb-0\">\n              <em>\n                &quot;If I have seen further it is by standing on the shoulders\n                of giants.&quot;\n              </em>\n            </p>\n            <footer className=\"blockquote-footer\">\n              <cite title=\"Source Title\">\n                <a href=\"https://en.wikipedia.org/wiki/Bernard_of_Chartres\">\n                  Bernard of Chartres\n                </a>\n              </cite>\n            </footer>\n          </blockquote>\n        </div>\n      </div>\n\n      <div className=\"card mt-3\">\n        <div className=\"card-body\">\n          <table className=\"table\">\n            <thead>\n              <th>Project</th>\n              <th>Website</th>\n              <th>Licence</th>\n            </thead>\n            <tbody>\n              {Object.entries(opensource).map(([name, info]) => (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>\n                    <a href={info.page}>{info.page}</a>\n                  </td>\n                  <td>\n                    <a href={info.licenceUrl}>{info.licence}</a>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","export class SettingToggle {\n  constructor(\n    private readonly name: string,\n    private readonly defaultValue: boolean\n  ) {}\n\n  get(): boolean {\n    const key = this.key;\n    const loadedValue = localStorage.getItem(key);\n    switch (loadedValue) {\n      case \"true\":\n        return true;\n      case \"false\":\n        return false;\n      default:\n        return this.defaultValue;\n    }\n  }\n\n  private get key(): string {\n    return `toggle-${this.name}`;\n  }\n\n  set(value: boolean): void {\n    localStorage.setItem(this.key, `${value}`);\n  }\n}\n\nexport const settingStorage = Object.freeze({\n  redirectToAbout: new SettingToggle(\"redirect-to-about\", true)\n});\n","import React, { FC, ReactNode } from \"react\";\nimport { settingStorage } from \"../services/SettingStorage\";\nimport { Redirect } from \"react-router\";\nimport { routing } from \"../App\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const RedirectToAboutOnFirstVisit: FC<Props> = ({ children }: Props) => {\n  const redirectToAbout = settingStorage.redirectToAbout.get();\n  if (redirectToAbout) {\n    settingStorage.redirectToAbout.set(false);\n  }\n  return (\n    <>\n      {redirectToAbout && <Redirect to={routing.about} />}\n      {!redirectToAbout && children}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { Home, Key, Law } from \"@primer/octicons-react\";\nimport { routing } from \"../App\";\nimport { Link } from \"react-router-dom\";\nimport { links } from \"../data/links\";\nimport { PageHeader } from \"../common/PageHeader\";\n\ninterface Props {}\n\nexport const HomeButton: FC<Props> = ({  }: Props) => {\n  return (\n    <>\n      <div className=\"navbar navbar-dark bg-dark logo-menu\">\n        <Link\n          className=\"btn mb-md-2 btn-outline-primary logo-button\"\n          to={routing.start}\n        >\n          <div>\n            <div className=\"position-absolute\">\n              <Octicon icon={Home} width={30} height={50} />\n            </div>\n          </div>\n        </Link>\n      </div>\n    </>\n  );\n};\n","export const links = {\n  impressum: \"https://legal.comsysto.com/comsysto.github.io/de/impressum/\",\n  dataProtection:\n    \"https://legal.comsysto.com/comsysto.github.io/en/datenschutz/\"\n};\n","import React, { FC } from \"react\";\nimport { links } from \"../data/links\";\nimport Octicon, { Key, Law } from \"@primer/octicons-react\";\n\ninterface Props {}\n\nexport const Legal: FC<Props> = ({  }: Props) => {\n  return (\n    <div className=\"main-menu_legal-stuff\">\n      <small>\n        <a href={links.impressum} className=\"ml-2 mr-2\">\n          <Octicon icon={Law} /> Impressum\n        </a>\n      </small>\n      <small>\n        <a href={links.dataProtection}>\n          <Octicon icon={Key} /> Data Protection\n        </a>\n      </small>\n    </div>\n  );\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { RedirectToAboutOnFirstVisit } from \"./RedirectToAboutOnFirstVisit\";\nimport { HomeButton } from \"./HomeButton\";\nimport backgroundImage from \"../images/john-westrock-UHFQPFt5-WA-unsplash.jpg\";\nimport { Legal } from \"./Legal\";\n\ninterface Props {\n  noBackground?: boolean;\n  noHomeButton?: boolean;\n  noRedirectToAboutOnFirstVisit?: boolean;\n  children: ReactNode;\n}\n\nexport const AppPage: FC<Props> = ({\n  noBackground,\n  noHomeButton,\n  noRedirectToAboutOnFirstVisit,\n  children\n}: Props) => {\n  const wrapWithRedirect = (content: ReactElement): ReactElement => {\n    if (noRedirectToAboutOnFirstVisit) {\n      return (\n        <RedirectToAboutOnFirstVisit>{content}</RedirectToAboutOnFirstVisit>\n      );\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <>\n      {wrapWithRedirect(\n        <>\n          <Legal />\n          {!noHomeButton && <HomeButton />}\n          {!noBackground && (\n            <img src={backgroundImage} className=\"background\" />\n          )}\n          {children}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { FileMedia } from \"@primer/octicons-react\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { labels } from \"../data/labels\";\n\ninterface Props {}\n\nexport const AssetsPage: FC<Props> = ({  }: Props) => {\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader\n          icon={FileMedia}\n          headline={labels.assetPage.headline}\n        ></PageHeader>\n      }\n    >\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <table className=\"table\">\n            <thead>\n              <th>Image</th>\n              <th>Artist</th>\n              <th>Website</th>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Background (Mountain)</td>\n                <td>\n                  <a href=\"https://unsplash.com/@johnwestrock\">John Westrock</a>\n                </td>\n                <td>\n                  <a href=\"https://unsplash.com/photos/UHFQPFt5-WA\">Unsplash</a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport { GridMapsPage } from \"./App/GridMapsPage\";\nimport { SessionsPage } from \"./App/SessionsPage\";\nimport { ManageTokenTypesPage } from \"./App/ManageTokenTypesPage\";\nimport { AboutPage } from \"./App/AboutPage\";\nimport { PlayPage } from \"./App/PlayPage\";\nimport { IndexedDbStorageProvider } from \"./services/IndexedDbStorageProvider\";\nimport { StartPage } from \"./App/StartPage\";\nimport { GridMapStorage } from \"./services/GridMapStorage\";\nimport { SessionStorage } from \"./services/SessionStorage\";\nimport { NewGridMapPage } from \"./App/NewGridMapPage\";\nimport { NewSessionPage } from \"./App/NewSessionPage\";\nimport { OpenSourcePage } from \"./App/OpenSourcePage\";\nimport { AppPage } from \"./App/AppPage\";\nimport { Route } from \"react-router\";\nimport { AssetsPage } from \"./App/AssetsPage\";\n\nexport const routing = {\n  start: \"/\",\n  play: \"/play\",\n  sessions: \"/sessions\",\n  newSessions: \"/sessions/new\",\n  gridMaps: \"/manage-maps\",\n  newGridMap: \"/manage-maps/new\",\n  about: \"/about\",\n  tokenTypes: \"/token-types\",\n  openSource: \"/open-source\",\n  assets: \"/assets\"\n};\n\ninterface Props {}\n\nexport const App: FC<Props> = ({  }: Props) => {\n  const [services] = useState(() => {\n    const storageProvider = new IndexedDbStorageProvider();\n    const gridMapStorage = new GridMapStorage(storageProvider);\n    const sessionStorage = new SessionStorage(storageProvider);\n    return { storageProvider, gridMapStorage, sessionStorage };\n  });\n\n  return (\n    <>\n      <Router>\n        <div className=\"h-100\">\n          <Switch>\n            <Route path={routing.start} exact={true}>\n              <AppPage noHomeButton={true}>\n                <StartPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.play}>\n              <AppPage noBackground={true}>\n                <PlayPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.newSessions}>\n              <AppPage>\n                <NewSessionPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.sessions}>\n              <AppPage>\n                <SessionsPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.newGridMap}>\n              <AppPage>\n                <NewGridMapPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.gridMaps}>\n              <AppPage>\n                <GridMapsPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.tokenTypes}>\n              <AppPage>\n                <ManageTokenTypesPage />\n              </AppPage>\n            </Route>\n            <Route path={routing.openSource}>\n              <AppPage>\n                <OpenSourcePage />\n              </AppPage>\n            </Route>\n            <Route path={routing.assets}>\n              <AppPage>\n                <AssetsPage />\n              </AppPage>\n            </Route>\n            <Route path={routing.about} noRedirectToAboutOnFirstVisit={true}>\n              <AppPage>\n                <AboutPage />\n              </AppPage>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import flatMap from \"array.prototype.flatmap\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"jquery\";\nimport \"popper.js\";\nimport \"bootstrap\";\n\nflatMap.shim();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/john-westrock-UHFQPFt5-WA-unsplash.3466438c.jpg\";"],"sourceRoot":""}