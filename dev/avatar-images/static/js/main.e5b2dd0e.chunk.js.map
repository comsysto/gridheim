{"version":3,"sources":["images/john-westrock-UHFQPFt5-WA-unsplash.jpg","common/listgroup/ListGroup.tsx","utils/Immerable.ts","utils/Vector.ts","model/ImageGridMap.ts","common/media/MediaContainer.tsx","common/media/MediaBody.tsx","common/listgroup/ListGroupItem.tsx","common/GridMapList.tsx","common/FullPageWithHeading.tsx","common/ExplanationBox.tsx","common/PageHeader.tsx","common/PageHeaderWithButtons.tsx","App/GridMapsPage.tsx","App/SessionsPage/SessionList.tsx","utils/arrayToDict.ts","utils/useRouter.ts","utils/useNavigation.ts","App/SessionsPage.tsx","App/ManageTokenTypesPage.tsx","App/AboutPage/AboutIcon.tsx","App/AboutPage/IntroSection.tsx","App/AboutPage/HelloSection.tsx","data/labels.tsx","data/links.ts","App/AboutPage/GithubSection.tsx","App/AboutPage.tsx","model/Token.ts","model/Square.ts","model/Drawing.ts","model/DrawingPane.ts","utils/uuid.ts","services/AbstractService.ts","utils/range.ts","App/PlayPage/services/BattleMapService.ts","model/DrawingColor.ts","model/DrawingWidth.ts","services/AbstractModeBasedService.ts","App/PlayPage/services/modebased/PlayModeService.ts","App/PlayPage/services/modebased/DrawingService.ts","model/TokenType.ts","App/PlayPage/services/AssetService.ts","utils/is.ts","App/PlayPage/services/modebased/ModeBasedService.ts","App/PlayPage/services/modebased/ManageTokenService.ts","App/PlayPage/services/ModeService.ts","App/PlayPage/services/SaveSessionService.ts","App/PlayPage/Layout/PlayMap/DisplayBackgroundImage.tsx","utils/useObservable.ts","utils/classesMap.ts","common/DisplayToken.tsx","App/PlayPage/Layout/PlayMap/DisplayTokens.tsx","utils/toSvgPoint.ts","utils/toVectorInSvg.ts","utils/pointInSvgFromEvent.ts","App/PlayPage/Layout/PlayMap/DrawingCapturePane.tsx","App/PlayPage/Layout/PlayMap/DisplayDrawingPane.tsx","utils/useDragSvg.ts","utils/useTouch.ts","utils/useStateRef.ts","utils/Transform.ts","App/PlayPage/Layout/PlayMap/Viewport.tsx","App/PlayPage/common/BattleGrid.tsx","App/PlayPage/Layout/PlayMap/BackgroundGrid.tsx","App/PlayPage/Layout/PlayMap/SelectionGrid.tsx","App/PlayPage/Layout/PlayMap.tsx","App/PlayPage/common/ControlBarButton.tsx","App/PlayPage/Layout/ControlBar/DrawingControlBar.tsx","App/PlayPage/Layout/ControlBar/ModeControlBar.tsx","App/PlayPage/Layout/ControlBar/ManageTokenControlBar.tsx","App/PlayPage/Layout/ControlBar/ViewportControlBar.tsx","App/PlayPage/Layout/ControlBar.tsx","common/LayoutGrid.tsx","model/ViewBox.ts","App/PlayPage/Layout/AddTokenModal/TokenTypeSelection.tsx","common/Modal.tsx","App/PlayPage/Layout/AddTokenModal.tsx","App/Legal.tsx","App/PlayPage/Layout.tsx","App/PlayPage/NoSessionsFound.tsx","App/PlayPage/services/modebased/ZoomModeService.ts","App/PlayPage/services/ViewportService.ts","utils/windowAspectRatio.ts","App/PlayPage.tsx","services/IndexedDbStorageProvider.ts","App/StartPage/actions/ShowSessionsAction.ts","App/StartPage/actions/ShowGridMapsAction.ts","App/StartPage/StartSection.tsx","App/StartPage/StartSectionItem.tsx","App/StartPage.tsx","App/StartPage/actions/PlayAction.ts","App/StartPage/actions/NewSessionAction.ts","App/StartPage/actions/NewGridMapAction.ts","App/StartPage/actions/AboutAction.ts","App/StartPage/actions/OpenSourceAction.ts","App/StartPage/actions/AssetAction.ts","model/BackgroundImage.ts","services/AbstractStorage.tsx","services/ImageGridMapRepository.tsx","model/Session.ts","services/SessionRepository.tsx","common/ButtonBar.tsx","App/NewGridMapPage/common/WizardButtons.tsx","common/StepIndicator.tsx","common/Row.tsx","common/Wizard.tsx","common/Wizard/WizardStep.tsx","App/NewGridMapPage/ImageUpload.tsx","model/Transformation.tsx","utils/Rect.ts","App/NewGridMapPage/SelectionRect.tsx","App/NewGridMapPage/common/ViewControls.tsx","App/NewGridMapPage/PlaceSquare.tsx","App/NewGridMapPage/PreviewGrid.tsx","App/NewGridMapPage/AddMetadata.tsx","utils/useStateWithCallback.ts","App/NewGridMapPage.tsx","App/SessionsPage/StartSession.tsx","App/SessionsPage/NoGridMapsFound.tsx","App/NewSessionPage.tsx","data/opensource.ts","App/OpenSourcePage.tsx","services/SettingStorage.tsx","App/RedirectToAboutOnFirstVisit.tsx","App/HomeButton.tsx","App/AppPage.tsx","App/AssetsPage.tsx","services/GridMapService.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","ListGroup","className","children","Immerable","target","immerable","Vector","x","y","Object","freeze","this","like","clientX","clientY","deltaX","deltaY","n","point","multiplier","d","withX","withY","v","Math","abs","sqrt","pow","max","ceil","zero","fromNumber","ImageGridMap","name","image","transform","gridMapName","STORAGE_KEY_PREFIX","key","startsWith","width","height","scale","MediaContainer","MediaBody","ListGroupItem","GridMapList","gridMaps","values","map","gridMap","squares","translate","src","url","ResetScrolling","React","createContext","FullPageWithHeading","heading","ref","useRef","Provider","value","current","scrollTo","ExplanationBox","PageHeader","icon","headline","PageHeaderWithButtons","Children","child","i","GridMapsPage","imageGridMapRepository","useState","selected","setSelected","setGridMaps","reload","useCallback","findAll","subscribe","next","useEffect","FileMedia","type","onClick","delete","Trashcan","SessionList","sessions","gridMapsForName","session","date","arrayToDict","list","fn","reduce","dict","useRouter","useContext","RouterContext","useNavigation","router","destinations","destination","history","push","SessionsPage","gridMapService","sessionRepository","setSessions","setGridMapForName","combineLatest","getGridMaps","routing","play","navigateToPlay","Repo","storeCurrentSessionName","Play","ManageTokenTypesPage","AboutIcon","size","IntroSection","Milestone","HelloSection","GistSecret","href","labels","playPage","controlBar","drawBackgroundButton","drawNotesButton","playButton","addTokensButton","zoomButton","newSessionPage","explanation","newGridMapPage","imageUpload","description","rect1","rect2","preview","metadata","assetPage","openSourcePage","aboutPage","startLink","startPage","sections","info","Info","about","button","openSource","assets","newGridMap","newSession","showGridMaps","showSessions","links","GithubSecton","Octoface","AboutPage","to","start","Token","id","tokenType","label","square","Square","Drawing","path","color","CURRENT_ID","p","join","DrawingPane","drawings","json","drawingJson","drawing","withDrawingRemoved","drawingId","filter","uuid","Date","getTime","performance","now","replace","c","r","random","floor","toString","AbstractService","disposeS$","Subject","dispose$","asObservable","complete","o","pipe","takeUntil","range","Array","keys","BattleMapService","tokensS$","BehaviorSubject","tokens$","selectedTokenS$","selectedToken$","selectedSquareS$","selectedSquare$","squareSelectableS$","squareSelectable$","tokenSelectableS$","tokenSelectable$","tokenSizeS$","tokenSize$","hoveringSquareS$","hoveringSquare$","highlightedSquares$","squareSelectable","tokenSize","selectedToken","hoveringSquare","EMPTY_READONLY_ARRAY","dx","dy","flat","debounceTime","token","tokenSelectable","tokens","produce","oldSelectedToken","newToken","find","tokenLabel","updateTokens","selectToken","length","selectable","tokenId","s","DrawingColor","DrawingWidth","AbstractModeBasedService","activeS$","active$","onDeactivate$","onActivate","PlayModeService","battleMapService","setTokenSelectable","setSquareSelectable","selectSquare","distinctUntilChanged","a1","a2","a","b","selectedSquare","forEach","DrawingService","paneS$","pane$","drawingColorS$","red","drawingColor$","drawingWidthS$","m","drawingWidth$","drawingModeS$","drawingMode$","points$","active","pane","currentDrawing","drawingColor","drawingWidth","withPointAdded","panePreview","withDrawingAdded","error","withId","drawingMode","TokenType","border","AssetService","defaultStrokeColor","tokenTypes","tokenLabels","is","isEqualToOneOf","some","ModeBasedService","mode$","services","disposeSubject","disposeLastState","mode","service","activate","console","log","ManageTokenService","assetService","mode$S","tap","modeCallbacks","deactivate$","setTokenSize","tokenType$","tokenLabel$","addToken","removeSelectedToken","inactive","isSwitchTokenType$","tokenTypeS$","tokenLabelS$","controlServices","ModeService","initalMode","modeBasedServices","modeS$","untilDisposed","SaveSessionService","onLoad","toStore","sessionS$","session$","gridMapS$","gridMap$","auditTime","saveSession","store","valuesToStore","onLoadSubject","findCurrentSessionName","flatMap","sessionName","of","throwError","findBy","getGridMapByName","loadedSession","loadedData","content","subject","observable","data","with","toLocaleString","catchError","DisplayBackgroundImage","scaleTranslateAttribute","xlinkHref","useObservable","observable$","defaultValue","dependencies","observableState","setObservableState","toSubscribe","subscription","unsubscribe","classesMap","classNameMap","DisplayToken","tokenClasses","e","preventDefault","stopPropagation","fill","stroke","cx","cy","DisplayTokens","toSvgPoint","clientVector","element","svgPoint","ownerSVGElement","createSVGPoint","matrixTransform","getScreenCTM","inverse","toVectorInSvg","fromCoords","pointInSvgFromEvent","currentTarget","fromClientCoords","DrawingCapturePane","drawingService","pointSubject","setPointSubject","onPointerDown","currentlyDrawing","onPointerUp","onPointerCancel","onPointerMove","pointInSvg","ID_PREFIX_LENGTH","DisplayDrawingPane","drawingPane","drawingsGroupRef","rect","buttons","groupElement","childNodes","SVGPolylineElement","isPointInStroke","isPointInFill","substring","removeDrawing","points","svgPath","useDragSvg","config","draggingRef","returnedDragging","setReturnedDragging","lastPoint","configRef","setDragging","dragging","eventHandler","svgTarget","startTime","onStart","onMove","last","delta","subtract","document","addEventListener","onEnd","removeEventListener","position","touchPoints","add","distance","stateFromTouches","targetSvg","touches","t","touchCount","useTouch","lastStateRef","initial","state","setState","useStateRef","getStart","setStart","eventHandlers","onTouchStart","svgTargetRef","multiTouchEvent","lastState","eventFromStates","nativeEvent","Transform","translation","translateString","scaleString","translateScaleString","scaleTranslateString","identity","Viewport","viewportService","groupRef","outerGroupRef","transform$","draggingEnabled","mouseDragEnabled$","touchEnabled","touchEnabled$","onWheel","mousePosition","updateTransform","ctrlKey","newScale","withTranslate","withScale","fromDeltaCoords","passive","drag","multiTouch","scaleFactor","oldPointOnMap","newPointOnMap","viewport","viewport_dragging","translateScaleAttribute","BattleGrid","BackgroundGrid","SelectionGrid","highlightedSquares","onHover","highlightedMap","toCoordinateString","highlighted","onMouseOver","PlayMap","saveSessionService","backgroundDrawingService","notesDrawingService","modeService","notesDrawing","viewBox","viewBox$","toViewBoxString","hoverOverSquare","ControlBarButton","classes","text","iconSize","tooltip","iconHeight","additionalClasses","title","iconSizeByWidth","l","DrawingControlBar","drawingModeButton","switchDrawingMode","Pencil","Pulse","switchDrawingWidth","widthButton","Paintcan","switchDrawingColor","colorButton","ModeControlBar","modeButton","activeInMode","switchMode","GitCompare","Note","Search","ManageTokenControlBar","manageTokenService","currentMode","Plus","event","btn","ViewportControlBar","action","zoomIn","Dash","zoomOut","ControlBar","showSecondary","oneOf","LayoutGrid","items","columns","component","item","idx","ViewBox","TokenTypeSelection","svgSize","maxTokenSize","Modal","onOk","okEnabled","onCancel","buttonText","header","open","modalElementRef","useLayoutEffect","$","modal","on","tabIndex","disabled","undefined","AddTokenModal","showModal","selectedTokenType","selectedTokenLabel","selectedTokenSize","setTokenType","setTokenLabel","Legal","Law","Key","Layout","props","showLegal","NoSessionsFound","ZoomModeService","ViewportService","transform$S","VIEW_BOX_SIZE","window","innerWidth","innerHeight","shareReplay","initialScale$","min","PlayPage","setServices","sessionLoaded","setSessionLoaded","playModeService","zoomModeService","zoom","tokensJson","mappedTokens","tokenJson","tokenTypeForName","withCurrentDrawingRemoved","paneJson","setPane","fromJson","loadAndStart","toPromise","then","result","dispose","IndexedDbStorageProvider","db","Dexie","blobs","version","stores","TABLE_NAME","table","fromPromise","get","entry","toArray","put","showSessionsAction","sessionStorage","count","descriptionText","actionText","section","showGridMapsAction","StartSection","hero","index","StartSectionItem","StartPage","actions","findCurrentSession","newSessions","take","entries","sectionIndex","sectionName","actionIndex","BackgroundImage","copy","assign","AbstractStorage","storageProvider","isStorageKey","toStorageKey","parseJson","keyToStorageKey","listKeys","observables","loadObject","forkJoin","array","objectKey","jsonString","JSON","stringify","set","parse","remove","ImageGridMapRepository","storageKey","Session","CURRENT_SESSION_STORAGE_KEY","SessionRepository","ButtonBar","childCount","WizardButtons","onBack","onNext","nextDisabled","lastStep","ChevronLeft","ChevronRight","Check","StepIndicator","steps","activeIndex","indexOf","step","future","Star","Verified","Row","colWidth","WizardContext","onValueChange","input","Wizard","onDone","setCurrent","stepConfigs","context","findIndex","currentStepConfig","X","WizardStep","childArgs","ImageUpload","setImage","updateImage","setImageFromUrl","img","Image","onload","ImageModel","onChange","files","file","reader","FileReader","onloadend","readAsDataURL","htmlFor","Transformation","Rect","topLeft","sideLength","vector","maxComponent","addX","inverseX","addY","inverseY","SelectionRect","selectionRect","setSelectionRect","updateRect","normalized","strokeSize","dragRect","startPoint","withSideLength","useDragCorner","changeRect","dragCornerMatrix","moveTopLeftTo","moveBottomLeftTo","moveTopRightTo","moveBottomRightTo","fillOpacity","strokeDasharray","strokeWidth","strokeOpacity","ViewControls","transformationFromProps","transformation","onTransformationChange","setTransformation","updateTransformation","DiffAdded","DiffRemoved","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","PlaceSquare","viewPosition","initialRect","default","setRect","style","asTransformString","PreviewGrid","transformParams","viewTransformation","setViewTransformation","distanceByAxis","axis","averageA","squareCount","round","calculateParams","params","setParams","onChangeRef","imageTransformation","calculatedA","dy1","calculateTransformation","xSquareCount","ySquareCount","components","AddMetadata","initialState","changeCallback","old","useStateWithCallback","setName","Tag","placeholder","NewGridMapPage","navigateToStart","selectBackground","StartSession","onSave","setStep","setBackgroundName","NoGridMapsFound","NewSessionPage","noGridMaps","opensource","page","licence","licenceUrl","Bootstrap","RxJS","Typescript","Octicons","Formik","Immer","JQuery","OpenSourcePage","SettingToggle","localStorage","getItem","setItem","settingStorage","redirectToAbout","RedirectToAboutOnFirstVisit","HomeButton","Home","AppPage","noBackground","noHomeButton","hideLegal","noRedirectToAboutOnFirstVisit","backgroundImage","AssetsPage","GridMapService","BLANK_GRID_MAP","isAsset","App","exact","Boolean","location","hostname","match","shim","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5b2dd0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/john-westrock-UHFQPFt5-WA-unsplash.3466438c.jpg\";","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n}\n\nexport const ListGroup: FC<Props> = ({ className, children }: Props) => {\n  return <div className={`list-group ${className || \"\"}`}>{children}</div>;\n};\n","import { immerable } from \"immer\";\n\nexport function Immerable(): ClassDecorator {\n  return (target: any) => {\n    target[immerable] = true;\n  };\n}\n","export class Vector {\n  static fromCoords(like: { x: number; y: number }): Vector {\n    return new Vector(like.x, like.y);\n  }\n  static fromClientCoords(like: { clientX: number; clientY: number }): Vector {\n    return new Vector(like.clientX, like.clientY);\n  }\n\n  static fromDeltaCoords(like: { deltaX: number; deltaY: number }): Vector {\n    return new Vector(like.deltaX, like.deltaY);\n  }\n\n  static fromNumber(n: number): Vector {\n    return new Vector(n, n);\n  }\n\n  static readonly zero = Vector.fromNumber(0);\n\n  constructor(readonly x: number, readonly y: number) {\n    Object.freeze(this);\n  }\n\n  subtract(point: Vector): Vector {\n    return new Vector(this.x - point.x, this.y - point.y);\n  }\n\n  add(point: Vector): Vector {\n    return new Vector(this.x + point.x, this.y + point.y);\n  }\n\n  get abs(): Vector {\n    return new Vector(Math.abs(this.x), Math.abs(this.y));\n  }\n\n  get length(): number {\n    return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n  }\n\n  get maxComponent(): number {\n    return Math.max(this.x, this.y);\n  }\n\n  scale(multiplier: number): Vector {\n    return new Vector(this.x * multiplier, this.y * multiplier);\n  }\n\n  withX(x: number): Vector {\n    return new Vector(x, this.y);\n  }\n\n  withY(y: number): Vector {\n    return new Vector(this.x, y);\n  }\n\n  addX(d: number): Vector {\n    return this.withX(this.x + d);\n  }\n\n  get inverseX(): Vector {\n    return this.withX(-this.x);\n  }\n\n  get inverseY(): Vector {\n    return this.withY(-this.y);\n  }\n\n  addY(d: number): Vector {\n    return this.withY(this.y + d);\n  }\n\n  equals(v: any): boolean {\n    if (!v || !v.x || !v.y) {\n      return false;\n    }\n    return this.x === v.x && this.y === v.y;\n  }\n\n  get ceil(): Vector {\n    return new Vector(Math.ceil(this.x), Math.ceil(this.y));\n  }\n\n  get components(): [number, number] {\n    return [this.x, this.y];\n  }\n}\n","import { Immerable } from \"../utils/Immerable\";\nimport { BackgroundImage } from \"./BackgroundImage\";\nimport { GridMap } from \"./GridMap\";\nimport { Transform } from \"../utils/Transform\";\nimport { Vector } from \"../utils/Vector\";\n\n@Immerable()\nexport class ImageGridMap implements GridMap {\n  static readonly STORAGE_KEY_PREFIX = \"map-\";\n\n  static storageKey(gridMapName: string): string {\n    return `${this.STORAGE_KEY_PREFIX}${gridMapName}`;\n  }\n\n  static isStorageKey(key: string): boolean {\n    return key.startsWith(this.STORAGE_KEY_PREFIX);\n  }\n\n  constructor(\n    readonly name: string,\n    readonly image: BackgroundImage,\n    readonly transform: Transform\n  ) {\n    Object.freeze(this);\n  }\n\n  get squares(): Vector {\n    return new Vector(this.image.width, this.image.height).scale(\n      this.transform.scale\n    ).ceil;\n  }\n\n  get isAsset(): boolean {\n    return false;\n  }\n}\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const MediaContainer: FC<Props> = ({ children }: Props) => {\n  return <div className=\"media\">{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const MediaBody: FC<Props> = ({ children }: Props) => {\n  return <div className=\"media-body\">{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const ListGroupItem: FC<Props> = ({ children }: Props) => {\n  return <div className=\"list-group-item\">{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { ListGroup } from \"./listgroup/ListGroup\";\nimport { ImageGridMap } from \"../model/ImageGridMap\";\nimport { MediaContainer } from \"./media/MediaContainer\";\nimport { MediaBody } from \"./media/MediaBody\";\nimport { GridMap } from \"../model/GridMap\";\nimport { ListGroupItem } from \"./listgroup/ListGroupItem\";\n\ninterface Props {\n  gridMaps: ReadonlyArray<GridMap>;\n  children?: (gridMap: GridMap) => ReactNode;\n}\n\nexport const GridMapList: FC<Props> = ({ gridMaps, children }: Props) => {\n  return (\n    <ListGroup>\n      {Object.values(gridMaps).map((gridMap: GridMap) => {\n        return (\n          <ListGroupItem key={gridMap.name}>\n            <MediaContainer>\n              <MediaBody>\n                <h4>{gridMap.name}</h4>\n                <dl className=\"row\">\n                  <dt className=\"col-sm-3\">Size in Squares</dt>\n                  <dd className=\"col-sm-9\">\n                    {gridMap.squares.x}x{gridMap.squares.y}\n                  </dd>\n\n                  {gridMap instanceof ImageGridMap && (\n                    <>\n                      <dt className=\"col-sm-3\">Scale</dt>\n                      <dd className=\"col-sm-9\">{gridMap.transform.scale}</dd>\n\n                      <dt className=\"col-sm-3\">X Offset</dt>\n                      <dd className=\"col-sm-9\">\n                        {gridMap.transform.translate.x}\n                      </dd>\n\n                      <dt className=\"col-sm-3\">Y Offset</dt>\n                      <dd className=\"col-sm-9\">\n                        {gridMap.transform.translate.y}\n                      </dd>\n                    </>\n                  )}\n                </dl>\n                <div>{children && children(gridMap)}</div>\n              </MediaBody>\n              {gridMap instanceof ImageGridMap && (\n                <img\n                  className=\"ml-3 img-thumbnail image-300\"\n                  src={gridMap.image.url}\n                />\n              )}\n            </MediaContainer>\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n","import React, { FC, ReactNode, useRef } from \"react\";\n\ninterface Props {\n  heading: ReactNode;\n  children?: ReactNode;\n}\n\nexport const ResetScrolling = React.createContext<() => void>(() => {});\n\nexport const FullPageWithHeading: FC<Props> = ({\n  heading,\n  children\n}: Props) => {\n  const onResetScrolling = (): void => {\n    if (ref.current) {\n      ref.current.scrollTo(0, 0);\n    }\n  };\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  return (\n    <>\n      <div\n        ref={ref}\n        className=\"h-100 scrollable-y full-page-with-heading_content-container\"\n      >\n        <div className=\"container text-center full-page-with-heading_heading-container\">\n          {heading}\n        </div>\n        <ResetScrolling.Provider value={onResetScrolling}>\n          <div className=\"container\">{children}</div>\n        </ResetScrolling.Provider>\n      </div>\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const ExplanationBox: FC<Props> = ({ children }: Props) => {\n  return <div className=\"alert alert-primary\">{children}</div>;\n};\n","import React, { FC, ReactNode } from \"react\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  icon: Icon;\n  headline: string;\n  children?: ReactNode;\n}\n\nexport const PageHeader: FC<Props> = ({ icon, headline, children }: Props) => {\n  return (\n    <>\n      <h1>\n        {/*<Octicon icon={icon} size={40} />*/}\n        <span className=\"ml-4\">{headline}</span>\n      </h1>\n      {children}\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Icon } from \"@primer/octicons-react\";\nimport { PageHeader } from \"./PageHeader\";\n\ninterface Props {\n  icon: Icon;\n  headline: string;\n  children: ReactNode;\n}\n\nexport const PageHeaderWithButtons: FC<Props> = ({\n  icon,\n  headline,\n  children\n}: Props) => {\n  return (\n    <PageHeader icon={icon} headline={headline}>\n      <div className=\"ml-5 mt-3 mb-3 text-left\">\n        {React.Children.map(children, (child, i) => (\n          <>\n            {i !== 0 && <span className=\"ml-2\" />}\n            {child}\n          </>\n        ))}\n      </div>\n    </PageHeader>\n  );\n};\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport { ImageGridMap } from \"../model/ImageGridMap\";\nimport { GridMapList } from \"../common/GridMapList\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, { FileMedia, Trashcan } from \"@primer/octicons-react\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { PageHeaderWithButtons } from \"../common/PageHeaderWithButtons\";\nimport { ImageGridMapRepository } from \"../services/ImageGridMapRepository\";\n\ninterface Props {\n  imageGridMapRepository: ImageGridMapRepository;\n}\n\nexport const GridMapsPage: FC<Props> = ({ imageGridMapRepository }: Props) => {\n  const [selected, setSelected] = useState<ImageGridMap | null>(null);\n  const [gridMaps, setGridMaps] = useState<ReadonlyArray<ImageGridMap>>([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const reload = useCallback((): void => {\n    imageGridMapRepository.findAll().subscribe({ next: setGridMaps });\n  }, [imageGridMapRepository]);\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  const heading = (\n    <PageHeaderWithButtons icon={FileMedia} headline=\"Manage Maps\">\n      {selected && <></>}\n    </PageHeaderWithButtons>\n  );\n\n  return (\n    <>\n      <FullPageWithHeading heading={heading}>\n        <ExplanationBox>\n          <strong>Maps</strong> are stored images with a grid drawn over them.\n          <br />\n          You create a map by selecting an image file on your computer and\n          configure a grid for them. The images are stored locally in your\n          browser local storage and are not sent to the internet.\n        </ExplanationBox>\n        <div>\n          <div className=\"col-md-12\">\n            <GridMapList gridMaps={gridMaps}>\n              {gridMap => (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger ml-2\"\n                  onClick={() => {\n                    imageGridMapRepository.delete(gridMap.name);\n                    setSelected(null);\n                    reload();\n                  }}\n                >\n                  <Octicon icon={Trashcan} />\n                  &nbsp; Delete Map\n                </button>\n              )}\n            </GridMapList>\n          </div>\n        </div>\n      </FullPageWithHeading>\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { ListGroupItemAction } from \"../../common/listgroup/ListGroupItemAction\";\nimport { MediaContainer } from \"../../common/media/MediaContainer\";\nimport { MediaBody } from \"../../common/media/MediaBody\";\nimport { ListGroup } from \"../../common/listgroup/ListGroup\";\nimport { Session } from \"../../model/Session\";\nimport { ImageGridMap } from \"../../model/ImageGridMap\";\nimport { Dict } from \"../../utils/types\";\nimport { GridMap } from \"../../model/GridMap\";\nimport { ListGroupItem } from \"../../common/listgroup/ListGroupItem\";\n\ninterface Props {\n  sessions: ReadonlyArray<Session>;\n  gridMapsForName: Readonly<Dict<GridMap>>;\n  children?: (session: Session) => ReactNode;\n}\n\nexport const SessionList: FC<Props> = ({\n  sessions,\n  gridMapsForName,\n  children\n}: Props) => {\n  return (\n    <ListGroup>\n      {sessions.map(session => {\n        const gridMap = gridMapsForName[session.gridMapName];\n\n        return (\n          <ListGroupItem key={session.name}>\n            <MediaContainer>\n              <MediaBody>\n                <h4>{session.name}</h4>\n                <dl className=\"row\">\n                  {gridMap && (\n                    <>\n                      <dt className=\"col-sm-3\">Map</dt>\n                      <dd className=\"col-sm-9\">\n                        {gridMap.name} ({gridMap.squares.x}x{gridMap.squares.y})\n                      </dd>\n                    </>\n                  )}\n\n                  <dt className=\"col-sm-3\">Date</dt>\n                  <dd className=\"col-sm-9\">{session.date}</dd>\n                </dl>\n                {!gridMap && (\n                  <span className=\"badge badge-pill badge-danger\">\n                    Invalid: Background is missing\n                  </span>\n                )}\n                <div>{children && children(session)}</div>\n              </MediaBody>\n              {gridMap && gridMap instanceof ImageGridMap && (\n                <img\n                  src={gridMap.image.url}\n                  className=\"img-thumbnail image-200\"\n                />\n              )}\n            </MediaContainer>\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n","import { Dict } from \"./types\";\n\nexport function arrayToDict<T>(\n  list: ReadonlyArray<T>,\n  fn: (t: T) => string\n): Readonly<Dict<T>> {\n  return list.reduce((dict, value) => {\n    dict[fn(value)] = value;\n    return dict;\n  }, {} as Dict<T>);\n}\n","import { useContext } from \"react\";\nimport {\n  __RouterContext as RouterContext,\n  RouteComponentProps\n} from \"react-router\";\n\nexport const useRouter = (): RouteComponentProps => {\n  return useContext(RouterContext);\n};\n","import { useRouter } from \"./useRouter\";\n\nexport const useNavigation = <T extends string[]>(\n  ...destinations: T\n): { [K in keyof T]: () => void } => {\n  const router = useRouter();\n  return destinations.map(destination => () => {\n    router.history.push(destination);\n  }) as any;\n};\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { Session } from \"../model/Session\";\nimport { SessionRepository } from \"../services/SessionRepository\";\nimport { Dict } from \"../utils/types\";\nimport Octicon, { Play, Repo, Trashcan } from \"@primer/octicons-react\";\nimport { SessionList } from \"./SessionsPage/SessionList\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { combineLatest } from \"rxjs\";\nimport { arrayToDict } from \"../utils/arrayToDict\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { useNavigation } from \"../utils/useNavigation\";\nimport { routing } from \"../App\";\nimport { GridMapService } from \"../services/GridMapService\";\nimport { GridMap } from \"../model/GridMap\";\n\ninterface Props {\n  gridMapService: GridMapService;\n  sessionRepository: SessionRepository;\n}\n\nexport const SessionsPage: FC<Props> = ({\n  gridMapService,\n  sessionRepository\n}: Props) => {\n  const [sessions, setSessions] = useState<ReadonlyArray<Session>>([]);\n  const [gridMapsForName, setGridMapForName] = useState<\n    Readonly<Dict<GridMap>>\n  >({});\n\n  const reload = useCallback((): void => {\n    combineLatest([\n      sessionRepository.findAll(),\n      gridMapService.getGridMaps()\n    ]).subscribe({\n      next: ([sessions, gridMaps]) => {\n        setSessions(sessions);\n        setGridMapForName(arrayToDict(gridMaps, gridMap => gridMap.name));\n      }\n    });\n  }, [sessionRepository, gridMapService]);\n\n  useEffect(() => {\n    reload();\n  }, [reload]);\n\n  const [navigateToPlay] = useNavigation(routing.play);\n\n  const heading = <PageHeader icon={Repo} headline=\"Sessions\" />;\n\n  return (\n    <FullPageWithHeading heading={heading}>\n      <ExplanationBox>\n        <strong>Sessions</strong> are the place where all token positions on the\n        map and all drawings are stored.\n        <br />\n        You can switch between sessions on this screen so you can come back to a\n        game later ...\n      </ExplanationBox>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <SessionList sessions={sessions} gridMapsForName={gridMapsForName}>\n            {session => (\n              <>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary mr-2\"\n                  onClick={() => {\n                    sessionRepository.storeCurrentSessionName(session.name);\n                    navigateToPlay();\n                  }}\n                >\n                  <Octicon icon={Play} />\n                  &nbsp; Start Session\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => {\n                    sessionRepository.delete(session.name);\n                    reload();\n                  }}\n                >\n                  <Octicon icon={Trashcan} />\n                  &nbsp; Delete Session\n                </button>\n              </>\n            )}\n          </SessionList>\n        </div>\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","import React, { FC } from \"react\";\n\ninterface Props {}\n\nexport const ManageTokenTypesPage: FC<Props> = ({}: Props) => {\n  return (\n    <>\n      <h1>Manage Token Types</h1>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  icon: Icon;\n}\n\nexport const AboutIcon: FC<Props> = ({ icon }: Props) => {\n  return (\n    <>\n      <span className=\"mr-3\">\n        <Octicon icon={icon} size={23} />\n      </span>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { Milestone } from \"@primer/octicons-react\";\nimport { AboutIcon } from \"./AboutIcon\";\n\ninterface Props {}\n\nexport const IntroSection: FC<Props> = ({}: Props) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <p>\n          <AboutIcon icon={Milestone} />\n          <strong>Gridheim</strong> is here to provide a great experiance in\n          modern rpg environments.\n        </p>\n\n        <p>\n          Currently <strong>Gridheim</strong> features a digital grid map that\n          can be used on tablets and other devices.\n        </p>\n        <p>\n          Grid maps are used for pen&pencil roll playing games (like D&D,\n          pathfinder, etc.) to show the position of characters and monsters on a\n          map of the surrounding environment.\n        </p>\n\n        <p>\n          Key goals of <strong>Gridheim</strong> are:\n          <ul>\n            <li>A UI that don't get in the way of human interaction</li>\n            <li>\n              A paper like usage by supporting tablets and pens as first class\n              citizen\n            </li>\n            <li>\n              Support as much modern devices as possible through deployment as\n              web application\n            </li>\n            <li>\n              Privacy of all your data by storing all assets in your local\n              browser\n            </li>\n          </ul>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { MediaBody } from \"../../common/media/MediaBody\";\nimport Octicon, { GistSecret } from \"@primer/octicons-react\";\nimport { MediaContainer } from \"../../common/media/MediaContainer\";\nimport { AboutIcon } from \"./AboutIcon\";\n\ninterface Props {}\n\nexport const HelloSection: FC<Props> = ({}: Props) => {\n  return (\n    <div className=\"card mt-5\">\n      <div className=\"card-body\">\n        <MediaContainer>\n          <MediaBody>\n            <p>\n              <AboutIcon icon={GistSecret} />\n              Hello my name is <strong>Otto</strong> ...\n            </p>\n            <p>\n              ... and I&apos;m a Software Engineer at\n              <a href=\"https://comsystoreply.de/\"> Comsysto Reply </a>\n              nice to meet you!\n              <br />\n              <small>\n                <a href=\"https://comsystoreply.de/karriere\">\n                  (PS: we&apos;re hiring)\n                </a>\n              </small>\n            </p>\n            <p>\n              Let me explain to you why I created yet another map tool :D ...\n              <br />\n              It all begun when I searched for a way to visualise battles in my\n              D&D campaign.\n              <br />\n              The first approach was to use a physical map, which was nearly\n              impossible for the huge maps that are often used in campaign\n              books. The printout would be more than 2 meters in length.\n              <br />\n              The next thing we tried was to use a tablet with a pen. This works\n              quite smoothly because it has a similar usability than the pencil\n              drawn maps of my youth, but it was quite challenging to move the\n              tokens around. Every token has to be erased and drawn again in a\n              other location. So we tried finding a dedicated software that\n              would run on tablets, sadly we don&apos;t found one that has\n              worked with the pen which was a blast to use :D ...\n            </p>\n            <p>\n              In the mean time I was building some dashboard prototypes at work\n              that uses SVG graphics together with React which has quite similar\n              characteristics ...\n              <br />\n              ... so I decided to give it a try, how hard can it be XD\n            </p>\n          </MediaBody>\n          <img\n            className=\"img-thumbnail mr-3\"\n            src=\"https://www.gravatar.com/avatar/6f1aded52d041be71a1f5168c6b7e7dd?s=250\"\n          />\n        </MediaContainer>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FileMedia, Info, Play } from \"@primer/octicons-react\";\n\nexport const labels = Object.freeze({\n  playPage: {\n    controlBar: {\n      drawBackgroundButton:\n        \"Draw something that should be shown on the gridMap like spell effects, environment hazards etc.\",\n      drawNotesButton:\n        \"Open the notes pane where you can write some notes with a pen.\",\n      playButton: \"Enter play mode, so you can move tokens.\",\n      addTokensButton: \"Add a new token to the game board.\",\n      zoomButton: \"Zoom in or out and change orientation of the map.\"\n    }\n  },\n  newSessionPage: {\n    headline: \"Start New Session\",\n    explanation: (\n      <>\n        <strong>Sessions</strong> are the place where all token positions on the\n        map and all drawings are stored.\n        <br />\n        You can switch between sessions on this screen so you can come back to a\n        game later ...\n      </>\n    )\n  },\n  newGridMapPage: {\n    imageUpload: {\n      description: (\n        <>\n          Select a image from your computer, that should be used as map.\n          <br />\n          This file is <em>not</em> uploaded to the internet but stored in your\n          browser.\n        </>\n      )\n    },\n    rect1: {\n      description: (\n        <>\n          For calculating the grid position, draw a rect over the image where 9\n          squares of the battle grid should be displayed later. <br />\n          Try to select an area in the\n          <em>left upper corner</em> of the map.\n        </>\n      )\n    },\n    rect2: {\n      description: (\n        <>\n          Now select a second rect with 9 squares on the\n          <em>right lower corner</em> of the map.\n        </>\n      )\n    },\n    preview: {\n      description: (\n        <>\n          So ... we try to place a grid that will match the grid on the image.\n          <br /> On big maps small errors in the placements of the previous\n          rects will result that there are too many or too few squares between\n          the rects, with the buttons below you can adjust this.\n        </>\n      )\n    },\n    metadata: {\n      description: (\n        <>\n          Nearly done :D ... all you have to do now is specify a name for this\n          map.\n        </>\n      )\n    }\n  },\n  assetPage: {\n    headline: \"Included 3rd Party Assets\"\n  },\n  openSourcePage: {\n    headline: \"Included Open Source Components\"\n  },\n  aboutPage: {\n    headline: \"Let me tell you about Gridheim, Friend ...\",\n    startLink: \"Enough talk just start ...\"\n  },\n  startPage: {\n    headline: \"Welcome to Gridheim with Avatars, Friend!\",\n    sections: {\n      play: {\n        headline: \"Play\",\n        icon: Play\n      },\n      gridMaps: {\n        headline: \"Maps\",\n        icon: FileMedia\n      },\n      info: {\n        headline: \"Info\",\n        icon: Info\n      }\n    },\n    about: {\n      description:\n        \"Here you find some bits of knowledge about this tool and it's maker.\",\n      button: \"About\"\n    },\n    openSource: {\n      description:\n        \"This project were not possible without the opensource ecosystem it is build appon, thanks opensource community :)\",\n      button: \"Open Source\"\n    },\n    assets: {\n      description:\n        \"This project wouldn't look this nice without the use of 'free' assets, that are provided to the community, big thanks to them!\",\n      button: \"3rd Party Assets\"\n    },\n    newGridMap: {\n      description:\n        \"Here you could create a map by specifing a image from your device as background and put a grid on it.\",\n      button: \"Add Map\"\n    },\n    newSession: {\n      description:\n        \"Here you can start a new session on a map. A session will store the position of each token and all drawings.\",\n      button: \"Start New Session\"\n    },\n    play: {\n      description:\n        \"Continue a previous session. Sessions are continuously saved in the background, so you can easily start where you left off.\",\n      button: \"Continue Session\"\n    },\n    showGridMaps: {\n      description:\n        \"Here you can see all created maps and remove those that are no longer needed.\",\n      button: \"Manage Maps\"\n    },\n    showSessions: {\n      description:\n        \"Here you can see all stored sessions and continue them or remove those that are out dated\",\n      button: \"Manage Sessions\"\n    }\n  }\n});\n","export const links = {\n  impressum: \"https://legal.comsysto.com/comsysto.github.io/de/impressum/\",\n  dataProtection:\n    \"https://legal.comsysto.com/comsysto.github.io/en/datenschutz/\",\n  github: \"https://github.com/comsysto/gridheim\",\n  licence: \"https://github.com/comsysto/gridheim/blob/master/LICENSE\"\n};\n","import React, { FC } from \"react\";\nimport { MediaBody } from \"../../common/media/MediaBody\";\nimport Octicon, { GistSecret, Octoface } from \"@primer/octicons-react\";\nimport { MediaContainer } from \"../../common/media/MediaContainer\";\nimport { links } from \"../../data/links\";\nimport { AboutIcon } from \"./AboutIcon\";\n\ninterface Props {}\n\nexport const GithubSecton: FC<Props> = ({}: Props) => {\n  return (\n    <div className=\"card mt-5\">\n      <div className=\"card-body\">\n        <AboutIcon icon={Octoface} />\n        <strong>Gridheim</strong> is open source (\n        <a href={links.licence}>GPLv3</a>) and provided free to use. You can\n        fork it yourself on <a href={links.github}>Github</a>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, { Info, Play } from \"@primer/octicons-react\";\nimport { routing } from \"../App\";\nimport { Link } from \"react-router-dom\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { IntroSection } from \"./AboutPage/IntroSection\";\nimport { HelloSection } from \"./AboutPage/HelloSection\";\nimport { labels } from \"../data/labels\";\nimport { GithubSecton } from \"./AboutPage/GithubSection\";\n\ninterface Props {}\n\nexport const AboutPage: FC<Props> = ({}: Props) => {\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader icon={Info} headline={labels.aboutPage.headline}>\n          <Link to={routing.start}>\n            <Octicon icon={Play} /> {labels.aboutPage.startLink}\n          </Link>\n        </PageHeader>\n      }\n    >\n      <IntroSection />\n      <HelloSection />\n      <GithubSecton />\n    </FullPageWithHeading>\n  );\n};\n","import { TokenType } from \"./TokenType\";\nimport { Immerable } from \"../utils/Immerable\";\nimport { Square } from \"./Square\";\n\n@Immerable()\nexport class Token {\n  constructor(\n    readonly id: string,\n    readonly tokenType: TokenType,\n    readonly label: string,\n    readonly square: Square,\n    readonly size: number = tokenType.size\n  ) {}\n}\n","import { Immerable } from \"../utils/Immerable\";\n\n@Immerable()\nexport class Square {\n  constructor(readonly x: number, readonly y: number) {}\n\n  toCoordinateString(): string {\n    return `${this.x}/${this.y}`;\n  }\n}\n","import { DrawingColor } from \"./DrawingColor\";\nimport { DrawingWidth } from \"./DrawingWidth\";\n\nexport class Drawing {\n  static current(color: DrawingColor, width: DrawingWidth): Drawing {\n    return new Drawing(Drawing.CURRENT_ID, [], color, width);\n  }\n\n  static readonly CURRENT_ID = \"current\";\n\n  readonly current = this.id === Drawing.CURRENT_ID;\n\n  constructor(\n    readonly id: string,\n    readonly path: ReadonlyArray<[number, number]>,\n    readonly color: DrawingColor,\n    readonly width: DrawingWidth\n  ) {}\n\n  get svgPath(): string {\n    return this.path.map(p => `${p[0]},${p[1]}`).join(\" \");\n  }\n\n  withPointAdded(x: number, y: number): Drawing {\n    return new Drawing(this.id, [...this.path, [x, y]], this.color, this.width);\n  }\n\n  withId(id: string): Drawing {\n    return new Drawing(id, this.path, this.color, this.width);\n  }\n}\n","import { Drawing } from \"./Drawing\";\n\nexport class DrawingPane {\n  static fromJson(json: any): DrawingPane {\n    const drawings = json.drawings.map(\n      (drawingJson: any) =>\n        new Drawing(\n          drawingJson.id,\n          drawingJson.path,\n          drawingJson.color,\n          drawingJson.width\n        )\n    );\n    return new DrawingPane(drawings);\n  }\n\n  constructor(readonly drawings: ReadonlyArray<Drawing>) {}\n\n  withDrawingAdded(drawing: Drawing): DrawingPane {\n    return new DrawingPane([...this.drawings, drawing]);\n  }\n\n  withCurrentDrawingRemoved(): DrawingPane {\n    return this.withDrawingRemoved(Drawing.CURRENT_ID);\n  }\n\n  withDrawingRemoved(drawingId: string): DrawingPane {\n    return new DrawingPane(this.drawings.filter(d => d.id !== drawingId));\n  }\n}\n","export function uuid(): string {\n  // Public Domain/MIT\n  // Based on https://stackoverflow.com/a/8809472\n  let d = new Date().getTime();\n  if (\n    typeof performance !== \"undefined\" &&\n    typeof performance.now === \"function\"\n  ) {\n    d += performance.now(); //use high-precision timer if available\n  }\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nexport abstract class AbstractService {\n  private readonly disposeS$ = new Subject<void>();\n  protected readonly dispose$ = this.disposeS$.asObservable();\n\n  dispose(): void {\n    this.disposeS$.next();\n    this.disposeS$.complete();\n  }\n\n  protected untilDisposed<T>(o: Observable<T>): Observable<T> {\n    return o.pipe(takeUntil(this.dispose$));\n  }\n}\n","export const range = (n: number): ReadonlyArray<number> => [...Array(n).keys()];\n","import { ViewBox } from \"../../../model/ViewBox\";\nimport { Token } from \"../../../model/Token\";\nimport { BehaviorSubject, combineLatest, Observable, of } from \"rxjs\";\nimport { Square } from \"../../../model/Square\";\nimport produce, { Draft } from \"immer\";\nimport { TokenType } from \"../../../model/TokenType\";\nimport { uuid } from \"../../../utils/uuid\";\nimport {\n  auditTime,\n  debounceTime,\n  map,\n  shareReplay,\n  throttleTime\n} from \"rxjs/operators\";\nimport { AbstractService } from \"../../../services/AbstractService\";\nimport { SaveSessionService } from \"./SaveSessionService\";\nimport { range } from \"../../../utils/range\";\nimport { windowAspectRatio } from \"../../../utils/windowAspectRatio\";\n\nexport class BattleMapService extends AbstractService {\n  private static readonly EMPTY_READONLY_ARRAY: ReadonlyArray<\n    any\n  > = Object.freeze([]);\n\n  private readonly tokensS$ = new BehaviorSubject<ReadonlyArray<Token>>([]);\n\n  readonly tokens$ = this.tokensS$.asObservable();\n\n  private selectedTokenS$ = new BehaviorSubject<Token | null>(null);\n  readonly selectedToken$ = this.selectedTokenS$.asObservable();\n\n  private readonly selectedSquareS$ = new BehaviorSubject<Square | null>(null);\n  readonly selectedSquare$ = this.selectedSquareS$.asObservable();\n\n  private readonly squareSelectableS$ = new BehaviorSubject<boolean>(false);\n  readonly squareSelectable$ = this.squareSelectableS$.asObservable();\n\n  private readonly tokenSelectableS$ = new BehaviorSubject<boolean>(false);\n  readonly tokenSelectable$ = this.tokenSelectableS$.asObservable();\n\n  private readonly tokenSizeS$ = new BehaviorSubject<number>(1);\n  readonly tokenSize$ = this.tokenSizeS$.asObservable();\n\n  private readonly hoveringSquareS$ = new BehaviorSubject<Square | null>(null);\n  readonly hoveringSquare$ = this.hoveringSquareS$.asObservable();\n\n  public readonly highlightedSquares$: Observable<\n    ReadonlyArray<Square>\n  > = combineLatest([\n    this.squareSelectable$,\n    this.tokenSize$,\n    this.selectedToken$,\n    this.hoveringSquare$\n  ]).pipe(\n    map(([squareSelectable, tokenSize, selectedToken, hoveringSquare]) => {\n      if (!hoveringSquare || !squareSelectable) {\n        return BattleMapService.EMPTY_READONLY_ARRAY;\n      }\n\n      const size = selectedToken ? selectedToken.size : tokenSize;\n      const squares = range(size).map(dx =>\n        range(size).map(\n          dy => new Square(hoveringSquare.x + dx, hoveringSquare.y + dy)\n        )\n      );\n      return Object.freeze(squares.flat());\n    }),\n    debounceTime(50)\n  );\n\n  selectToken(token: Token | null): void {\n    if (this.tokenSelectable) {\n      this.selectedTokenS$.next(token);\n    }\n  }\n\n  get selectedToken(): Token | null {\n    return this.selectedTokenS$.value;\n  }\n\n  selectSquare(square: Square | null): void {\n    this.selectedSquareS$.next(square);\n  }\n\n  updateTokens(\n    transform: (tokens: Draft<Token>[]) => Draft<Token[]> | void\n  ): void {\n    const tokens = produce(this.tokensS$.value, transform);\n    this.tokensS$.next(tokens);\n\n    const oldSelectedToken = this.selectedTokenS$.value;\n    if (oldSelectedToken) {\n      const newToken = this.tokensS$.value.find(\n        token => oldSelectedToken.id === token.id\n      );\n      this.selectedTokenS$.next(newToken || null);\n    }\n  }\n\n  addToken(\n    tokenType: TokenType,\n    tokenLabel: string,\n    tokenSize: number,\n    square: Square\n  ): void {\n    this.updateTokens(tokens => {\n      tokens.push(new Token(uuid(), tokenType, tokenLabel, square, tokenSize));\n    });\n    const tokens = this.tokensS$.value;\n    this.selectToken(tokens[tokens.length - 1]);\n  }\n\n  setSquareSelectable(selectable: boolean): void {\n    this.squareSelectableS$.next(selectable);\n  }\n\n  get squareSelectable(): boolean {\n    return this.squareSelectableS$.value;\n  }\n\n  setTokenSelectable(selectable: boolean): void {\n    this.tokenSelectableS$.next(selectable);\n  }\n\n  get tokenSelectable(): boolean {\n    return this.tokenSelectableS$.value;\n  }\n\n  removeSelectedToken(): void {\n    if (this.selectedToken !== null) {\n      const tokenId = this.selectedToken.id;\n      this.updateTokens(tokens => {\n        return tokens.filter(token => token.id !== tokenId);\n      });\n    }\n  }\n\n  hoverOverSquare(s: Square | null): void {\n    this.hoveringSquareS$.next(s);\n  }\n\n  setTokenSize(tokenSize: number): void {\n    this.tokenSizeS$.next(tokenSize);\n  }\n}\n","export enum DrawingColor {\n  red = \"red\",\n  yellow = \"yellow\",\n  blue = \"blue\",\n  green = \"green\",\n  purple = \"purple\",\n  orange = \"orange\"\n}\n","export enum DrawingWidth {\n  s = \"s\",\n  m = \"m\",\n  l = \"l\"\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { ModeBasedService } from \"../App/PlayPage/services/modebased/ModeBasedService\";\nimport { AbstractService } from \"./AbstractService\";\n\nexport abstract class AbstractModeBasedService extends AbstractService\n  implements ModeBasedService {\n  private readonly activeS$ = new BehaviorSubject(false);\n  readonly active$ = this.activeS$.asObservable();\n\n  activate(onDeactivate$: Observable<void>): void {\n    this.onActivate(onDeactivate$);\n    onDeactivate$.subscribe({\n      next: () => this.activeS$.next(false)\n    });\n    this.activeS$.next(true);\n  }\n\n  abstract onActivate(onDeactivate$: Observable<void>): void;\n\n  get active(): boolean {\n    return this.activeS$.value;\n  }\n}\n","import { BattleMapService } from \"../BattleMapService\";\nimport { combineLatest, Observable } from \"rxjs\";\nimport { distinctUntilChanged, takeUntil } from \"rxjs/operators\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\n\nexport class PlayModeService extends AbstractModeBasedService {\n  constructor(private readonly battleMapService: BattleMapService) {\n    super();\n  }\n\n  onActivate(onDeactivate$: Observable<void>): void {\n    this.battleMapService.setTokenSelectable(true);\n    this.battleMapService.setSquareSelectable(true);\n    this.battleMapService.selectSquare(null);\n    this.battleMapService.selectToken(null);\n\n    combineLatest([\n      this.battleMapService.selectedToken$,\n      this.battleMapService.selectedSquare$\n    ])\n      .pipe(\n        takeUntil(onDeactivate$),\n        distinctUntilChanged(\n          (a1, a2) => a1 === a2,\n          ([a, b]) => `${a}/${b}`\n        )\n      )\n      .subscribe(([selectedToken, selectedSquare]) => {\n        if (selectedToken && !selectedSquare) {\n          this.battleMapService.setSquareSelectable(true);\n        }\n        if (!selectedToken && !selectedSquare) {\n          this.battleMapService.setSquareSelectable(false);\n        }\n        if (selectedToken && selectedSquare) {\n          this.battleMapService.selectSquare(null);\n          this.battleMapService.updateTokens(tokens => {\n            tokens\n              .filter(token => token.id === selectedToken.id)\n              .forEach(token => (token.square = selectedSquare));\n          });\n        }\n      });\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { Drawing } from \"../../../../model/Drawing\";\nimport { DrawingPane } from \"../../../../model/DrawingPane\";\nimport { uuid } from \"../../../../utils/uuid\";\nimport { DrawingColor } from \"../../../../model/DrawingColor\";\nimport { DrawingWidth } from \"../../../../model/DrawingWidth\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\n\nexport type DrawingMode = \"draw\" | \"erase\";\n\nexport class DrawingService extends AbstractModeBasedService {\n  private readonly paneS$ = new BehaviorSubject(new DrawingPane([]));\n  readonly pane$ = this.paneS$.asObservable();\n\n  private readonly drawingColorS$ = new BehaviorSubject<DrawingColor>(\n    DrawingColor.red\n  );\n  readonly drawingColor$ = this.drawingColorS$.asObservable();\n\n  private readonly drawingWidthS$ = new BehaviorSubject<DrawingWidth>(\n    DrawingWidth.m\n  );\n  readonly drawingWidth$ = this.drawingWidthS$.asObservable();\n\n  private readonly drawingModeS$ = new BehaviorSubject<DrawingMode>(\"draw\");\n  readonly drawingMode$ = this.drawingModeS$.asObservable();\n\n  currentlyDrawing(points$: Observable<[number, number]>): void {\n    if (!this.active) {\n      return;\n    }\n    const pane: DrawingPane = this.paneS$.value;\n    let currentDrawing = Drawing.current(this.drawingColor, this.drawingWidth);\n    points$.subscribe({\n      next: point => {\n        currentDrawing = currentDrawing.withPointAdded(...point);\n        const panePreview = pane.withDrawingAdded(currentDrawing);\n        this.paneS$.next(panePreview);\n      },\n      error: () => {\n        // on error reset the pane...\n        this.paneS$.next(pane);\n      },\n      complete: () => {\n        this.paneS$.next(pane.withDrawingAdded(currentDrawing.withId(uuid())));\n      }\n    });\n  }\n\n  removeDrawing(drawingId: string): void {\n    const pane: DrawingPane = this.paneS$.value;\n    this.paneS$.next(pane.withDrawingRemoved(drawingId));\n  }\n\n  switchDrawingColor(drawingColor: DrawingColor): void {\n    this.drawingColorS$.next(drawingColor);\n  }\n\n  get drawingColor(): DrawingColor {\n    return this.drawingColorS$.value;\n  }\n\n  switchDrawingWidth(drawingWidth: DrawingWidth): void {\n    this.drawingWidthS$.next(drawingWidth);\n  }\n\n  switchDrawingMode(drawingMode: DrawingMode): void {\n    this.drawingModeS$.next(drawingMode);\n  }\n\n  get drawingMode(): DrawingMode {\n    return this.drawingModeS$.value;\n  }\n\n  get drawingWidth(): DrawingWidth {\n    return this.drawingWidthS$.value;\n  }\n\n  setPane(pane: DrawingPane): void {\n    this.paneS$.next(pane);\n  }\n\n  onActivate(): void {}\n}\n","import { Immerable } from \"../utils/Immerable\";\n\n@Immerable()\nexport class TokenType {\n  constructor(\n    readonly size: number,\n    readonly color: string,\n    readonly border: string,\n    readonly name: string\n  ) {}\n}\n","import { TokenType } from \"../../../model/TokenType\";\nimport { AbstractService } from \"../../../services/AbstractService\";\n\nexport class AssetService extends AbstractService {\n  readonly defaultStrokeColor = \"#555555\";\n  readonly tokenTypes = [\n    new TokenType(1, \"#ff28fb\", \"#ffaaf3\", \"Mora\"),\n    new TokenType(1, \"#ff8902\", \"#ffd069\", \"Elsa\"),\n\n    new TokenType(1, \"#78cc85\", this.defaultStrokeColor, \"LightGreen\"),\n    new TokenType(1, \"#077919\", this.defaultStrokeColor, \"Green\"),\n    new TokenType(1, \"#98c6ff\", this.defaultStrokeColor, \"LightBlue\"),\n    new TokenType(1, \"#0282ff\", this.defaultStrokeColor, \"Blue\"),\n    new TokenType(1, \"#9f6a00\", this.defaultStrokeColor, \"LightBrown\"),\n    new TokenType(1, \"#513200\", this.defaultStrokeColor, \"Brown\"),\n    new TokenType(1, \"#ff5354\", this.defaultStrokeColor, \"LightRed\"),\n    new TokenType(1, \"#c70200\", this.defaultStrokeColor, \"Red\"),\n    new TokenType(1, \"#ffff8e\", this.defaultStrokeColor, \"LightYellow\"),\n    new TokenType(1, \"#ffef00\", this.defaultStrokeColor, \"Yellow\"),\n    new TokenType(1, \"#d67eff\", this.defaultStrokeColor, \"LightPurple\"),\n    new TokenType(1, \"#9f00d3\", this.defaultStrokeColor, \"Purple\"),\n    new TokenType(1, \"#f4e4ee\", this.defaultStrokeColor, \"LightGrey\"),\n    new TokenType(1, \"#645e5d\", this.defaultStrokeColor, \"DarkGrey\")\n  ];\n\n  tokenTypeForName(name: string): TokenType | null {\n    return this.tokenTypes.find(type => type.name === name) || null;\n  }\n\n  readonly tokenLabels = [\n    \" \",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"Boss\",\n    \"L1\",\n    \"L2\",\n    \"L3\",\n    \"M1\",\n    \"M2\",\n    \"M3\",\n    \"P1\",\n    \"P2\",\n    \"P3\"\n  ];\n}\n","export function is<T, R extends T>(...isEqualToOneOf: R[]): (v: T) => boolean {\n  return value => isEqualToOneOf.some(i => i === value);\n}\n","import { Observable, Subject } from \"rxjs\";\n\nexport interface ModeBasedService {\n  activate(onDeactivate: Observable<void>): void;\n}\n\nexport class ModeBasedService {\n  static controlServices<T extends string>(\n    mode$: Observable<T>,\n    services: { [K in T]: ModeBasedService | null }\n  ): void {\n    let disposeSubject: Subject<void> | null = null;\n    const disposeLastState = (): void => {\n      if (disposeSubject) {\n        disposeSubject.next();\n        disposeSubject.complete();\n        disposeSubject = null;\n      }\n    };\n    mode$.subscribe({\n      next: mode => {\n        disposeLastState();\n        if (mode) {\n          const service = services[mode];\n          if (service) {\n            disposeSubject = new Subject<void>();\n            service.activate(disposeSubject);\n          }\n        }\n      },\n      complete: () => {\n        console.log(\"mode based complete\");\n        disposeLastState();\n      },\n      error: () => {\n        disposeLastState();\n      }\n    });\n  }\n}\n","import { BattleMapService } from \"../BattleMapService\";\nimport { BehaviorSubject, combineLatest, Observable } from \"rxjs\";\nimport { map, takeUntil, tap } from \"rxjs/operators\";\nimport { TokenType } from \"../../../../model/TokenType\";\nimport { AssetService } from \"../AssetService\";\nimport { is } from \"../../../../utils/is\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\nimport { ModeBasedService } from \"./ModeBasedService\";\n\nexport type Mode =\n  | \"switch-token-type\"\n  | \"add-token\"\n  | \"remove-token\"\n  | \"inactive\";\n\nexport class ManageTokenService extends AbstractModeBasedService {\n  readonly mode$S = new BehaviorSubject<Mode>(\"add-token\");\n  readonly mode$ = this.mode$S\n    .asObservable()\n    .pipe(tap(m => console.log(\"manageTokenMode\", m)));\n\n  private readonly modeCallbacks: { [T in Mode]: ModeBasedService | null } = {\n    \"switch-token-type\": {\n      activate: () => {\n        this.battleMapService.setTokenSelectable(false);\n        this.battleMapService.setSquareSelectable(false);\n        this.battleMapService.selectSquare(null);\n        this.battleMapService.selectToken(null);\n      }\n    },\n\n    \"add-token\": {\n      activate: deactivate$ => {\n        this.battleMapService.setTokenSelectable(false);\n        this.battleMapService.setSquareSelectable(true);\n        this.battleMapService.selectSquare(null);\n        this.battleMapService.selectToken(null);\n        this.battleMapService.setTokenSize(this.tokenSizeS$.value);\n        combineLatest([\n          this.tokenType$,\n          this.tokenLabel$,\n          this.tokenSize$,\n          this.battleMapService.selectedSquare$\n        ])\n          .pipe(takeUntil(deactivate$))\n          .subscribe(([tokenType, tokenLabel, tokenSize, selectedSquare]) => {\n            if (selectedSquare && tokenType && tokenLabel && tokenSize) {\n              this.battleMapService.selectSquare(null);\n              this.battleMapService.addToken(\n                tokenType,\n                tokenLabel,\n                tokenSize,\n                selectedSquare\n              );\n            }\n          });\n\n        deactivate$.subscribe({\n          next: () => {\n            this.battleMapService.setTokenSize(1);\n          }\n        });\n      }\n    },\n\n    \"remove-token\": {\n      activate: deactivate$ => {\n        this.battleMapService.setTokenSelectable(true);\n        this.battleMapService.setSquareSelectable(false);\n        this.battleMapService.selectSquare(null);\n        this.battleMapService.selectToken(null);\n        combineLatest([\n          this.tokenType$,\n          this.tokenLabel$,\n          this.battleMapService.selectedToken$\n        ])\n          .pipe(takeUntil(deactivate$))\n          .subscribe(([tokenType, tokenLabel, selectedToken]) => {\n            if (selectedToken && tokenType && tokenLabel) {\n              this.battleMapService.removeSelectedToken();\n            }\n          });\n      }\n    },\n\n    inactive: null\n  };\n\n  readonly isSwitchTokenType$ = this.mode$.pipe(map(is(\"switch-token-type\")));\n\n  private readonly tokenTypeS$ = new BehaviorSubject<TokenType>(\n    this.assetService.tokenTypes[0]\n  );\n  readonly tokenType$ = this.tokenTypeS$.asObservable();\n\n  private readonly tokenLabelS$ = new BehaviorSubject<string>(\n    this.assetService.tokenLabels[0]\n  );\n  readonly tokenLabel$ = this.tokenLabelS$.asObservable();\n\n  private readonly tokenSizeS$ = new BehaviorSubject<number>(1);\n  readonly tokenSize$ = this.tokenSizeS$.asObservable();\n\n  constructor(\n    private readonly battleMapService: BattleMapService,\n    private readonly assetService: AssetService\n  ) {\n    super();\n  }\n\n  onActivate(deactivate$: Observable<void>): void {\n    ModeBasedService.controlServices(\n      this.mode$.pipe(takeUntil(deactivate$)),\n      this.modeCallbacks\n    );\n\n    deactivate$.subscribe({\n      next: () => {\n        this.mode$S.next(\"inactive\");\n      }\n    });\n\n    this.mode$S.next(\"add-token\");\n  }\n\n  setTokenType(tokenType: TokenType): void {\n    this.tokenTypeS$.next(tokenType);\n  }\n\n  get tokenType(): TokenType | null {\n    return this.tokenTypeS$.value;\n  }\n\n  get tokenLabel(): string | null {\n    return this.tokenLabelS$.value;\n  }\n\n  setTokenLabel(label: string): void {\n    this.tokenLabelS$.next(label);\n  }\n\n  get tokenSize(): number {\n    return this.tokenSizeS$.value;\n  }\n\n  setTokenSize(size: number): void {\n    this.tokenSizeS$.next(size);\n  }\n\n  switchMode(mode: Mode): void {\n    this.mode$S.next(mode);\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\nimport { ModeBasedService } from \"./modebased/ModeBasedService\";\nimport { AbstractService } from \"../../../services/AbstractService\";\nimport { is } from \"../../../utils/is\";\nimport { map } from \"rxjs/operators\";\n\nexport type Mode =\n  | \"play\"\n  | \"draw-background\"\n  | \"draw-notes\"\n  | \"manage-token\"\n  | \"zoom\";\n\nexport class ModeService extends AbstractService {\n  private readonly modeS$ = new BehaviorSubject<Mode>(this.initalMode);\n  readonly mode$ = this.modeS$.asObservable();\n\n  constructor(\n    private readonly initalMode: Mode,\n    modeBasedServices: { [T in Mode]: ModeBasedService | null }\n  ) {\n    super();\n    ModeBasedService.controlServices(\n      this.untilDisposed(this.mode$),\n      modeBasedServices\n    );\n  }\n\n  switchMode(mode: Mode): void {\n    this.modeS$.next(mode);\n  }\n\n  get mode(): Mode {\n    return this.modeS$.value;\n  }\n\n  oneOf(...modes: Mode[]): Observable<boolean> {\n    return this.mode$.pipe(map(is(...modes)));\n  }\n}\n","import { BehaviorSubject, Observable, of, Subject, throwError } from \"rxjs\";\nimport { auditTime, catchError, flatMap, map } from \"rxjs/operators\";\nimport { Session } from \"../../../model/Session\";\nimport { ImageGridMap } from \"../../../model/ImageGridMap\";\nimport { SessionRepository } from \"../../../services/SessionRepository\";\nimport { AbstractService } from \"../../../services/AbstractService\";\nimport { GridMapService } from \"../../../services/GridMapService\";\nimport { GridMap } from \"../../../model/GridMap\";\n\nexport class SaveSessionService extends AbstractService {\n  private onLoad: { [name: string]: Subject<any> } = {};\n  private toStore: { [name: string]: Observable<any> } = {};\n  private readonly sessionS$ = new BehaviorSubject<Session | null>(null);\n  readonly session$ = this.untilDisposed(this.sessionS$.asObservable());\n  private readonly gridMapS$ = new BehaviorSubject<GridMap | null>(null);\n  readonly gridMap$ = this.untilDisposed(this.gridMapS$.asObservable());\n\n  constructor(\n    private readonly gridMapService: GridMapService,\n    private readonly sessionRepository: SessionRepository\n  ) {\n    super();\n    this.session$.pipe(auditTime(10000)).subscribe({\n      next: () => {\n        console.log(\"saving session\", this.session);\n        this.saveSession();\n      }\n    });\n  }\n\n  saveSession(): void {\n    this.session && this.sessionRepository.store(this.session);\n  }\n\n  add<T>(name: string, valuesToStore: Observable<T>): Observable<T> {\n    const onLoadSubject = new Subject<T>();\n    this.onLoad = { ...this.onLoad, [name]: onLoadSubject };\n    this.toStore = { ...this.toStore, [name]: valuesToStore };\n    return onLoadSubject.asObservable();\n  }\n\n  loadAndStart(): Observable<boolean> {\n    return this.sessionRepository.findCurrentSessionName().pipe(\n      flatMap(sessionName =>\n        sessionName\n          ? of(sessionName!)\n          : throwError(\"No current session name found in local storage\")\n      ),\n      flatMap(sessionName => this.sessionRepository.findBy(sessionName)),\n      flatMap(session =>\n        session ? of(session) : throwError(\"Failed Loading Session\")\n      ),\n      flatMap(session =>\n        this.gridMapService\n          .getGridMapByName(session.gridMapName)\n          .pipe(map(gridMap => [session, gridMap] as const))\n      ),\n      flatMap(([session, gridMap]) =>\n        gridMap\n          ? of([session, gridMap] as const)\n          : throwError(\"Session with no gridMapName\")\n      ),\n      map(([loadedSession, gridMap]) => {\n        Object.keys(this.onLoad).forEach(name => {\n          const loadedData = loadedSession.content[name];\n          if (loadedData) {\n            const subject = this.onLoad[name];\n            subject.next(loadedData);\n            subject.complete();\n          }\n        });\n\n        Object.keys(this.toStore).forEach(name => {\n          const observable = this.toStore[name];\n          this.untilDisposed(observable).subscribe(data => {\n            if (this.session) {\n              this.sessionS$.next(\n                this.session.with({\n                  date: new Date().toLocaleString(),\n                  content: { ...this.session.content, [name]: data }\n                })\n              );\n            }\n          });\n        });\n\n        this.sessionS$.next(loadedSession);\n        this.gridMapS$.next(gridMap);\n        return true;\n      }),\n      catchError(error => {\n        console.log(`Failed loading session: ${error}`);\n        return of(false);\n      })\n    );\n  }\n\n  get session(): Session | null {\n    return this.sessionS$.value;\n  }\n}\n","import React, { FC } from \"react\";\nimport { ImageGridMap } from \"../../../../model/ImageGridMap\";\n\ninterface Props {\n  gridMap: ImageGridMap;\n}\n\nexport const DisplayBackgroundImage: FC<Props> = ({ gridMap }: Props) => {\n  return (\n    <g {...gridMap.transform.scaleTranslateAttribute}>\n      <image\n        width={gridMap.image.width}\n        height={gridMap.image.height}\n        xlinkHref={gridMap.image.url}\n      />\n    </g>\n  );\n};\n","import { Observable } from \"rxjs\";\nimport { useEffect, useState } from \"react\";\n\nexport function useObservable<T>(\n  observable$:\n    | (() => Observable<T> | undefined | null)\n    | Observable<T>\n    | undefined\n    | null,\n  defaultValue: T,\n  dependencies: any[] = [observable$]\n): T {\n  const [observableState, setObservableState] = useState<T>(defaultValue);\n\n  useEffect((): (() => void) | undefined => {\n    if (!observable$) {\n      return;\n    }\n    let toSubscribe: Observable<T> | undefined | null;\n    if (typeof observable$ === \"function\") {\n      toSubscribe = observable$();\n    } else {\n      toSubscribe = observable$;\n    }\n\n    if (toSubscribe) {\n      const subscription = toSubscribe.subscribe(value => {\n        setObservableState(value);\n      });\n      return (): void => subscription.unsubscribe();\n    }\n  }, dependencies);\n\n  return observableState;\n}\n","export type ClassesMap = { [className: string]: boolean };\nexport const classesMap = (classNameMap: ClassesMap): string => {\n  const selectedClassNames = Object.keys(classNameMap).filter(\n    className => classNameMap[className]\n  );\n\n  return selectedClassNames.join(\" \");\n};\n","import React, { FC } from \"react\";\nimport { TokenType } from \"../model/TokenType\";\nimport { Square } from \"../model/Square\";\nimport { classesMap, ClassesMap } from \"../utils/classesMap\";\n\ninterface Props {\n  tokenType: TokenType;\n  tokenLabel: string;\n  tokenSize: number;\n  tokenClasses?: ClassesMap;\n  square?: Square;\n  onClick?: () => void;\n}\n\nexport const DisplayToken: FC<Props> = ({\n  tokenClasses,\n  tokenType,\n  tokenSize,\n  tokenLabel,\n  square,\n  onClick\n}: Props) => {\n  square = square || new Square(0, 0);\n  return (\n    <g\n      onClick={e => {\n        if (onClick) {\n          e.preventDefault();\n          e.stopPropagation();\n          console.log(\"here\");\n          onClick();\n        }\n      }}\n    >\n      <circle\n        className={`token ${tokenClasses ? classesMap(tokenClasses) : \"\"}`}\n        fill={tokenType.color}\n        stroke={tokenType.border}\n        r={tokenSize / 2}\n        cx={square.x + tokenSize / 2}\n        cy={square.y + tokenSize / 2}\n      />\n      {tokenLabel && (\n        <text\n          className=\"token-text\"\n          x={square.x + tokenSize / 2}\n          y={square.y + 0.2 + tokenSize / 2}\n        >\n          {tokenLabel}\n        </text>\n      )}\n    </g>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Token } from \"../../../../model/Token\";\nimport { Observable } from \"rxjs\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\n\ninterface Props {\n  tokens: ReadonlyArray<Token>;\n  onClick: (token: Token | null) => void;\n  selectedToken$: Observable<Token | null>;\n}\n\nexport const DisplayTokens: FC<Props> = ({\n  tokens,\n  onClick,\n  selectedToken$\n}: Props) => {\n  const selectedToken = useObservable(selectedToken$, null);\n\n  const renderToken = (token: Token): ReactNode => {\n    return (\n      <g key={token.id}>\n        <DisplayToken\n          tokenType={token.tokenType}\n          tokenLabel={token.label}\n          tokenSize={token.size}\n          square={token.square}\n          onClick={() => onClick(token)}\n        />\n      </g>\n    );\n  };\n\n  return (\n    <g>\n      {tokens.map(renderToken)}\n      {selectedToken && (\n        <DisplayToken\n          tokenType={selectedToken.tokenType}\n          tokenLabel={selectedToken.label}\n          tokenSize={selectedToken.size}\n          square={selectedToken.square}\n          onClick={() => onClick(null)}\n          tokenClasses={{ \"selected-token\": true }}\n        />\n      )}\n    </g>\n  );\n};\n","import { Vector } from \"./Vector\";\n\nexport const toSvgPoint = (\n  clientVector: Vector,\n  element: SVGGraphicsElement\n): SVGPoint => {\n  const svgPoint = element.ownerSVGElement!.createSVGPoint();\n  svgPoint.x = clientVector.x;\n  svgPoint.y = clientVector.y;\n  const pointInSvg = svgPoint.matrixTransform(\n    element.getScreenCTM()!.inverse()\n  );\n  return pointInSvg;\n};\n","import { Vector } from \"./Vector\";\nimport { toSvgPoint } from \"./toSvgPoint\";\n\nexport function toVectorInSvg(\n  clientVector: Vector,\n  target: SVGGraphicsElement\n): Vector {\n  const element = target!;\n  const svgPoint = toSvgPoint(clientVector, element);\n  return Vector.fromCoords(svgPoint);\n}\n","import { Vector } from \"./Vector\";\nimport { toVectorInSvg } from \"./toVectorInSvg\";\n\nexport type MouseEventOnSvg = {\n  currentTarget: SVGGraphicsElement;\n  clientX: number;\n  clientY: number;\n};\n\nexport function pointInSvgFromEvent(\n  e: MouseEventOnSvg,\n  target: SVGGraphicsElement = e.currentTarget\n): Vector {\n  return toVectorInSvg(Vector.fromClientCoords(e), target!);\n}\n","import React, { FC, PointerEvent, useState } from \"react\";\nimport { DrawingService } from \"../../services/modebased/DrawingService\";\nimport { Subject } from \"rxjs\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { pointInSvgFromEvent } from \"../../../../utils/pointInSvgFromEvent\";\n\ninterface Props {\n  drawingService: DrawingService;\n}\n\nexport const DrawingCapturePane: FC<Props> = ({ drawingService }: Props) => {\n  const [pointSubject, setPointSubject] = useState<Subject<\n    [number, number]\n  > | null>(null);\n  const active = useObservable(drawingService.active$, false);\n  const drawingMode = useObservable(drawingService.drawingMode$, \"draw\");\n\n  const completeDrawing = (e: PointerEvent<SVGRectElement>): void => {\n    if (!pointSubject) {\n      return;\n    }\n\n    pointSubject.complete();\n    setPointSubject(null);\n  };\n\n  const onMouseMove = (e: PointerEvent<SVGRectElement>): void => {\n    if (!pointSubject) {\n      return;\n    }\n    const pointInSvg = pointInSvgFromEvent(e);\n    pointSubject.next([pointInSvg.x, pointInSvg.y]);\n  };\n\n  const onMouseDown = (e: PointerEvent<SVGRectElement>): void => {\n    if (!drawingService.active) {\n      return;\n    }\n\n    const subject = new Subject<[number, number]>();\n    setPointSubject(subject);\n    drawingService.currentlyDrawing(subject);\n  };\n\n  const onMouseUp = (e: PointerEvent<SVGRectElement>): void => {\n    completeDrawing(e);\n  };\n\n  return (\n    <>\n      {drawingMode === \"draw\" && active && (\n        <rect\n          x={-500}\n          y={-500}\n          width={1000}\n          height={1000}\n          className=\"drawing-capture-pane\"\n          onPointerDown={onMouseDown}\n          onPointerUp={onMouseUp}\n          onPointerCancel={e => console.log(\"canceled\", { ...e })}\n          onPointerMove={onMouseMove}\n        />\n      )}\n    </>\n  );\n};\n","import React, { FC, PointerEvent, useRef, useState } from \"react\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { DrawingService } from \"../../services/modebased/DrawingService\";\nimport { Vector } from \"../../../../utils/Vector\";\nimport { toSvgPoint } from \"../../../../utils/toSvgPoint\";\n\ninterface Props {\n  drawingService: DrawingService;\n  name: string;\n}\n\nconst ID_PREFIX = \"drawing-\";\nconst ID_PREFIX_LENGTH = ID_PREFIX.length;\n\nexport const DisplayDrawingPane: FC<Props> = ({\n  drawingService,\n  name\n}: Props) => {\n  const drawingPane = useObservable(drawingService.pane$, null);\n  const drawingMode = useObservable(drawingService.drawingMode$, \"draw\");\n  const drawingsGroupRef = useRef<SVGGElement | null>(null);\n  const [rect, setRect] = useState<SVGRect | null>(null);\n\n  const onPointerMove = (e: PointerEvent<SVGGraphicsElement>): void => {\n    if (\n      drawingService.drawingMode === \"erase\" &&\n      e.buttons === 1 &&\n      drawingsGroupRef.current\n    ) {\n      const groupElement = drawingsGroupRef.current;\n      const svgPoint = toSvgPoint(Vector.fromClientCoords(e), groupElement);\n\n      groupElement.childNodes.forEach(n => {\n        if (n instanceof SVGPolylineElement) {\n          if (n.isPointInStroke(svgPoint) || n.isPointInFill(svgPoint)) {\n            const drawingId = n.id.substring(ID_PREFIX_LENGTH);\n            drawingService.removeDrawing(drawingId);\n          }\n        }\n      });\n    }\n  };\n\n  return (\n    drawingPane && (\n      <>\n        {\n          <g\n            id={name}\n            className={`drawing-pane ${name} ${drawingMode} `}\n            // The event handler must be placed on the <g> otherwise, no events are emitted when touching a polyline\n            onPointerMove={onPointerMove}\n          >\n            <rect\n              x={-500}\n              y={-500}\n              width={1000}\n              height={1000}\n              className={`drawing-pane-background ${name}`}\n            />\n            <g ref={drawingsGroupRef}>\n              {drawingPane.drawings.map(drawing => (\n                <polyline\n                  id={`${ID_PREFIX}${drawing.id}`}\n                  key={drawing.id}\n                  className={classesMap({\n                    drawing: true,\n                    current: drawing.id === \"current\",\n                    [`drawing-${drawing.color}`]: true,\n                    [`drawing-${drawing.width}`]: true\n                  })}\n                  points={drawing.svgPath}\n                />\n              ))}\n            </g>\n            {rect && (\n              <rect\n                x={rect.x}\n                y={rect.y}\n                width={rect.width}\n                height={rect.height}\n                fill=\"blue\"\n              />\n            )}\n          </g>\n        }\n      </>\n    )\n  );\n};\n","import { PointerEvent as ReactPointerEvent, useRef, useState } from \"react\";\nimport { pointInSvgFromEvent } from \"./pointInSvgFromEvent\";\nimport { Vector } from \"./Vector\";\n\nconst CLICK_TIMEOUT_MILLIS = 300;\n\nexport interface DraggingEvent {\n  current: Vector;\n  last: Vector;\n  delta: Vector;\n}\n\nexport interface SvgDraggingConfig {\n  onStart?: (startPoint: Vector) => void;\n  onMove: (e: DraggingEvent) => void;\n  onEnd?: () => void;\n  onCancel?: () => void;\n}\n\nexport interface SvgDrag {\n  dragging: boolean;\n  eventHandler: {\n    onPointerDown: (e: ReactPointerEvent<SVGGraphicsElement>) => void;\n  };\n}\n\nexport const useDragSvg = (config: SvgDraggingConfig): SvgDrag => {\n  const draggingRef = useRef(false);\n  const [returnedDragging, setReturnedDragging] = useState(false);\n  const lastPoint = useRef<Vector | null>(null);\n  const configRef = useRef(config);\n  configRef.current = config;\n\n  const setDragging = (dragging: boolean): void => {\n    draggingRef.current = dragging;\n    setReturnedDragging(dragging);\n  };\n\n  const onPointerDown = (e: ReactPointerEvent<SVGGraphicsElement>): void => {\n    const svgTarget = e.currentTarget;\n    const point = pointInSvgFromEvent(e);\n    const startTime = Date.now();\n    if (!draggingRef.current) {\n      setDragging(true);\n      lastPoint.current = point;\n      if (configRef.current.onStart) {\n        configRef.current.onStart(point);\n      }\n\n      const onPointerMove = (e: PointerEvent): void => {\n        const point = pointInSvgFromEvent({\n          clientX: e.clientX,\n          clientY: e.clientY,\n          currentTarget: svgTarget\n        });\n        configRef.current.onMove({\n          current: point,\n          last: lastPoint.current!,\n          delta: point.subtract(lastPoint.current!)\n        });\n        lastPoint.current = point;\n      };\n\n      const onPointerUp = (e: PointerEvent): void => {\n        if (Date.now() - startTime > CLICK_TIMEOUT_MILLIS) {\n          if (configRef.current.onEnd) {\n            configRef.current.onEnd();\n          }\n\n          setDragging(false);\n          lastPoint.current = null;\n          document.removeEventListener(\"pointermove\", onPointerMove);\n          document.removeEventListener(\"pointerup\", onPointerUp);\n        }\n      };\n\n      document.addEventListener(\"pointermove\", onPointerMove);\n      document.addEventListener(\"pointerup\", onPointerUp);\n    }\n  };\n\n  return {\n    dragging: returnedDragging,\n    eventHandler: {\n      onPointerDown\n    }\n  };\n};\n","import { MutableRefObject, TouchEvent as RTouchEvent, useRef } from \"react\";\nimport { useStateRef } from \"./useStateRef\";\nimport { Vector } from \"./Vector\";\nimport { toVectorInSvg } from \"./toVectorInSvg\";\n\nexport interface TouchResult {\n  eventHandlers: {\n    onTouchStart: (e: RTouchEvent<any>) => void;\n  };\n}\n\nexport interface MultiTouchEvent {\n  last: State;\n  current: State;\n  delta: State;\n}\n\nexport interface Config {\n  onStart?: () => void;\n\n  onMove: (e: MultiTouchEvent) => void;\n\n  onEnd?: () => void;\n  svgTargetRef: MutableRefObject<SVGGraphicsElement | null>;\n}\n\ninterface State {\n  touchCount: number;\n  position: Vector;\n  distance: number | null;\n}\n\nconst position = (touchPoints: Vector[]): Vector => {\n  if (touchPoints.length === 1) {\n    return touchPoints[0];\n  }\n  return touchPoints[0].add(touchPoints[1].subtract(touchPoints[0]).scale(0.5));\n};\n\nconst distance = (touchPoints: Vector[]): number | null => {\n  if (touchPoints.length === 1) {\n    return null;\n  }\n  return touchPoints[1].subtract(touchPoints[0]).length;\n};\n\nconst stateFromTouches = (\n  e: TouchEvent,\n  targetSvg: SVGGraphicsElement\n): State => {\n  const touchPoints = [...e.touches].map(t =>\n    toVectorInSvg(Vector.fromClientCoords(t), targetSvg)\n  );\n  return {\n    distance: distance(touchPoints),\n    position: position(touchPoints),\n    touchCount: touchPoints.length\n  };\n};\n\nconst eventFromStates = (lastState: State, state: State): MultiTouchEvent => {\n  return {\n    last:\n      // only provide the real last state if the touch count hasn't changed\n      // otherwise the position jumps\n      !!lastState.touchCount !== !!state.touchCount ? state : lastState,\n    current: state,\n    delta: {\n      position:\n        state.position &&\n        lastState.position &&\n        state.position.subtract(lastState.position),\n      distance:\n        state.distance &&\n        lastState.distance &&\n        state.distance - lastState.distance,\n      touchCount: state.touchCount - lastState.touchCount\n    }\n  };\n};\n\nexport const useTouch = (config: Config): TouchResult => {\n  const lastStateRef = useRef<State>({\n    position: Vector.zero,\n    distance: null,\n    touchCount: 0\n  });\n  const configRef = useRef<Config>(config);\n  configRef.current = config;\n\n  const [getStart, setStart] = useStateRef(false);\n\n  const onTouchStart = (e: RTouchEvent<any>): void => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (getStart()) {\n      return;\n    }\n\n    const onMove = (e: TouchEvent): void => {\n      if (!getStart()) {\n        return;\n      }\n\n      console.log(\n        \"touches: \" + e.touches.length\n        // [...e.touches].map(t => `${t.clientX}/${t.clientY} `).join()\n      );\n\n      const state = stateFromTouches(\n        e,\n        configRef.current.svgTargetRef.current!\n      );\n      const multiTouchEvent = eventFromStates(lastStateRef.current, state);\n\n      configRef.current.onMove(multiTouchEvent);\n      lastStateRef.current = state;\n    };\n\n    const onEnd = (e: TouchEvent): void => {\n      if (!getStart()) {\n        return;\n      }\n      setStart(false);\n      document.removeEventListener(\"touchmove\", onMove);\n      document.removeEventListener(\"touchend\", onEnd);\n      configRef.current.onEnd && configRef.current.onEnd();\n    };\n\n    setStart(true);\n    lastStateRef.current = stateFromTouches(\n      e.nativeEvent,\n      configRef.current.svgTargetRef.current!\n    );\n    document.addEventListener(\"touchmove\", onMove);\n    document.addEventListener(\"touchend\", onEnd);\n    configRef.current.onStart && configRef.current.onStart();\n  };\n\n  return {\n    eventHandlers: {\n      onTouchStart\n    }\n  };\n};\n","import { useRef, useState } from \"react\";\n\nexport const useStateRef = <T>(initial: T): [() => T, (v: T) => void, T] => {\n  const ref = useRef<T>(initial);\n  const [state, setState] = useState(ref.current);\n  const set = (v: T): void => {\n    ref.current = v;\n    setState(v);\n  };\n  const get = (): T => {\n    return ref.current;\n  };\n  return [get, set, state];\n};\n","import { Vector } from \"./Vector\";\n\nexport class Transform {\n  static readonly identity = new Transform(Vector.zero, 1);\n  constructor(readonly translate: Vector, readonly scale: number) {\n    Object.freeze(this);\n  }\n\n  withTranslate(translation: Vector): Transform {\n    return new Transform(translation, this.scale);\n  }\n\n  withScale(scale: number): Transform {\n    return new Transform(this.translate, scale);\n  }\n\n  get translateScaleString(): string {\n    return `${this.translateString} ${this.scaleString}`;\n  }\n\n  get scaleTranslateString(): string {\n    return `${this.scaleString} ${this.translateString}`;\n  }\n\n  get translateString(): string {\n    return `translate(${this.translate.x} ${this.translate.y})`;\n  }\n\n  get scaleString(): string {\n    return `scale(${this.scale} ${this.scale})`;\n  }\n\n  get translateScaleAttribute(): { transform: string } {\n    return { transform: this.translateScaleString };\n  }\n\n  get scaleTranslateAttribute(): { transform: string } {\n    return { transform: this.scaleTranslateString };\n  }\n\n  get components(): [number, number, number] {\n    return [this.scale, this.translate.x, this.translate.y];\n  }\n}\n","import React, { FC, ReactNode, useEffect, useRef } from \"react\";\nimport { pointInSvgFromEvent } from \"../../../../utils/pointInSvgFromEvent\";\nimport { useDragSvg } from \"../../../../utils/useDragSvg\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { Vector } from \"../../../../utils/Vector\";\nimport { useTouch } from \"../../../../utils/useTouch\";\nimport { ViewportService } from \"../../services/ViewportService\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { Transform } from \"../../../../utils/Transform\";\n\ninterface Props {\n  viewportService: ViewportService;\n  children: ReactNode;\n}\n\nexport const Viewport: FC<Props> = ({ viewportService, children }: Props) => {\n  const groupRef = useRef<SVGGraphicsElement | null>(null);\n  const outerGroupRef = useRef<SVGGraphicsElement | null>(null);\n  const transform = useObservable(\n    viewportService.transform$,\n    Transform.identity\n  );\n  const draggingEnabled = useObservable(\n    viewportService.mouseDragEnabled$,\n    false\n  );\n  const touchEnabled = useObservable(viewportService.touchEnabled$, false);\n\n  useEffect(() => {\n    const onWheel = (e: WheelEvent): void => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const mousePosition = pointInSvgFromEvent(e as any, groupRef.current!);\n\n      viewportService.updateTransform(t => {\n        if (e.ctrlKey) {\n          const newScale = t.scale - t.scale * e.deltaY * 0.01;\n          return t\n            .withTranslate(\n              t.translate\n                .subtract(mousePosition.scale(newScale))\n                .add(mousePosition.scale(t.scale))\n            )\n            .withScale(newScale);\n        } else {\n          const delta = Vector.fromDeltaCoords(e);\n          return t.withTranslate(t.translate.subtract(delta.scale(0.01)));\n        }\n      });\n    };\n\n    document.addEventListener(\"wheel\", onWheel, { passive: false });\n\n    return () => {\n      document.removeEventListener(\"wheel\", onWheel);\n    };\n  }, []);\n\n  const drag = useDragSvg({\n    onMove: e => {\n      viewportService.updateTransform(t =>\n        t.withTranslate(t.translate.add(e.delta))\n      );\n    }\n  });\n\n  const multiTouch = useTouch({\n    onMove: e => {\n      viewportService.updateTransform(t => {\n        const scaleFactor =\n          e.current.distance && e.last.distance\n            ? e.current.distance / e.last.distance\n            : 1;\n\n        const oldPointOnMap = e.current.position\n          .subtract(t.translate)\n          .scale(1 / t.scale);\n\n        const newPointOnMap = e.current.position\n          .subtract(t.translate)\n          .scale(1 / (t.scale * scaleFactor));\n\n        return t\n          .withScale(t.scale * scaleFactor)\n          .withTranslate(\n            t.translate\n              .add(\n                newPointOnMap\n                  .subtract(oldPointOnMap)\n                  .scale(t.scale * scaleFactor)\n              )\n              .add(e.current.position.subtract(e.last.position))\n          );\n      });\n    },\n    svgTargetRef: outerGroupRef\n  });\n\n  return (\n    <>\n      <g\n        {...(draggingEnabled ? drag.eventHandler : {})}\n        {...(touchEnabled ? multiTouch.eventHandlers : {})}\n        className={classesMap({\n          viewport: draggingEnabled,\n          viewport_dragging: drag.dragging\n        })}\n        ref={outerGroupRef}\n      >\n        <g {...transform.translateScaleAttribute}>\n          <g ref={groupRef}>{children}</g>\n        </g>\n      </g>\n    </>\n  );\n};\n","import React, { FC, ReactChild, ReactChildren } from \"react\";\nimport { range } from \"../../../utils/range\";\n\ninterface Props {\n  width: number;\n  height: number;\n  children: (x: number, y: number) => ReactChildren | ReactChild;\n}\n\nexport const BattleGrid: FC<Props> = ({ children, width, height }: Props) => {\n  return <>{range(width).map(x => range(height).map(y => children(x, y)))}</>;\n};\n","import React, { FC } from \"react\";\nimport { BattleGrid } from \"../../common/BattleGrid\";\n\ninterface Props {\n  width: number;\n  height: number;\n}\n\nexport const BackgroundGrid: FC<Props> = ({ width, height }: Props) => {\n  return (\n    <BattleGrid width={width} height={height}>\n      {(x, y) => (\n        <rect\n          key={`${x}/${y}`}\n          className=\"background-grid\"\n          x={x}\n          y={y}\n          height={1}\n          width={1}\n        />\n      )}\n    </BattleGrid>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Square } from \"../../../../model/Square\";\nimport { BattleGrid } from \"../../common/BattleGrid\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { Dict } from \"../../../../utils/types\";\n\ninterface Props {\n  width: number;\n  height: number;\n  highlightedSquares: ReadonlyArray<Square>;\n  onClick: (square: Square) => void;\n  onHover: (square: Square) => void;\n}\n\nexport const SelectionGrid: FC<Props> = ({\n  onClick,\n  width,\n  height,\n  highlightedSquares,\n  onHover\n}: Props) => {\n  const highlightedMap = highlightedSquares.reduce((map, square) => {\n    map[square.toCoordinateString()] = true;\n    return map;\n  }, {} as Dict<boolean>);\n\n  return (\n    <BattleGrid width={width} height={height}>\n      {(x, y) => {\n        const square = new Square(x, y);\n        return (\n          <rect\n            key={square.toCoordinateString()}\n            className={classesMap({\n              \"selection-grid\": true,\n              highlighted: highlightedMap[square.toCoordinateString()]\n            })}\n            x={x}\n            y={y}\n            height={1}\n            width={1}\n            onClick={() => onClick && onClick(square)}\n            onMouseOver={() => onHover(square)}\n          />\n        );\n      }}\n    </BattleGrid>\n  );\n};\n","import React, { FC, PointerEvent } from \"react\";\nimport { BattleMapService } from \"../services/BattleMapService\";\nimport { DisplayBackgroundImage } from \"./PlayMap/DisplayBackgroundImage\";\nimport { DisplayTokens } from \"./PlayMap/DisplayTokens\";\nimport { useObservable } from \"../../../utils/useObservable\";\nimport { DrawingCapturePane } from \"./PlayMap/DrawingCapturePane\";\nimport { DrawingService } from \"../services/modebased/DrawingService\";\nimport { DisplayDrawingPane } from \"./PlayMap/DisplayDrawingPane\";\nimport { ModeService } from \"../services/ModeService\";\nimport { map } from \"rxjs/operators\";\nimport { Viewport } from \"./PlayMap/Viewport\";\nimport { is } from \"../../../utils/is\";\nimport { combineLatest } from \"rxjs\";\nimport { BackgroundGrid } from \"./PlayMap/BackgroundGrid\";\nimport { SelectionGrid } from \"./PlayMap/SelectionGrid\";\nimport { SaveSessionService } from \"../services/SaveSessionService\";\nimport { ViewportService } from \"../services/ViewportService\";\nimport { ImageGridMap } from \"../../../model/ImageGridMap\";\n\ninterface Props {\n  battleMapService: BattleMapService;\n  backgroundDrawingService: DrawingService;\n  notesDrawingService: DrawingService;\n  modeService: ModeService;\n  saveSessionService: SaveSessionService;\n  viewportService: ViewportService;\n}\n\nexport const PlayMap: FC<Props> = ({\n  saveSessionService,\n  battleMapService,\n  backgroundDrawingService,\n  notesDrawingService,\n  modeService,\n  viewportService\n}: Props) => {\n  const tokens = useObservable(battleMapService.tokens$, []);\n  const notesDrawing = useObservable(notesDrawingService.active$, false);\n  const viewBox = useObservable(viewportService.viewBox$, null);\n\n  const squareSelectable = useObservable(\n    combineLatest([\n      battleMapService.squareSelectable$,\n      modeService.mode$.pipe(map(is(\"play\", \"manage-token\")))\n    ]).pipe(map(([a, b]) => a && b)),\n    false\n  );\n\n  const gridMap = useObservable(saveSessionService.gridMap$, null);\n  const highlightedSquares = useObservable(\n    battleMapService.highlightedSquares$,\n    []\n  );\n\n  const onPointerMove = (e: PointerEvent<any>): void => {};\n\n  return (\n    <>\n      {gridMap && viewBox && (\n        <svg\n          className=\"h-100 w-100\"\n          viewBox={viewBox.toViewBoxString()}\n          onPointerMove={onPointerMove}\n        >\n          <Viewport viewportService={viewportService}>\n            {gridMap instanceof ImageGridMap && (\n              <DisplayBackgroundImage gridMap={gridMap} />\n            )}\n            <BackgroundGrid\n              width={gridMap.squares.x}\n              height={gridMap.squares.y}\n            />\n            <DisplayDrawingPane\n              name=\"background\"\n              drawingService={backgroundDrawingService}\n            />\n            {squareSelectable && (\n              <SelectionGrid\n                width={gridMap.squares.x}\n                height={gridMap.squares.y}\n                highlightedSquares={highlightedSquares}\n                onClick={s => battleMapService.selectSquare(s)}\n                onHover={s => battleMapService.hoverOverSquare(s)}\n              />\n            )}\n            <DisplayTokens\n              tokens={tokens}\n              selectedToken$={battleMapService.selectedToken$}\n              onClick={token => battleMapService.selectToken(token)}\n            />\n            {// disable this component here, so the background DrawingPane is always shown...\n            notesDrawing && (\n              <DisplayDrawingPane\n                name=\"notes\"\n                drawingService={notesDrawingService}\n              />\n            )}\n\n            <DrawingCapturePane drawingService={notesDrawingService} />\n            <DrawingCapturePane drawingService={backgroundDrawingService} />\n          </Viewport>\n        </svg>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ClassesMap, classesMap } from \"../../../utils/classesMap\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  classes?: ClassesMap | string;\n  onClick?: () => void;\n  icon?: Icon;\n  text?: string;\n  tooltip?: string;\n  iconSize?: number;\n  iconHeight?: number;\n}\n\nexport const ControlBarButton: FC<Props> = ({\n  classes,\n  onClick,\n  icon,\n  text,\n  iconSize,\n  tooltip,\n  iconHeight\n}: Props) => {\n  let additionalClasses = \"\";\n  if (typeof classes === \"string\") {\n    additionalClasses = classes;\n  } else if (typeof classes === \"object\") {\n    additionalClasses = classesMap(classes);\n  }\n\n  const size = iconSize || 16;\n\n  return (\n    <div>\n      <a\n        href=\"#\"\n        title={tooltip}\n        onClick={e => {\n          e.preventDefault();\n          onClick && onClick();\n        }}\n        className={\"btn btn-sm mb-md-2 \" + additionalClasses}\n      >\n        <div className=\"icon-button-content\">\n          {icon && (\n            <Octicon icon={icon} width={size} height={iconHeight || size} />\n          )}\n          {text && <span>{text}</span>}\n        </div>\n      </a>\n    </div>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport {\n  Icon,\n  Paintcan,\n  Pencil,\n  Pulse,\n  Trashcan\n} from \"@primer/octicons-react\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport {\n  DrawingMode,\n  DrawingService\n} from \"../../services/modebased/DrawingService\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport { DrawingColor } from \"../../../../model/DrawingColor\";\nimport { DrawingWidth } from \"../../../../model/DrawingWidth\";\n\ninterface Props {\n  drawingService: DrawingService;\n}\n\nconst iconSizeByWidth = {\n  [DrawingWidth.s]: 8,\n  [DrawingWidth.m]: 12,\n  [DrawingWidth.l]: 16\n};\n\nexport const DrawingControlBar: FC<Props> = ({ drawingService }: Props) => {\n  const drawingColor = useObservable(\n    drawingService.drawingColor$,\n    drawingService.drawingColor\n  );\n  const drawingWidth = useObservable(\n    drawingService.drawingWidth$,\n    drawingService.drawingWidth\n  );\n  const active = useObservable(drawingService.active$, false);\n  const drawingMode = useObservable(drawingService.drawingMode$, \"draw\");\n  const widthButton = (width: DrawingWidth): ReactNode => (\n    <ControlBarButton\n      key={width}\n      icon={Pulse}\n      iconSize={iconSizeByWidth[width]}\n      onClick={() => drawingService.switchDrawingWidth(width)}\n      classes={{\n        [`btn-secondary`]: drawingWidth === width,\n        [`btn-outline-secondary`]: drawingWidth !== width,\n        \"drawing-pane-button\": true,\n        \"mr-2\": true\n      }}\n    />\n  );\n  const colorButton = (color: DrawingColor): ReactNode => (\n    <ControlBarButton\n      key={color}\n      icon={Paintcan}\n      onClick={() => drawingService.switchDrawingColor(color)}\n      classes={{\n        [`drawing-button-${color}`]: drawingColor !== color,\n        [`drawing-button-${color}-selected`]: drawingColor === color,\n        \"mr-2\": true\n      }}\n    />\n  );\n\n  const drawingModeButton = (mode: DrawingMode, icon: Icon): ReactNode => (\n    <ControlBarButton\n      key={mode}\n      icon={icon}\n      onClick={() => drawingService.switchDrawingMode(mode)}\n      classes={{\n        [`btn-warning`]: drawingMode === mode,\n        [`btn-outline-warning`]: drawingMode !== mode,\n        \"mr-2\": true\n      }}\n    />\n  );\n\n  return (\n    <>\n      {active && (\n        <>\n          {drawingModeButton(\"draw\", Pencil)}\n          {drawingModeButton(\"erase\", Trashcan)}\n          <div className=\"mr-4\" />\n          {Object.values(DrawingWidth).map(width => widthButton(width))}\n          <div className=\"mr-4\" />\n          {Object.values(DrawingColor).map(color => colorButton(color))}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport {\n  FileMedia,\n  GitCompare,\n  Icon,\n  Note,\n  Octoface,\n  Search\n} from \"@primer/octicons-react\";\nimport { Mode, ModeService } from \"../../services/ModeService\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport { labels } from \"../../../../data/labels\";\n\ninterface Props {\n  modeService: ModeService;\n}\n\nexport const ModeControlBar: FC<Props> = ({ modeService }: Props) => {\n  const mode = useObservable(modeService.mode$, \"play\");\n\n  const modeButton = (\n    icon: Icon,\n    activeInMode: Mode,\n    tooltip: string\n  ): ReactNode => (\n    <ControlBarButton\n      icon={icon}\n      onClick={() => modeService.switchMode(activeInMode)}\n      classes={{\n        \"btn-outline-primary\": activeInMode !== mode,\n        \"btn-primary\": activeInMode === mode\n      }}\n      tooltip={tooltip}\n    />\n  );\n\n  return (\n    <div className=\"\">\n      {modeButton(GitCompare, \"play\", labels.playPage.controlBar.playButton)}\n      {modeButton(\n        Octoface,\n        \"manage-token\",\n        labels.playPage.controlBar.addTokensButton\n      )}\n      {modeButton(\n        Note,\n        \"draw-notes\",\n        labels.playPage.controlBar.drawNotesButton\n      )}\n      {modeButton(\n        FileMedia,\n        \"draw-background\",\n        labels.playPage.controlBar.drawBackgroundButton\n      )}\n      {modeButton(Search, \"zoom\", labels.playPage.controlBar.zoomButton)}\n    </div>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Icon, Plus, Trashcan } from \"@primer/octicons-react\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport {\n  ManageTokenService,\n  Mode\n} from \"../../services/modebased/ManageTokenService\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\nimport { classesMap } from \"../../../../utils/classesMap\";\n\ninterface Props {\n  manageTokenService: ManageTokenService;\n}\n\nexport const ManageTokenControlBar: FC<Props> = ({\n  manageTokenService\n}: Props) => {\n  const active = useObservable(manageTokenService.active$, false);\n  const tokenType = useObservable(manageTokenService.tokenType$, null);\n  const tokenLabel = useObservable(manageTokenService.tokenLabel$, null);\n  const currentMode = useObservable(manageTokenService.mode$, \"add-token\");\n\n  const modeButton = (icon: Icon, mode: Mode): ReactNode => (\n    <ControlBarButton\n      icon={icon}\n      onClick={() => manageTokenService.switchMode(mode)}\n      classes={{\n        \"btn-warning\": mode === currentMode,\n        \"btn-outline-warning\": mode !== currentMode,\n        \"mr-2\": true\n      }}\n    />\n  );\n\n  return (\n    <>\n      {active && (\n        <>\n          {modeButton(Plus, \"add-token\")}\n          <div>\n            <a\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault();\n                manageTokenService.switchMode(\"switch-token-type\");\n              }}\n              className={classesMap({\n                btn: true,\n                \"btn-sm\": true,\n                \"btn-warning\": \"switch-token-type\" === currentMode,\n                \"btn-outline-warning\": \"switch-token-type\" !== currentMode,\n                \"mr-2\": true,\n                \"mb-2\": true\n              })}\n            >\n              {tokenType && tokenLabel && (\n                <svg viewBox=\"-0.1 -0.1 1.15 1.15\" width={16} height={16}>\n                  <DisplayToken\n                    tokenLabel={tokenLabel}\n                    tokenType={tokenType}\n                    tokenSize={1}\n                  />\n                </svg>\n              )}\n            </a>\n          </div>\n          <div className=\"mr-2\" />\n          {modeButton(Trashcan, \"remove-token\")}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport { Dash, Icon, Plus, Trashcan } from \"@primer/octicons-react\";\nimport { useObservable } from \"../../../../utils/useObservable\";\nimport { ControlBarButton } from \"../../common/ControlBarButton\";\nimport {\n  ManageTokenService,\n  Mode\n} from \"../../services/modebased/ManageTokenService\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { ViewportService } from \"../../services/ViewportService\";\n\ninterface Props {\n  viewportService: ViewportService;\n}\n\nexport const ViewportControlBar: FC<Props> = ({ viewportService }: Props) => {\n  const active = useObservable(viewportService.mouseDragEnabled$, false);\n  const modeButton = (icon: Icon, action: () => void): ReactNode => (\n    <ControlBarButton\n      icon={icon}\n      onClick={action}\n      classes={{\n        \"btn-warning\": true,\n        \"mr-2\": true\n      }}\n    />\n  );\n\n  return (\n    <>\n      {active && (\n        <>\n          {modeButton(Plus, () => viewportService.zoomIn())}\n          {modeButton(Dash, () => viewportService.zoomOut())}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ModeService } from \"../services/ModeService\";\nimport { DrawingService } from \"../services/modebased/DrawingService\";\nimport { ManageTokenService } from \"../services/modebased/ManageTokenService\";\nimport { DrawingControlBar } from \"./ControlBar/DrawingControlBar\";\nimport { ModeControlBar } from \"./ControlBar/ModeControlBar\";\nimport { ManageTokenControlBar } from \"./ControlBar/ManageTokenControlBar\";\nimport { ViewportControlBar } from \"./ControlBar/ViewportControlBar\";\nimport { ViewportService } from \"../services/ViewportService\";\nimport { useObservable } from \"../../../utils/useObservable\";\n\ninterface Props {\n  modeService: ModeService;\n  backgroundDrawingService: DrawingService;\n  notesDrawingService: DrawingService;\n  manageTokenService: ManageTokenService;\n  viewportService: ViewportService;\n}\n\nexport const ControlBar: FC<Props> = ({\n  modeService,\n  notesDrawingService,\n  backgroundDrawingService,\n  manageTokenService,\n  viewportService\n}: Props) => {\n  const showSecondary = useObservable(\n    modeService.oneOf(\"draw-background\", \"draw-notes\", \"manage-token\", \"zoom\"),\n    false\n  );\n  return (\n    <>\n      <div className=\"control-bar_primary navbar navbar-dark bg-dark\">\n        <ModeControlBar modeService={modeService} />\n      </div>\n      {showSecondary && (\n        <div className=\"control-bar_secondary\">\n          <div className=\"navbar navbar-dark bg-dark\">\n            <DrawingControlBar drawingService={notesDrawingService} />\n            <DrawingControlBar drawingService={backgroundDrawingService} />\n            <ManageTokenControlBar manageTokenService={manageTokenService} />\n            <ViewportControlBar viewportService={viewportService} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { ReactElementLike } from \"prop-types\";\n\ninterface Props {\n  component: (item: any) => ReactElementLike;\n  items: ReadonlyArray<any>;\n  columns: number;\n}\n\nexport const LayoutGrid: FC<Props> = ({ items, columns, component }: Props) => {\n  return (\n    <div className=\"row p-2\">\n      {items.map((item, idx) => (\n        <div key={idx} className={`col-${12 / columns}`}>\n          {component(item)}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { Immerable } from \"../utils/Immerable\";\n\n@Immerable()\nexport class ViewBox {\n  constructor(\n    readonly x: number,\n    readonly y: number,\n    readonly width: number,\n    readonly height: number\n  ) {}\n\n  toViewBoxString(): string {\n    return `${this.x} ${this.y} ${this.width} ${this.height}`;\n  }\n}\n","import React, { FC } from \"react\";\nimport { DisplayToken } from \"../../../../common/DisplayToken\";\nimport { TokenType } from \"../../../../model/TokenType\";\nimport { classesMap } from \"../../../../utils/classesMap\";\nimport { ViewBox } from \"../../../../model/ViewBox\";\nimport { BackgroundGrid } from \"../PlayMap/BackgroundGrid\";\n\ninterface Props {\n  tokenType: TokenType;\n  tokenLabel: string;\n  tokenSize: number;\n  onClick: () => void;\n  selected: boolean;\n  svgSize: number;\n  maxTokenSize: number;\n}\n\nexport const TokenTypeSelection: FC<Props> = ({\n  tokenType,\n  tokenLabel,\n  tokenSize,\n  onClick,\n  selected,\n  svgSize,\n  maxTokenSize\n}: Props) => {\n  const viewBox = new ViewBox(\n    -0.25,\n    -0.25,\n    maxTokenSize + 0.5,\n    maxTokenSize + 0.5\n  );\n  return (\n    <a\n      className={classesMap({\n        btn: true,\n        \"btn-outline-secondary\": !selected,\n        \"btn-secondary\": selected\n      })}\n      onClick={event => {\n        event.preventDefault();\n        onClick();\n      }}\n    >\n      <svg viewBox={viewBox.toViewBoxString()} width={svgSize} height={svgSize}>\n        <BackgroundGrid width={maxTokenSize} height={maxTokenSize} />\n        <DisplayToken\n          tokenLabel={tokenLabel}\n          tokenType={tokenType}\n          tokenSize={tokenSize}\n        />\n      </svg>\n    </a>\n  );\n};\n","import React, {\n  FC,\n  ReactChild,\n  ReactChildren,\n  useLayoutEffect,\n  useRef\n} from \"react\";\nimport $ from \"jquery\";\n\ninterface Props {\n  children: ReactChild | ReactChildren | false | undefined;\n  onOk?: () => void;\n  onCancel?: () => void;\n  buttonText: string;\n  header: string;\n  open: boolean;\n  okEnabled?: boolean;\n}\n\nexport const Modal: FC<Props> = ({\n  children,\n  onOk,\n  okEnabled,\n  onCancel,\n  buttonText,\n  header,\n  open\n}: Props) => {\n  const modalElementRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    $(modalElementRef.current!)\n      .modal(\"hide\")\n      .on(\"hide.bs.modal\", () => {\n        onCancel && onCancel();\n      });\n  }, [onCancel]);\n\n  useLayoutEffect(() => {\n    console.log(\"effect after open\", open);\n    $(modalElementRef.current!).modal(open ? \"show\" : \"hide\");\n  }, [open]);\n\n  const ok = (): void => {\n    $(modalElementRef.current!).modal(\"hide\");\n    onOk && onOk();\n  };\n\n  return (\n    <div\n      ref={modalElementRef}\n      className=\"modal fade\"\n      id=\"exampleModal\"\n      tabIndex={-1}\n    >\n      <div className=\"modal-dialog modal-lg modal-dialog-centered\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{header}</h5>\n            <button type=\"button\" className=\"close\" onClick={onCancel}>\n              <span>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">{children}</div>\n          <div className=\"modal-footer\">\n            {onOk && (\n              <button\n                onClick={ok}\n                disabled={okEnabled !== undefined && !okEnabled}\n                type=\"button\"\n                className=\"btn btn-primary\"\n              >\n                {buttonText}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useCallback } from \"react\";\nimport { LayoutGrid } from \"../../../common/LayoutGrid\";\nimport { TokenTypeSelection } from \"./AddTokenModal/TokenTypeSelection\";\nimport { Modal } from \"../../../common/Modal\";\nimport { ManageTokenService } from \"../services/modebased/ManageTokenService\";\nimport { useObservable } from \"../../../utils/useObservable\";\nimport { AssetService } from \"../services/AssetService\";\nimport { range } from \"../../../utils/range\";\n\ninterface Props {\n  assetService: AssetService;\n  manageTokenService: ManageTokenService;\n}\n\nexport const AddTokenModal: FC<Props> = ({\n  assetService,\n  manageTokenService\n}: Props) => {\n  const showModal = useObservable(manageTokenService.isSwitchTokenType$, false);\n  const selectedTokenType = useObservable(\n    manageTokenService.tokenType$,\n    manageTokenService.tokenType\n  );\n  const selectedTokenLabel = useObservable(\n    manageTokenService.tokenLabel$,\n    manageTokenService.tokenLabel\n  );\n  const selectedTokenSize = useObservable(\n    manageTokenService.tokenSize$,\n    manageTokenService.tokenSize\n  );\n\n  const onCancel = useCallback(\n    () => manageTokenService.switchMode(\"add-token\"),\n    [manageTokenService]\n  );\n\n  return (\n    <Modal\n      onCancel={onCancel}\n      buttonText={\"place it\"}\n      header={\"Add Token\"}\n      open={showModal}\n    >\n      {!!selectedTokenLabel && !!selectedTokenType && !!selectedTokenSize && (\n        <div>\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <LayoutGrid\n                items={assetService.tokenTypes}\n                columns={4}\n                component={tokenType => (\n                  <TokenTypeSelection\n                    tokenLabel={selectedTokenLabel}\n                    tokenType={tokenType}\n                    tokenSize={1} // to preserve the layout\n                    onClick={() => manageTokenService.setTokenType(tokenType)}\n                    selected={tokenType === selectedTokenType}\n                    svgSize={35}\n                    maxTokenSize={1}\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-4\">\n              <LayoutGrid\n                items={assetService.tokenLabels}\n                columns={4}\n                component={label => (\n                  <TokenTypeSelection\n                    tokenLabel={label}\n                    tokenType={selectedTokenType}\n                    tokenSize={1} // to preserve the layout\n                    onClick={() => manageTokenService.setTokenLabel(label)}\n                    selected={selectedTokenLabel === label}\n                    svgSize={35}\n                    maxTokenSize={1}\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-4\">\n              <LayoutGrid\n                items={range(3)}\n                columns={1}\n                component={i => {\n                  const size = i + 1;\n                  return (\n                    <TokenTypeSelection\n                      tokenLabel={selectedTokenLabel}\n                      tokenType={selectedTokenType}\n                      tokenSize={size}\n                      onClick={() => manageTokenService.setTokenSize(size)}\n                      selected={selectedTokenSize === size}\n                      svgSize={90}\n                      maxTokenSize={3}\n                    />\n                  );\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n","import React, { FC } from \"react\";\nimport { links } from \"../data/links\";\nimport Octicon, { Key, Law } from \"@primer/octicons-react\";\n\ninterface Props {}\n\nexport const Legal: FC<Props> = ({}: Props) => {\n  return (\n    <div className=\"main-menu_legal-stuff\">\n      <small>\n        <a href={links.impressum} className=\"ml-2 mr-2\">\n          <Octicon icon={Law} /> Impressum\n        </a>\n      </small>\n      <small>\n        <a href={links.dataProtection}>\n          <Octicon icon={Key} /> Data Protection\n        </a>\n      </small>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { PlayMap } from \"./Layout/PlayMap\";\nimport { ControlBar } from \"./Layout/ControlBar\";\nimport { AddTokenModal } from \"./Layout/AddTokenModal\";\nimport { Services } from \"./services/Services\";\nimport { useObservable } from \"../../utils/useObservable\";\nimport { Legal } from \"../Legal\";\n\ninterface Props extends Services {}\n\nexport const Layout: FC<Props> = (props: Props) => {\n  const showLegal = useObservable(props.modeService.oneOf(\"play\"), false);\n  return (\n    <>\n      {showLegal && <Legal />}\n      <div className=\"App h-100\">\n        <PlayMap {...props!} />\n        <ControlBar {...props!} />\n      </div>\n      <div className=\"App h-100\">\n        <AddTokenModal {...props} />\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../../common/FullPageWithHeading\";\nimport { Link } from \"react-router-dom\";\nimport { routing } from \"../../App\";\n\ninterface Props {}\n\nexport const NoSessionsFound: FC<Props> = ({}: Props) => {\n  return (\n    <FullPageWithHeading heading={<h1>Welcome to Gridheim, Stranger!</h1>}>\n      <h3>No Session found</h3>\n      <span>\n        It seems that you don&apos;t have a session (yet) or that the session is\n        invalid :(\n      </span>\n      <br />\n      <br />\n      <span>\n        Please go <Link to={routing.sessions}>here</Link> to create a session so\n        we can play :D\n      </span>\n    </FullPageWithHeading>\n  );\n};\n","import { BattleMapService } from \"../BattleMapService\";\nimport { combineLatest, Observable } from \"rxjs\";\nimport { distinctUntilChanged, takeUntil } from \"rxjs/operators\";\nimport { AbstractModeBasedService } from \"../../../../services/AbstractModeBasedService\";\n\nexport class ZoomModeService extends AbstractModeBasedService {\n  constructor(private readonly battleMapService: BattleMapService) {\n    super();\n  }\n\n  onActivate(): void {\n    this.battleMapService.setTokenSelectable(false);\n    this.battleMapService.setSquareSelectable(false);\n    this.battleMapService.selectSquare(null);\n    this.battleMapService.selectToken(null);\n  }\n}\n","import { Vector } from \"../../../utils/Vector\";\nimport { BehaviorSubject, combineLatest, of } from \"rxjs\";\nimport { Transform } from \"../../../utils/Transform\";\nimport { ModeService } from \"./ModeService\";\nimport { SaveSessionService } from \"./SaveSessionService\";\nimport { ViewBox } from \"../../../model/ViewBox\";\nimport { windowAspectRatio } from \"../../../utils/windowAspectRatio\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\nexport class ViewportService {\n  static readonly VIEW_BOX_SIZE = 10;\n  constructor(\n    private readonly modeService: ModeService,\n    private readonly saveSessionService: SaveSessionService\n  ) {}\n\n  private readonly transform$S = new BehaviorSubject(\n    new Transform(Vector.zero, 1)\n  );\n\n  readonly transform$ = this.transform$S.asObservable();\n\n  readonly touchEnabled$ = this.modeService.oneOf(\n    \"play\",\n    \"manage-token\",\n    \"zoom\"\n  );\n\n  readonly viewBox$ = of(\n    new ViewBox(\n      0,\n      0,\n      ViewportService.VIEW_BOX_SIZE,\n      ViewportService.VIEW_BOX_SIZE / windowAspectRatio()\n    )\n  ).pipe(shareReplay(1));\n\n  readonly initialScale$ = combineLatest([\n    this.saveSessionService.gridMap$,\n    this.viewBox$\n  ]).pipe(\n    map(([gridMap, viewBox]) =>\n      gridMap\n        ? Math.min(\n            viewBox.width / gridMap.squares.x,\n            viewBox.height / gridMap.squares.y\n          )\n        : 1\n    )\n  );\n\n  readonly mouseDragEnabled$ = this.modeService.oneOf(\"zoom\");\n\n  set transform(transform: Transform) {\n    this.transform$S.next(transform);\n  }\n\n  get transform(): Transform {\n    return this.transform$S.value;\n  }\n\n  updateTransform(fn: (t: Transform) => Transform): void {\n    this.transform = fn(this.transform);\n  }\n\n  zoomIn(): void {\n    this.updateTransform(t => {\n      const newScale = t.scale + t.scale * 0.1;\n      return t\n        .withScale(newScale)\n        .withTranslate(\n          t.translate\n            .add(t.translate.scale(t.scale))\n            .subtract(t.translate.scale(newScale))\n        );\n    });\n  }\n\n  zoomOut(): void {\n    this.updateTransform(t => {\n      const newScale = t.scale - t.scale * 0.1;\n      return t\n        .withScale(newScale)\n        .withTranslate(\n          t.translate\n            .add(t.translate.add(Vector.fromNumber(5)).scale(t.scale))\n            .subtract(t.translate.add(Vector.fromNumber(5)).scale(newScale))\n        );\n    });\n  }\n}\n","export const windowAspectRatio = (): number => {\n  return window.innerWidth / window.innerHeight;\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Token } from \"../model/Token\";\nimport { Square } from \"../model/Square\";\nimport { DrawingPane } from \"../model/DrawingPane\";\nimport { map } from \"rxjs/operators\";\nimport { Services } from \"./PlayPage/services/Services\";\nimport { BattleMapService } from \"./PlayPage/services/BattleMapService\";\nimport { PlayModeService } from \"./PlayPage/services/modebased/PlayModeService\";\nimport { DrawingService } from \"./PlayPage/services/modebased/DrawingService\";\nimport { AssetService } from \"./PlayPage/services/AssetService\";\nimport { ManageTokenService } from \"./PlayPage/services/modebased/ManageTokenService\";\nimport { ModeService } from \"./PlayPage/services/ModeService\";\nimport { SaveSessionService } from \"./PlayPage/services/SaveSessionService\";\nimport { Layout } from \"./PlayPage/Layout\";\nimport { SessionRepository } from \"../services/SessionRepository\";\nimport { NoSessionsFound } from \"./PlayPage/NoSessionsFound\";\nimport { ZoomModeService } from \"./PlayPage/services/modebased/ZoomModeService\";\nimport { ViewportService } from \"./PlayPage/services/ViewportService\";\nimport { GridMapService } from \"../services/GridMapService\";\n\ninterface Props {\n  gridMapService: GridMapService;\n  sessionRepository: SessionRepository;\n}\n\nexport const PlayPage: FC<Props> = ({\n  gridMapService,\n  sessionRepository\n}: Props) => {\n  const [services, setServices] = useState<Services | null>(null);\n  const [sessionLoaded, setSessionLoaded] = useState<\n    \"FAILED\" | \"LOADING\" | \"LOADED\"\n  >(\"LOADING\");\n  useEffect(() => {\n    const saveSessionService = new SaveSessionService(\n      gridMapService,\n      sessionRepository\n    );\n    const battleMapService = new BattleMapService();\n\n    const playModeService = new PlayModeService(battleMapService);\n    const backgroundDrawingService = new DrawingService();\n    const notesDrawingService = new DrawingService();\n    const assetService = new AssetService();\n    const manageTokenService = new ManageTokenService(\n      battleMapService,\n      assetService\n    );\n    const zoomModeService = new ZoomModeService(battleMapService);\n    const modeService = new ModeService(\"play\", {\n      play: playModeService,\n      \"draw-background\": backgroundDrawingService,\n      \"draw-notes\": notesDrawingService,\n      \"manage-token\": manageTokenService,\n      zoom: zoomModeService\n    });\n\n    const viewportService = new ViewportService(\n      modeService,\n      saveSessionService\n    );\n\n    saveSessionService\n      .add(\"tokens\", battleMapService.tokens$)\n      .subscribe(tokensJson => {\n        const mappedTokens = tokensJson.flatMap(tokenJson => {\n          const tokenType = assetService.tokenTypeForName(\n            tokenJson.tokenType.name\n          );\n          if (!tokenType) {\n            return [];\n          }\n          return [\n            new Token(\n              tokenJson.id,\n              tokenType,\n              tokenJson.label,\n              new Square(tokenJson.square.x, tokenJson.square.y),\n              tokenJson.size\n            )\n          ];\n        });\n\n        battleMapService.updateTokens(() => mappedTokens);\n      });\n\n    saveSessionService\n      .add(\n        \"background-pane\",\n        backgroundDrawingService.pane$.pipe(\n          map(p => p.withCurrentDrawingRemoved())\n        )\n      )\n      .subscribe(paneJson => {\n        backgroundDrawingService.setPane(DrawingPane.fromJson(paneJson));\n      });\n\n    saveSessionService\n      .add(\n        \"notes-pane\",\n        notesDrawingService.pane$.pipe(map(p => p.withCurrentDrawingRemoved()))\n      )\n      .subscribe(paneJson => {\n        notesDrawingService.setPane(DrawingPane.fromJson(paneJson));\n      });\n\n    saveSessionService\n      .loadAndStart()\n      .toPromise()\n      .then(result => setSessionLoaded(result ? \"LOADED\" : \"FAILED\"));\n\n    setServices({\n      battleMapService,\n      playModeService,\n      backgroundDrawingService,\n      notesDrawingService,\n      modeService,\n      manageTokenService,\n      assetService,\n      saveSessionService,\n      viewportService\n    });\n    return () => {\n      console.log(\"disposing PlayApp\");\n      saveSessionService.saveSession();\n      battleMapService.dispose();\n      playModeService.dispose();\n      backgroundDrawingService.dispose();\n      notesDrawingService.dispose();\n      zoomModeService.dispose();\n      modeService.dispose();\n      manageTokenService.dispose();\n      assetService.dispose();\n    };\n  }, [sessionRepository, gridMapService]);\n\n  return (\n    <>\n      {(!services || sessionLoaded === \"LOADING\") && (\n        <div className=\"App h-100\">\n          <span>loading ...</span>\n        </div>\n      )}\n      {sessionLoaded === \"FAILED\" && !!services && <NoSessionsFound />}\n      {sessionLoaded === \"LOADED\" && !!services && <Layout {...services} />}\n    </>\n  );\n};\n","import { StorageProvider } from \"./StorageProvider\";\nimport Dexie from \"dexie\";\nimport { Observable } from \"rxjs\";\nimport { fromPromise } from \"rxjs/internal-compatibility\";\n\nexport class IndexedDbStorageProvider implements StorageProvider {\n  private static readonly TABLE_NAME = \"blobs\";\n\n  private readonly db = new Dexie(\"GridHeimBlobStorage\");\n  private readonly blobs: Dexie.Table<\n    { key: string; value: string },\n    string\n  > = (() => {\n    this.db.version(1).stores({\n      [IndexedDbStorageProvider.TABLE_NAME]: \"key\"\n    });\n    return this.db.table(IndexedDbStorageProvider.TABLE_NAME);\n  })();\n\n  get(key: string): Observable<string | null> {\n    return fromPromise(\n      this.blobs.get(key).then(entry => (entry ? entry.value : null))\n    );\n  }\n\n  listKeys(): Observable<ReadonlyArray<string>> {\n    return fromPromise(\n      this.blobs\n        .toArray()\n        .then(result => Object.freeze(result.map(entry => entry.key)))\n    );\n  }\n\n  set(key: string, value: string): Observable<void> {\n    return fromPromise(this.blobs.put({ key, value }).then(() => undefined));\n  }\n\n  remove(key: string): Observable<void> {\n    return fromPromise(this.blobs.delete(key).then(() => undefined));\n  }\n}\n","import { Action } from \"../Action\";\nimport { SessionRepository } from \"../../../services/SessionRepository\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const showSessionsAction = (\n  sessionStorage: SessionRepository\n): Observable<Action | null> => {\n  return sessionStorage.count().pipe(\n    map(count => {\n      if (count === 0) {\n        return null;\n      }\n\n      return {\n        to: routing.sessions,\n        descriptionText: labels.startPage.showSessions.description,\n        actionText: labels.startPage.showSessions.button,\n        section: \"play\"\n      };\n    })\n  );\n};\n","import { Action } from \"../Action\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\nimport { ImageGridMapRepository } from \"../../../services/ImageGridMapRepository\";\n\nexport const showGridMapsAction = (\n  imageGridMapRepository: ImageGridMapRepository\n): Observable<Action | null> => {\n  return imageGridMapRepository.count().pipe(\n    map(count => {\n      if (count === 0) {\n        return null;\n      }\n\n      return {\n        to: routing.gridMaps,\n        descriptionText: labels.startPage.showGridMaps.description,\n        actionText: labels.startPage.showGridMaps.button,\n        section: \"gridMaps\"\n      };\n    })\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\nimport Octicon, { Icon } from \"@primer/octicons-react\";\n\ninterface Props {\n  headline: string;\n  icon: Icon;\n  children: ReactNode;\n  hero?: boolean;\n}\n\nexport const StartSection: FC<Props> = ({\n  headline,\n  icon,\n  children,\n  hero\n}: Props) => {\n  return (\n    <>\n      <div className=\"row mb-5\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className={`card-header${hero ? \" bg-dark text-white\" : \"\"}`}>\n              <h4>\n                <Octicon icon={icon} size={30} /> {headline}\n              </h4>\n            </div>\n            <div className=\"card-body\">\n              {React.Children.map(children, (child, index) => {\n                return (\n                  <>\n                    {index !== 0 && <hr />}\n                    {child}\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { classesMap } from \"../../utils/classesMap\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  description: string;\n  hero?: boolean;\n  actionText: string;\n  to: string;\n}\n\nexport const StartSectionItem: FC<Props> = ({\n  description,\n  hero,\n  actionText,\n  to\n}: Props) => {\n  return (\n    <>\n      <p className=\"card-text\">{description}</p>\n      <Link\n        className={classesMap({\n          btn: true,\n          \"btn-secondary\": !hero,\n          \"btn-primary\": !!hero,\n          \"btn-lg\": !!hero\n        })}\n        to={to}\n      >\n        {actionText}\n      </Link>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { Icon, Milestone } from \"@primer/octicons-react\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { SessionRepository } from \"../services/SessionRepository\";\nimport { useObservable } from \"../utils/useObservable\";\nimport { map, take } from \"rxjs/operators\";\nimport { playAction } from \"./StartPage/actions/PlayAction\";\nimport { newSessionAction } from \"./StartPage/actions/NewSessionAction\";\nimport { showSessionsAction } from \"./StartPage/actions/ShowSessionsAction\";\nimport { newGridMapAction } from \"./StartPage/actions/NewGridMapAction\";\nimport { showGridMapsAction } from \"./StartPage/actions/ShowGridMapsAction\";\nimport { Action } from \"./StartPage/Action\";\nimport { combineLatest } from \"rxjs\";\nimport { Dict } from \"../utils/types\";\nimport { StartSection } from \"./StartPage/StartSection\";\nimport { StartSectionItem } from \"./StartPage/StartSectionItem\";\nimport { labels } from \"../data/labels\";\nimport { aboutAction } from \"./StartPage/actions/AboutAction\";\nimport { openSourceAction } from \"./StartPage/actions/OpenSourceAction\";\nimport { assetAction } from \"./StartPage/actions/AssetAction\";\nimport { ImageGridMapRepository } from \"../services/ImageGridMapRepository\";\n\ninterface Props {\n  imageGridMapRepository: ImageGridMapRepository;\n  sessionRepository: SessionRepository;\n}\n\nconst sections: Dict<{ icon: Icon; headline: string }> =\n  labels.startPage.sections;\n\nexport const StartPage: FC<Props> = ({\n  imageGridMapRepository,\n  sessionRepository\n}: Props) => {\n  const actions: Dict<Array<Action>> = useObservable(\n    combineLatest([\n      playAction(sessionRepository),\n      newSessionAction(),\n      showSessionsAction(sessionRepository),\n      newGridMapAction(),\n      showGridMapsAction(imageGridMapRepository),\n      aboutAction(),\n      openSourceAction(),\n      assetAction()\n    ]).pipe(\n      map(actions =>\n        actions.reduce((result, action) => {\n          if (!action) {\n            return result;\n          }\n          const section = action.section;\n          return {\n            ...result,\n            [section]: [...(result[section] || []), action]\n          };\n        }, {} as Dict<Array<Action>>)\n      ),\n      take(1)\n    ),\n    {},\n    [sessionRepository]\n  );\n\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader icon={Milestone} headline={labels.startPage.headline} />\n      }\n    >\n      <div className=\"container\">\n        {Object.entries(actions).map(([sectionName, actions], sectionIndex) => (\n          <StartSection\n            key={sectionName}\n            headline={sections[sectionName].headline}\n            icon={sections[sectionName].icon}\n            hero={true}\n          >\n            {actions.map((action, actionIndex) => (\n              <StartSectionItem\n                key={actionIndex}\n                description={action.descriptionText}\n                hero={actionIndex === 0 && sectionIndex === 0}\n                actionText={action.actionText}\n                to={action.to}\n              />\n            ))}\n          </StartSection>\n        ))}\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","import { Action } from \"../Action\";\nimport { SessionRepository } from \"../../../services/SessionRepository\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const playAction = (\n  sessionStorage: SessionRepository\n): Observable<Action | null> => {\n  return sessionStorage.findCurrentSession().pipe(\n    map(([name, session]) => {\n      if (!name || !session) {\n        return null;\n      }\n\n      return {\n        to: routing.play,\n        descriptionText: labels.startPage.play.description,\n        actionText: `${labels.startPage.play.button} '${name}'`,\n        section: \"play\"\n      };\n    })\n  );\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const newSessionAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.newSessions,\n    descriptionText: labels.startPage.newSession.description,\n    actionText: labels.startPage.newSession.button,\n    section: \"play\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const newGridMapAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.newGridMap,\n    descriptionText: labels.startPage.newGridMap.description,\n    actionText: labels.startPage.newGridMap.button,\n    section: \"gridMaps\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const aboutAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.about,\n    descriptionText: labels.startPage.about.description,\n    actionText: labels.startPage.about.button,\n    section: \"info\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const openSourceAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.openSource,\n    descriptionText: labels.startPage.openSource.description,\n    actionText: labels.startPage.openSource.button,\n    section: \"info\"\n  });\n};\n","import { Action } from \"../Action\";\nimport { Observable, of } from \"rxjs\";\nimport { routing } from \"../../../App\";\nimport { labels } from \"../../../data/labels\";\n\nexport const assetAction = (): Observable<Action | null> => {\n  return of({\n    to: routing.assets,\n    descriptionText: labels.startPage.assets.description,\n    actionText: labels.startPage.assets.button,\n    section: \"info\"\n  });\n};\n","import { PropsOf } from \"../utils/types\";\n\nexport class BackgroundImage {\n  public static of(props: PropsOf<BackgroundImage>): BackgroundImage {\n    return Object.freeze(\n      new BackgroundImage(props.url, props.width, props.height)\n    );\n  }\n\n  constructor(\n    readonly url: string,\n    readonly width: number,\n    readonly height: number\n  ) {}\n\n  with(\n    props: { [T in keyof BackgroundImage]?: BackgroundImage[T] }\n  ): BackgroundImage {\n    const copy = new BackgroundImage(this.url, this.width, this.height);\n    return Object.freeze(Object.assign(copy, props));\n  }\n}\n","import { StorageProvider } from \"./StorageProvider\";\nimport { forkJoin, Observable, of } from \"rxjs\";\nimport { flatMap, map } from \"rxjs/operators\";\n\nexport abstract class AbstractStorage<T, K> {\n  protected abstract readonly isStorageKey: (key: string) => boolean;\n  protected abstract readonly toStorageKey: (o: T) => string;\n  protected abstract readonly parseJson: (json: any) => T | null;\n  protected abstract readonly keyToStorageKey: (k: K) => string;\n\n  constructor(protected readonly storageProvider: StorageProvider) {}\n\n  findAll(): Observable<ReadonlyArray<T>> {\n    return this.storageProvider.listKeys().pipe(\n      flatMap(list => {\n        const observables: Array<Observable<T | null>> = list.flatMap(key => {\n          const keyResult: Observable<T | null>[] =\n            key && this.isStorageKey(key) ? [this.loadObject(key)] : [];\n          return keyResult;\n        });\n\n        if (observables.length === 0) {\n          return of([]);\n        }\n\n        return forkJoin(observables).pipe(\n          map(array => array.flatMap(a => (!!a ? [a] : []))),\n          map(array => Object.freeze(array))\n        );\n      })\n    );\n  }\n\n  count(): Observable<number> {\n    return this.storageProvider\n      .listKeys()\n      .pipe(map(keys => keys.filter(key => this.isStorageKey(key)).length));\n  }\n\n  findBy(objectKey: K): Observable<T | null> {\n    return this.loadObject(this.keyToStorageKey(objectKey));\n  }\n\n  store(o: T): Observable<void> {\n    const jsonString = JSON.stringify(o);\n    return this.storageProvider.set(this.toStorageKey(o), jsonString);\n  }\n\n  private loadObject(name: string): Observable<T | null> {\n    return this.storageProvider.get(name).pipe(\n      map(content => {\n        if (content === null) {\n          return null;\n        }\n        const json: any = JSON.parse(content);\n        try {\n          return this.parseJson(json);\n        } catch (e) {\n          console.log(`Failed loading ${name} from local storage`, { name, e });\n          return null;\n        }\n      })\n    );\n  }\n\n  delete(objectKey: K | null): Observable<void> {\n    if (!objectKey) {\n      return of(undefined);\n    }\n    return this.storageProvider.remove(this.keyToStorageKey(objectKey));\n  }\n}\n","import { ImageGridMap } from \"../model/ImageGridMap\";\nimport { BackgroundImage } from \"../model/BackgroundImage\";\nimport { AbstractStorage } from \"./AbstractStorage\";\nimport { Transform } from \"../utils/Transform\";\nimport { Vector } from \"../utils/Vector\";\n\nexport class ImageGridMapRepository extends AbstractStorage<\n  ImageGridMap,\n  string\n> {\n  protected readonly isStorageKey = (key: string): boolean =>\n    ImageGridMap.isStorageKey(key);\n\n  protected readonly parseJson = (json: any): ImageGridMap => {\n    return new ImageGridMap(\n      json.name,\n      BackgroundImage.of(json.image),\n      new Transform(\n        Vector.fromCoords(json.transform.translate),\n        json.transform.scale\n      )\n    );\n  };\n\n  protected readonly toStorageKey = (gridMap: ImageGridMap): string =>\n    ImageGridMap.storageKey(gridMap.name);\n\n  protected readonly keyToStorageKey = (name: string): string =>\n    ImageGridMap.storageKey(name);\n}\n","import { PropsOf, SomePropsOf } from \"../utils/types\";\n\nexport class Session {\n  static readonly STORAGE_KEY_PREFIX = \"session-\";\n  static readonly CURRENT_SESSION_STORAGE_KEY = \"current-session\";\n\n  static storageKey(sessionName: string): string {\n    return `${this.STORAGE_KEY_PREFIX}${sessionName}`;\n  }\n\n  static isStorageKey(key: string): boolean {\n    return key.startsWith(this.STORAGE_KEY_PREFIX);\n  }\n\n  public static of(props: PropsOf<Session>): Session {\n    return Object.freeze(\n      new Session(props.name, props.date, props.gridMapName, props.content)\n    );\n  }\n\n  private constructor(\n    readonly name: string,\n    readonly date: string,\n    readonly gridMapName: string,\n    readonly content: { [name: string]: any }\n  ) {}\n\n  with(props: SomePropsOf<Session>): Session {\n    const copy = new Session(\n      this.name,\n      this.date,\n      this.gridMapName,\n      this.content\n    );\n    return Object.freeze(Object.assign(copy, props));\n  }\n}\n","import { AbstractStorage } from \"./AbstractStorage\";\nimport { Session } from \"../model/Session\";\nimport { Observable, of } from \"rxjs\";\nimport { flatMap, map } from \"rxjs/operators\";\n\nexport class SessionRepository extends AbstractStorage<Session, string> {\n  protected readonly isStorageKey = (key: string): boolean =>\n    Session.isStorageKey(key);\n\n  protected readonly parseJson = (json: any): Session => {\n    return Session.of({\n      name: json.name,\n      date: json.date,\n      gridMapName: json.gridMapName,\n      content: json.content\n    });\n  };\n\n  protected readonly toStorageKey = (session: Session): string =>\n    Session.storageKey(session.name);\n\n  storeCurrentSessionName(name: string): Observable<void> {\n    return this.storageProvider.set(Session.CURRENT_SESSION_STORAGE_KEY, name);\n  }\n\n  findCurrentSessionName(): Observable<string | null> {\n    return this.storageProvider.get(Session.CURRENT_SESSION_STORAGE_KEY);\n  }\n\n  protected readonly keyToStorageKey = (name: string): string =>\n    Session.storageKey(name);\n\n  findCurrentSession(): Observable<readonly [string | null, Session | null]> {\n    return this.findCurrentSessionName().pipe(\n      flatMap(name => {\n        if (!name) {\n          return of([null, null] as const);\n        }\n        return this.findBy(name).pipe(map(session => [name, session] as const));\n      })\n    );\n  }\n}\n","import React, { FC, ReactNodeArray } from \"react\";\n\ninterface Props {\n  children: ReactNodeArray;\n}\n\nexport const ButtonBar: FC<Props> = ({ children }: Props) => {\n  const childCount = React.Children.count(children);\n  return (\n    <>\n      {React.Children.map(children, (child, index) => (\n        <>\n          {child}\n          {child && index !== childCount - 1 && <span className=\"mr-2\" />}\n        </>\n      ))}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, {\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from \"@primer/octicons-react\";\nimport { ButtonBar } from \"../../../common/ButtonBar\";\n\ninterface Props {\n  onNext: () => void;\n  nextDisabled?: boolean;\n  onBack?: () => void;\n  lastStep?: boolean;\n}\n\nexport const WizardButtons: FC<Props> = ({\n  onBack,\n  onNext,\n  nextDisabled,\n  lastStep\n}: Props) => {\n  return (\n    <>\n      <div>\n        <ButtonBar>\n          {onBack && (\n            <button\n              className=\"btn btn-sm btn-warning\"\n              onClick={() => {\n                onBack();\n              }}\n              type=\"button\"\n            >\n              <Octicon icon={ChevronLeft} />\n              &nbsp; Back\n            </button>\n          )}\n          <button\n            className=\"btn btn-sm btn-success\"\n            onClick={onNext}\n            type=\"button\"\n            disabled={nextDisabled}\n          >\n            {!lastStep && (\n              <>\n                <Octicon icon={ChevronRight} />\n                &nbsp; Next\n              </>\n            )}\n            {lastStep && (\n              <>\n                <Octicon icon={Check} />\n                &nbsp; Finish\n              </>\n            )}\n          </button>\n        </ButtonBar>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { ChevronRight, Star, Verified } from \"@primer/octicons-react\";\n\n// KISS :D\ninterface Props {\n  steps: ReadonlyArray<string>;\n  active: string;\n}\n\nexport const StepIndicator: FC<Props> = ({ steps, active }: Props) => {\n  const activeIndex = steps.indexOf(active);\n  return (\n    <>\n      <div>\n        {steps.map((step, i) => {\n          const current = i === activeIndex;\n          const future = i > activeIndex;\n          return (\n            <span key={step}>\n              <span\n                className={`badge badge-${\n                  current ? \"primary\" : future ? \"secondary\" : \"success\"\n                } ml-2 mr-2`}\n              >\n                {current && <Octicon icon={Star} />}\n                {step}\n              </span>\n              <Octicon icon={ChevronRight} />\n            </span>\n          );\n        })}\n        <span className=\"badge badge-dark  ml-2 mr-2\">\n          <Octicon icon={Verified} /> Finished\n        </span>\n      </div>\n    </>\n  );\n};\n","import React, { FC, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const Row: FC<Props> = ({ children }: Props) => {\n  const childCount = React.Children.count(children);\n\n  const colWidth = Math.floor(12 / childCount);\n\n  const columns = React.Children.map(children, c => (\n    <div className={`col-${colWidth}`}>{c}</div>\n  ));\n\n  return <div className=\"row mt-3\">{columns}</div>;\n};\n","import React, { ReactElement, useState } from \"react\";\nimport { Props as WizardStepProps, WizardStep } from \"./Wizard/WizardStep\";\nimport { Dict } from \"../utils/types\";\nimport { WizardButtons } from \"../App/NewGridMapPage/common/WizardButtons\";\nimport Octicon, { X } from \"@primer/octicons-react\";\nimport { StepIndicator } from \"./StepIndicator\";\nimport { Row } from \"./Row\";\n\nexport interface WizardContext {\n  onValueChange: (id: string, value: any) => void;\n  value: (id: string) => any;\n  input: (id: string) => any;\n}\n\nexport const WizardContext = React.createContext<WizardContext>({\n  onValueChange: () => undefined,\n  value: () => undefined,\n  input: () => undefined\n});\n\ninterface Props<T> {\n  children: ReactElement<WizardStepProps<any, any>, typeof WizardStep>[];\n  onDone: (context: T) => void;\n  onCancel: () => void;\n  title: string;\n}\n\nexport function Wizard<T>({\n  children,\n  onDone,\n  onCancel,\n  title\n}: Props<T>): ReactElement | null {\n  const [state, setState] = useState<Dict<any>>({});\n  const [current, setCurrent] = useState(0);\n\n  const stepConfigs = React.Children.map(children, c => c.props);\n\n  const context = {\n    onValueChange: (id: string, value: any): void => {\n      setState({ ...state, [id]: value });\n    },\n    value: (id: string) => state[id],\n    input: (id: string) => {\n      const index = stepConfigs.findIndex(c => c.id === id);\n      return index === 0 ? undefined : state[stepConfigs[index - 1].id];\n    }\n  };\n\n  const onNext = (): void => {\n    if (current >= stepConfigs.length - 1) {\n      onDone(state[stepConfigs[current].id]);\n    } else {\n      setCurrent(current + 1);\n    }\n  };\n  const onBack = (): void => {\n    setCurrent(current - 1);\n    // resetting current wizard step\n    state[stepConfigs[current].id] = null;\n  };\n  const currentStepConfig = stepConfigs[current];\n  const nextDisabled = !state[currentStepConfig.id];\n  const steps = stepConfigs.map(c => c.title);\n\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <a\n            href=\"#\"\n            className=\"btn btn-secondary float-right\"\n            onClick={event => {\n              event.preventDefault();\n              onCancel();\n            }}\n          >\n            <Octicon icon={X} />\n          </a>\n          <h5>{title}</h5>\n\n          <StepIndicator steps={steps} active={steps[current]} />\n        </div>\n\n        <div className=\"card-body\">\n          {currentStepConfig.description && (\n            <Row>\n              <div className=\"alert alert-primary\">\n                {currentStepConfig.description}\n              </div>\n            </Row>\n          )}\n          <WizardContext.Provider value={context}>\n            {React.Children.toArray(children)[current]}\n          </WizardContext.Provider>\n          <Row>\n            <WizardButtons\n              onNext={onNext}\n              onBack={current !== 0 ? onBack : undefined}\n              nextDisabled={nextDisabled}\n            />\n          </Row>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { FC, ReactElement, ReactNode, useContext } from \"react\";\nimport { WizardContext } from \"../Wizard\";\n\nexport interface Props<I, T> {\n  id: string;\n  title: string;\n  description?: ReactNode;\n  children: (props: WizardStepComponentProps<I, T>) => ReactNode;\n}\n\nexport interface WizardStepComponentProps<I, T> {\n  input: I;\n  onValueChange: (value: T | null) => void;\n  value: T | null;\n}\n\nexport function WizardStep<I, T>({\n  children,\n  id\n}: Props<I, T>): ReactElement | null {\n  const context = useContext(WizardContext);\n  const childArgs = {\n    input: context.input(id),\n    onValueChange: (value: any) => context.onValueChange(id, value),\n    value: context.value(id)\n  };\n  console.log(\"wizard steps\", { id, childArgs });\n  return <>{children(childArgs)}</>;\n}\n","import React, { ChangeEvent, FC, useEffect, useState } from \"react\";\nimport { BackgroundImage as ImageModel } from \"../../model/BackgroundImage\";\nimport { WizardStepComponentProps } from \"../../common/Wizard/WizardStep\";\nimport { Row } from \"../../common/Row\";\n\ninterface Props extends WizardStepComponentProps<unknown, ImageModel> {}\n\nexport const ImageUpload: FC<Props> = ({ value, onValueChange }: Props) => {\n  const [image, setImage] = useState<ImageModel | null>(null);\n\n  useEffect(() => {\n    setImage(value);\n  }, [value]);\n\n  const updateImage = (image: ImageModel | null): void => {\n    setImage(image);\n    onValueChange(image);\n  };\n\n  const onFileChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const files = event!.target!.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const url = reader.result as string;\n        setImageFromUrl(url);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const setImageFromUrl = (url: string): void => {\n    if (url) {\n      const img = new Image();\n\n      img.onload = function() {\n        updateImage(new ImageModel(url, img.width, img.height));\n      };\n\n      img.src = url;\n    } else {\n      updateImage(null);\n    }\n  };\n\n  return (\n    <>\n      {!image && (\n        <Row>\n          <div className=\"custom-file\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={onFileChange}\n            />\n            <label className=\"custom-file-label\" htmlFor=\"customFile\">\n              Choose file\n            </label>\n          </div>\n        </Row>\n      )}\n      {image && (\n        <Row>\n          <img\n            className=\"img-thumbnail gridMap-form_image-preview\"\n            src={image.url}\n          />\n          )\n        </Row>\n      )}\n      {image && (\n        <Row>\n          <button\n            className=\"btn btn-secondary btn-sm\"\n            type=\"button\"\n            onClick={() => updateImage(null)}\n          >\n            Change\n          </button>\n        </Row>\n      )}\n    </>\n  );\n};\n","import { PropsOf, SomePropsOf } from \"../utils/types\";\n\nexport class Transformation {\n  public static default(): Transformation {\n    return Object.freeze(new Transformation(0, 0, 1));\n  }\n\n  public static of(props: PropsOf<Transformation>): Transformation {\n    return Object.freeze(new Transformation(props.dx, props.dy, props.scale));\n  }\n\n  private constructor(\n    readonly dx: number,\n    readonly dy: number,\n    readonly scale: number\n  ) {}\n\n  with(props: SomePropsOf<Transformation>): Transformation {\n    const copy = new Transformation(this.dx, this.dy, this.scale);\n    return Object.freeze(Object.assign(copy, props));\n  }\n\n  asTransformString(): string {\n    return `scale(${this.scale} ${this.scale}) translate(${this.dx} ${this.dy})`;\n  }\n}\n","import { Vector } from \"./Vector\";\n\nexport class Rect {\n  constructor(readonly topLeft: Vector, readonly sideLength: number) {\n    Object.freeze(this);\n  }\n\n  move(vector: Vector): Rect {\n    return new Rect(this.topLeft.add(vector), this.sideLength);\n  }\n\n  moveTopLeftTo(vector: Vector): Rect {\n    const d = vector.subtract(this.topLeft).maxComponent;\n    return new Rect(\n      this.topLeft.add(Vector.fromNumber(d)),\n      this.sideLength - d\n    );\n  }\n\n  moveTopRightTo(vector: Vector): Rect {\n    const d = vector.subtract(this.topLeft.addX(this.sideLength)).inverseX\n      .maxComponent;\n    return new Rect(this.topLeft.addY(d), this.sideLength - d);\n  }\n\n  moveBottomLeftTo(vector: Vector): Rect {\n    const d = vector.subtract(this.topLeft.addY(this.sideLength)).inverseY\n      .maxComponent;\n    return new Rect(this.topLeft.addX(d), this.sideLength - d);\n  }\n\n  moveBottomRightTo(vector: Vector): Rect {\n    const d = vector.subtract(\n      this.topLeft.add(Vector.fromNumber(this.sideLength))\n    ).maxComponent;\n    return new Rect(this.topLeft, this.sideLength + d);\n  }\n\n  get normalized(): Rect {\n    if (this.sideLength >= 0) {\n      return this;\n    }\n    return new Rect(\n      this.topLeft.add(Vector.fromNumber(this.sideLength)),\n      -this.sideLength\n    );\n  }\n\n  withSideLength(sideLength: number): Rect {\n    return new Rect(this.topLeft, sideLength);\n  }\n\n  withTopLeft(topLeft: Vector): Rect {\n    return new Rect(topLeft, this.sideLength);\n  }\n}\n","import React, { FC, useState } from \"react\";\nimport { range } from \"../../utils/range\";\nimport { SvgDrag, useDragSvg } from \"../../utils/useDragSvg\";\nimport { Vector } from \"../../utils/Vector\";\nimport { Rect } from \"../../utils/Rect\";\n\ninterface Props {\n  width: number;\n  height: number;\n  rect: Rect | null;\n  onChange: (rect: Rect | null) => void;\n}\n\nexport const SelectionRect: FC<Props> = ({\n  rect,\n  width,\n  height,\n  onChange\n}: Props) => {\n  const [selectionRect, setSelectionRect] = useState<Rect | null>(\n    rect &&\n      new Rect(\n        rect.topLeft.subtract(Vector.fromNumber(rect.sideLength)),\n        rect.sideLength * 3\n      )\n  );\n\n  const updateRect = (rect: Rect | null): void => {\n    setSelectionRect(rect);\n    const r = rect && rect.normalized;\n    onChange(\n      r\n        ? new Rect(\n            r.topLeft.add(Vector.fromNumber(r.sideLength / 3)),\n            r.sideLength / 3\n          )\n        : null\n    );\n  };\n\n  const strokeSize = width / 600;\n\n  const dragRect = useDragSvg({\n    onStart: startPoint => {\n      setSelectionRect(new Rect(startPoint, 0));\n    },\n    onMove: ({ current }) => {\n      if (selectionRect) {\n        const d = current.subtract(selectionRect.topLeft).maxComponent;\n        updateRect(selectionRect.withSideLength(d));\n      }\n    },\n    onCancel: () => {\n      updateRect(null);\n    }\n  });\n\n  const useDragCorner = (\n    changeRect: (point: Vector, rect: Rect) => Rect\n  ): SvgDrag => {\n    const cornerDragging = useDragSvg({\n      onMove: ({ current }) => {\n        if (selectionRect) {\n          updateRect(changeRect(current, selectionRect));\n        }\n      },\n      onCancel: () => {\n        setSelectionRect(null);\n      }\n    });\n    return cornerDragging;\n  };\n\n  const dragCornerMatrix = [\n    [\n      useDragCorner((p, rect) => rect.moveTopLeftTo(p)),\n      useDragCorner((p, rect) => rect.moveBottomLeftTo(p))\n    ],\n    [\n      useDragCorner((p, rect) => rect.moveTopRightTo(p)),\n      useDragCorner((p, rect) => rect.moveBottomRightTo(p))\n    ]\n  ];\n\n  const r = selectionRect && selectionRect.normalized;\n\n  return (\n    <g>\n      <rect\n        fillOpacity={0.01}\n        x={0}\n        y={0}\n        width={width}\n        height={height}\n        {...dragRect.eventHandler}\n      />\n      {r && (\n        <g>\n          {range(3).flatMap(x =>\n            range(3).map(y => (\n              <rect\n                key={`${x}/${y}`}\n                x={r.topLeft.x + (x * r.sideLength) / 3}\n                y={r.topLeft.y + (y * r.sideLength) / 3}\n                width={r.sideLength / 3}\n                height={r.sideLength / 3}\n                stroke={dragRect.dragging ? \"#0f86ff\" : \"red\"}\n                fillOpacity={0}\n                strokeDasharray={`${strokeSize} ${strokeSize}`}\n                strokeWidth={strokeSize}\n              />\n            ))\n          )}\n          {!dragRect.dragging &&\n            selectionRect &&\n            range(2).flatMap(x =>\n              range(2).map(y => {\n                const drag = dragCornerMatrix[x][y];\n                return (\n                  <rect\n                    key={`${x}/${y}`}\n                    x={\n                      selectionRect.topLeft.x +\n                      x * selectionRect.sideLength -\n                      strokeSize * 3\n                    }\n                    y={\n                      selectionRect.topLeft.y +\n                      y * selectionRect.sideLength -\n                      strokeSize * 3\n                    }\n                    width={strokeSize * 6}\n                    height={strokeSize * 6}\n                    strokeOpacity={0}\n                    fill={drag.dragging ? \"#0f86ff\" : \"red\"}\n                    {...drag.eventHandler}\n                  />\n                );\n              })\n            )}\n        </g>\n      )}\n    </g>\n  );\n};\n","import React, { FC, ReactNode, useEffect, useState } from \"react\";\nimport Octicon, {\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n  DiffAdded,\n  DiffRemoved,\n  Icon\n} from \"@primer/octicons-react\";\nimport { Transformation } from \"../../../model/Transformation\";\n\ninterface Props {\n  transformation: Transformation;\n  onTransformationChange: (t: Transformation) => void;\n}\n\nexport const ViewControls: FC<Props> = ({\n  transformation: transformationFromProps,\n  onTransformationChange\n}: Props) => {\n  const [transformation, setTransformation] = useState(transformationFromProps);\n\n  useEffect(() => {\n    setTransformation(transformationFromProps);\n  }, [transformationFromProps]);\n\n  const updateTransformation = (t: Transformation): void => {\n    setTransformation(t);\n    onTransformationChange(t);\n  };\n\n  const translateFactor = 100;\n\n  const offsetXPlus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dx: transformation.dx - transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const offsetXMinus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dx: transformation.dx + transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const offsetYPlus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dy: transformation.dy - transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const offsetYMinus = (): void => {\n    updateTransformation(\n      transformation.with({\n        dy: transformation.dy + transformation.scale * translateFactor\n      })\n    );\n  };\n\n  const zoomIn = (): void => {\n    updateTransformation(\n      transformation.with({ scale: transformation.scale + 0.1 })\n    );\n  };\n\n  const zoomOut = (): void => {\n    updateTransformation(\n      transformation.with({ scale: transformation.scale - 0.1 })\n    );\n  };\n\n  const button = (icon: Icon, fn: () => void): ReactNode => {\n    return (\n      <button\n        className=\"btn btn-sm btn-secondary ml-2\"\n        onClick={fn}\n        type=\"button\"\n      >\n        <Octicon icon={icon} />\n      </button>\n    );\n  };\n\n  return (\n    <>\n      {button(DiffAdded, zoomIn)}\n      {button(DiffRemoved, zoomOut)}\n      {button(ArrowUp, offsetYMinus)}\n      {button(ArrowDown, offsetYPlus)}\n      {button(ArrowLeft, offsetXMinus)}\n      {button(ArrowRight, offsetXPlus)}\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { Transformation } from \"../../model/Transformation\";\nimport { BackgroundImage } from \"../../model/BackgroundImage\";\nimport { SelectionRect } from \"./SelectionRect\";\nimport { ViewControls } from \"./common/ViewControls\";\nimport { Rect } from \"../../utils/Rect\";\nimport { Row } from \"../../common/Row\";\n\nconst viewPositionToLabel = {\n  center: \"center\",\n  \"left-top\": \"top left corner\",\n  \"right-bottom\": \"bottom right corner\"\n};\n\ninterface Props {\n  image: BackgroundImage;\n  onChange: (rect: Rect | null) => void;\n  rect: Rect | null;\n  viewPosition: \"center\" | \"left-top\" | \"right-bottom\";\n}\n\nexport const PlaceSquare: FC<Props> = ({\n  image,\n  onChange,\n  viewPosition,\n  rect: initialRect\n}: Props) => {\n  const [transformation, setTransformation] = useState(\n    Transformation.default()\n  );\n\n  const [rect, setRect] = useState<null | Rect>(initialRect);\n\n  useEffect(() => setRect(initialRect), [initialRect]);\n\n  useEffect(() => {\n    const scale = (600 / image.width) * 2;\n\n    const t = Transformation.default().with({\n      scale: scale,\n      dx: viewPosition === \"left-top\" ? 0 : -(image.width - 600 / scale),\n      dy: viewPosition === \"left-top\" ? 0 : -(image.height - 600 / scale)\n    });\n    setTransformation(t);\n  }, [image, viewPosition]);\n\n  const updateRect = (rect: Rect | null): void => {\n    setRect(rect);\n    onChange(rect);\n  };\n\n  return (\n    <>\n      <Row>\n        <ViewControls\n          transformation={transformation}\n          onTransformationChange={setTransformation}\n        />\n      </Row>\n      <Row>\n        <svg style={{ width: 600, height: 600 }} className=\"img-thumbnail\">\n          <g transform={transformation.asTransformString()}>\n            <image\n              width={image.width}\n              height={image.height}\n              xlinkHref={image.url}\n            />\n            <SelectionRect\n              rect={rect}\n              width={image.width}\n              height={image.height}\n              onChange={updateRect}\n            />\n          </g>\n        </svg>\n      </Row>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState, useRef } from \"react\";\nimport { Transformation } from \"../../model/Transformation\";\nimport Octicon, { ArrowDown, ArrowUp } from \"@primer/octicons-react\";\nimport { BackgroundImage } from \"../../model/BackgroundImage\";\nimport { range } from \"../../utils/range\";\nimport { ViewControls } from \"./common/ViewControls\";\nimport { TransformParams } from \"./common/TransformParams\";\nimport { Rect } from \"../../utils/Rect\";\nimport { Transform } from \"../../utils/Transform\";\nimport { Vector } from \"../../utils/Vector\";\nimport { Row } from \"../../common/Row\";\nimport { ButtonBar } from \"../../common/ButtonBar\";\n\nconst calculateTransformation = (\n  params: TransformParams,\n  rect1: Rect,\n  rect2: Rect\n): Transform => {\n  const calculatedA = params.distance / params.squareCount;\n\n  const dx1 = -rect1.topLeft.x % calculatedA;\n\n  // investigate way this leads sometimes to an offset of a half square\n  // const dx2 = -rect2.topLeft.x % calculatedA;\n  // const dx = (dx1 + dx2) / 2;\n\n  const dx = dx1;\n\n  const dy1 = -rect1.topLeft.y % calculatedA;\n\n  // investigate way this leads sometimes to an offset of a half square\n  // const dy2 = -rect2.topLeft.y % calculatedA;\n  // const dy = (dy1 + dy2) / 2;\n\n  const dy = dy1;\n\n  return new Transform(new Vector(dx, dy), 1 / calculatedA);\n};\n\nconst calculateParams = (rect1: Rect, rect2: Rect): TransformParams => {\n  const distanceByAxis = {\n    x: Math.abs(rect2.topLeft.x - rect1.topLeft.x),\n    y: Math.abs(rect2.topLeft.y - rect1.topLeft.y)\n  };\n\n  const axis: \"x\" | \"y\" = distanceByAxis.x > distanceByAxis.y ? \"x\" : \"y\";\n\n  const averageA = (rect1.sideLength + rect2.sideLength) / 2;\n\n  const distance = distanceByAxis[axis];\n  const squareCount = Math.round(distance / averageA);\n  return {\n    axis,\n    squareCount,\n    distance\n  };\n};\n\ninterface Props {\n  image: BackgroundImage;\n  rect1: Rect;\n  rect2: Rect;\n  transformParams: TransformParams | null;\n  onChange: (transform: Transform, transformParams: TransformParams) => void;\n}\n\nexport const PreviewGrid: FC<Props> = ({\n  image,\n  rect1,\n  rect2,\n  transformParams,\n  onChange\n}: Props) => {\n  const [viewTransformation, setViewTransformation] = useState(\n    Transformation.default()\n  );\n  const [params, setParams] = useState(\n    transformParams || calculateParams(rect1, rect2)\n  );\n\n  const onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange;\n\n  const imageTransformation = calculateTransformation(params, rect1, rect2);\n\n  const xSquareCount = Math.ceil(image.width * imageTransformation.scale + 1);\n  const ySquareCount = Math.ceil(image.height * imageTransformation.scale + 1);\n\n  // the main reason for this is to call the onChange callback after the component is rendered for the first time\n  // so if the user will press next without changing anything the value gets promoted.\n  // we should be careful that we call onChange only if there is a diff in the parameter, otherwise we will stuck in\n  // a render loop, especial care must be taken for imageTransformation because this object is recalculated on every renders\n  useEffect(() => {\n    onChangeRef.current(imageTransformation, params);\n  }, [params, onChangeRef, ...imageTransformation.components]);\n\n  return (\n    <>\n      <Row>\n        <ViewControls\n          transformation={viewTransformation}\n          onTransformationChange={setViewTransformation}\n        />\n      </Row>\n      <Row>\n        <svg\n          style={{ width: 600, height: 600 }}\n          viewBox={`0 0 ${xSquareCount} ${ySquareCount}`}\n          className=\"img-thumbnail\"\n        >\n          <g transform={viewTransformation.asTransformString()}>\n            <g {...imageTransformation.scaleTranslateAttribute}>\n              <image\n                width={image.width}\n                height={image.height}\n                xlinkHref={image.url}\n              />\n              <rect\n                x={rect1.topLeft.x}\n                y={rect1.topLeft.y}\n                width={rect1.sideLength}\n                height={rect1.sideLength}\n                stroke=\"#0f86ff\"\n                strokeWidth={0.03}\n                fillOpacity={0}\n              />\n              <rect\n                x={rect2.topLeft.x}\n                y={rect2.topLeft.y}\n                width={rect2.sideLength}\n                height={rect2.sideLength}\n                stroke=\"#0f86ff\"\n                strokeWidth={0.03}\n                fillOpacity={0}\n              />\n            </g>\n            {range(xSquareCount).map(x => {\n              return range(ySquareCount).map(y => {\n                return (\n                  <rect\n                    key={`${x}/${y}`}\n                    x={x}\n                    y={y}\n                    width=\"1\"\n                    height=\"1\"\n                    stroke=\"darkred\"\n                    strokeWidth={0.02}\n                    strokeDasharray=\"0.02 0.01\"\n                    fillOpacity={0}\n                  />\n                );\n              });\n            })}\n          </g>\n        </svg>\n      </Row>\n      <Row>\n        <ButtonBar>\n          <button\n            className=\"btn btn-sm btn-secondary\"\n            onClick={() => {\n              setParams({\n                ...params,\n                squareCount: params.squareCount + 1\n              });\n            }}\n            type=\"button\"\n          >\n            <Octicon icon={ArrowUp} />\n            Too few Squares\n          </button>\n          <button\n            className=\"btn btn-sm btn-secondary\"\n            onClick={() => {\n              setParams({\n                ...params,\n                squareCount: params.squareCount - 1\n              });\n            }}\n            type=\"button\"\n          >\n            <Octicon icon={ArrowDown} />\n            Too much Squares\n          </button>\n        </ButtonBar>\n      </Row>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { Tag } from \"@primer/octicons-react\";\nimport { useStateWithCallback } from \"../../utils/useStateWithCallback\";\nimport { Row } from \"../../common/Row\";\n\ninterface Props {\n  onChange: (name: string | null) => void;\n}\n\nexport const AddMetadata: FC<Props> = ({ onChange }: Props) => {\n  const [name, setName] = useStateWithCallback<string | null>(null, onChange);\n  return (\n    <>\n      <Row>\n        <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <div className=\"input-group-text\">\n              <Octicon icon={Tag} />\n            </div>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Background Name\"\n            onChange={(e): void => {\n              setName(e.target.value || null);\n            }}\n            value={name || \"\"}\n          />\n        </div>\n      </Row>\n    </>\n  );\n};\n","import { Dispatch, SetStateAction, useState } from \"react\";\n\nexport const useStateWithCallback = <T>(\n  initialState: T | (() => T),\n  changeCallback: (value: T) => void\n): [T, Dispatch<SetStateAction<T>>] => {\n  const [state, setState] = useState<T>(initialState);\n\n  const setter: Dispatch<SetStateAction<T>> = (\n    value: T | ((old: T) => T)\n  ): void => {\n    if (typeof value === \"function\") {\n      let newValue: T | null = null;\n      setState(\n        (old: T): T => {\n          const newValue = (value as Function)(old);\n          return newValue;\n        }\n      );\n      changeCallback(newValue!);\n    } else {\n      setState(value);\n      changeCallback(value);\n    }\n  };\n\n  return [state, setter];\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { FileMedia } from \"@primer/octicons-react\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { useRouter } from \"../utils/useRouter\";\nimport { routing } from \"../App\";\nimport { ImageGridMapRepository } from \"../services/ImageGridMapRepository\";\nimport { Wizard } from \"../common/Wizard\";\nimport { WizardStep } from \"../common/Wizard/WizardStep\";\nimport { ImageUpload } from \"./NewGridMapPage/ImageUpload\";\nimport { BackgroundImage } from \"../model/BackgroundImage\";\nimport { PlaceSquare } from \"./NewGridMapPage/PlaceSquare\";\nimport { PreviewGrid } from \"./NewGridMapPage/PreviewGrid\";\nimport { AddMetadata } from \"./NewGridMapPage/AddMetadata\";\nimport { ImageGridMap } from \"../model/ImageGridMap\";\nimport { Rect } from \"../utils/Rect\";\nimport { TransformParams } from \"./NewGridMapPage/common/TransformParams\";\nimport { Transform } from \"../utils/Transform\";\nimport { labels } from \"../data/labels\";\n\nexport interface AddMapContext {\n  image: BackgroundImage | null;\n  rect1: Rect | null;\n  rect2: Rect | null;\n  transformParams: TransformParams | null;\n  transform: Transform;\n  name: string | null;\n}\n\ninterface Props {\n  imageGridMapRepository: ImageGridMapRepository;\n}\n\nexport const NewGridMapPage: FC<Props> = ({\n  imageGridMapRepository\n}: Props) => {\n  const heading = <PageHeader icon={FileMedia} headline=\"Add Map\" />;\n\n  const router = useRouter();\n  const navigateToStart = (): void => {\n    router.history.push(routing.start);\n  };\n\n  const onDone = (context: AddMapContext): void => {\n    imageGridMapRepository.store(\n      new ImageGridMap(context.name!, context.image!, context.transform!)\n    );\n    navigateToStart();\n  };\n\n  const onCancel = (): void => {\n    navigateToStart();\n  };\n\n  return (\n    <>\n      <FullPageWithHeading heading={heading}>\n        <Wizard onDone={onDone} onCancel={onCancel} title=\"Add Map\">\n          <WizardStep<unknown, BackgroundImage>\n            id=\"imageUpload\"\n            title=\"Open Image\"\n            description={labels.newGridMapPage.imageUpload.description}\n          >\n            {props => <ImageUpload {...props} />}\n          </WizardStep>\n          <WizardStep<BackgroundImage, Pick<AddMapContext, \"image\" | \"rect1\">>\n            id=\"rect1\"\n            title=\"Mark 1st Square\"\n            description={labels.newGridMapPage.rect1.description}\n          >\n            {props => (\n              <>\n                <PlaceSquare\n                  image={props.input}\n                  rect={props.value && props.value.rect1}\n                  onChange={rect =>\n                    props.onValueChange({ image: props.input, rect1: rect })\n                  }\n                  viewPosition=\"left-top\"\n                />\n              </>\n            )}\n          </WizardStep>\n          <WizardStep<\n            Pick<AddMapContext, \"image\" | \"rect1\">,\n            Pick<AddMapContext, \"image\" | \"rect1\" | \"rect2\">\n          >\n            id=\"rect2\"\n            title=\"Mark 2st Square\"\n            description={labels.newGridMapPage.rect2.description}\n          >\n            {props => (\n              <>\n                <PlaceSquare\n                  image={props.input.image!}\n                  rect={props.value && props.value.rect2}\n                  onChange={rect =>\n                    props.onValueChange({ ...props.input, rect2: rect })\n                  }\n                  viewPosition=\"right-bottom\"\n                />\n              </>\n            )}\n          </WizardStep>\n          <WizardStep<\n            Pick<AddMapContext, \"image\" | \"rect1\" | \"rect2\">,\n            Pick<\n              AddMapContext,\n              \"image\" | \"rect1\" | \"rect2\" | \"transformParams\" | \"transform\"\n            >\n          >\n            id=\"preview\"\n            title=\"Preview\"\n            description={labels.newGridMapPage.preview.description}\n          >\n            {props => (\n              <>\n                <PreviewGrid\n                  image={props.input.image!}\n                  rect1={props.input!.rect1!}\n                  rect2={props.input!.rect2!}\n                  transformParams={props.value && props.value.transformParams}\n                  onChange={(transform, transformParams) =>\n                    props.onValueChange({\n                      ...props.input,\n                      transform,\n                      transformParams\n                    })\n                  }\n                />\n              </>\n            )}\n          </WizardStep>\n          <WizardStep<\n            Pick<\n              AddMapContext,\n              \"image\" | \"rect1\" | \"rect2\" | \"transformParams\" | \"transform\"\n            >,\n            AddMapContext\n          >\n            id=\"metadata\"\n            title=\"Naming\"\n            description={labels.newGridMapPage.metadata.description}\n          >\n            {props => (\n              <>\n                <AddMetadata\n                  onChange={name =>\n                    props.onValueChange({ ...props.input, name })\n                  }\n                />\n              </>\n            )}\n          </WizardStep>\n        </Wizard>\n      </FullPageWithHeading>\n    </>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { StepIndicator } from \"../../common/StepIndicator\";\nimport { Session } from \"../../model/Session\";\nimport { GridMapList } from \"../../common/GridMapList\";\nimport { ImageGridMap } from \"../../model/ImageGridMap\";\nimport Octicon, { Check, Tag, X } from \"@primer/octicons-react\";\nimport { ExplanationBox } from \"../../common/ExplanationBox\";\nimport { GridMap } from \"../../model/GridMap\";\n\ninterface Props {\n  onSave: (session: Session) => void;\n  onCancel: () => void;\n  gridMaps: ReadonlyArray<GridMap>;\n}\n\nconst steps = {\n  selectBackground: \"Select Background\",\n  metadata: \"Add Metadata\"\n};\nexport const StartSession: FC<Props> = ({\n  onSave,\n  onCancel,\n  gridMaps\n}: Props) => {\n  const [step, setStep] = useState<string>(steps.selectBackground);\n  const [gridMapName, setBackgroundName] = useState<string | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const save = (): void => {\n    if (!name || !gridMapName) {\n      return;\n    }\n    onSave(\n      Session.of({\n        name,\n        date: new Date().toLocaleString(),\n        gridMapName,\n        content: {}\n      })\n    );\n  };\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">\n        <a\n          href=\"#\"\n          className=\"btn btn-secondary float-right\"\n          onClick={event => {\n            event.preventDefault();\n            onCancel();\n          }}\n        >\n          <Octicon icon={X} />\n        </a>\n        <h5>Start Session</h5>\n      </div>\n\n      <div className=\"card-body\">\n        <StepIndicator steps={Object.values(steps)} active={step} />\n        {!gridMapName && (\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <ExplanationBox>\n                Select a map where you want to play from the list below ...\n              </ExplanationBox>\n\n              <GridMapList gridMaps={gridMaps}>\n                {gridMap => (\n                  <button\n                    className=\"btn btn-success\"\n                    type=\"button\"\n                    onClick={() => {\n                      setBackgroundName(gridMap.name);\n                      setStep(steps.metadata);\n                    }}\n                  >\n                    <Octicon icon={Check} />\n                    &nbsp; Use this map\n                  </button>\n                )}\n              </GridMapList>\n            </div>\n          </div>\n        )}\n        {gridMapName && (\n          <>\n            <div className=\"row mt-3\">\n              <div className=\"col-md-12\">\n                <ExplanationBox>\n                  Provide a memorable name and some other useful information ...\n                  and your done :D\n                </ExplanationBox>\n                <div className=\"input-group mb-2\">\n                  <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">\n                      <Octicon icon={Tag} />\n                    </div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Session Name\"\n                    onChange={e => setName(e.target.value)}\n                    value={name}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-3\">\n              <div className=\"col-md-12\">\n                <button\n                  className=\"btn btn-success\"\n                  type=\"button\"\n                  onClick={() => name && save()}\n                >\n                  Save and Start Session\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { routing } from \"../../App\";\n\ninterface Props {}\n\nexport const NoGridMapsFound: FC<Props> = ({}: Props) => {\n  return (\n    <>\n      <h3>No Maps found</h3>\n      <span>\n        Oh no! It seems that you want create a sessions but we can&apos;t find\n        any map :(\n      </span>\n      <br />\n      <br />\n      <span>\n        Please go <Link to={routing.gridMaps}>here</Link> to create a map.\n        <br />\n        Afterwards come back via the menu in the top left corner (Sessions) to\n        start a session.\n      </span>\n    </>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { SessionRepository } from \"../services/SessionRepository\";\nimport { Dict } from \"../utils/types\";\nimport { Repo } from \"@primer/octicons-react\";\nimport { StartSession } from \"./SessionsPage/StartSession\";\nimport { NoGridMapsFound } from \"./SessionsPage/NoGridMapsFound\";\nimport { ExplanationBox } from \"../common/ExplanationBox\";\nimport { arrayToDict } from \"../utils/arrayToDict\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { routing } from \"../App\";\nimport { useNavigation } from \"../utils/useNavigation\";\nimport { labels } from \"../data/labels\";\nimport { GridMapService } from \"../services/GridMapService\";\nimport { GridMap } from \"../model/GridMap\";\n\ninterface Props {\n  sessionRepository: SessionRepository;\n  gridMapService: GridMapService;\n}\n\nexport const NewSessionPage: FC<Props> = ({\n  sessionRepository,\n\n  gridMapService\n}: Props) => {\n  const [gridMapsForName, setGridMapForName] = useState<\n    Readonly<Dict<GridMap>>\n  >({});\n\n  useEffect(() => {\n    gridMapService.getGridMaps().subscribe({\n      next: gridMaps => {\n        setGridMapForName(arrayToDict(gridMaps, gridMap => gridMap.name));\n      }\n    });\n  }, [gridMapService, sessionRepository]);\n\n  const [navigateToStart, navigateToPlay] = useNavigation(\n    routing.start,\n    routing.play\n  );\n  const noGridMaps = Object.keys(gridMapsForName).length === 0;\n\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader icon={Repo} headline={labels.newSessionPage.headline} />\n      }\n    >\n      <ExplanationBox>{labels.newSessionPage.explanation}</ExplanationBox>\n      {noGridMaps && <NoGridMapsFound />}\n\n      {!noGridMaps && (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <StartSession\n              onSave={session => {\n                sessionRepository.store(session);\n                sessionRepository.storeCurrentSessionName(session.name);\n                navigateToPlay();\n              }}\n              onCancel={() => {\n                navigateToStart();\n              }}\n              gridMaps={Object.values(gridMapsForName)}\n            />\n          </div>\n        </div>\n      )}\n    </FullPageWithHeading>\n  );\n};\n","export const opensource = Object.freeze({\n  React: {\n    page: \"https://reactjs.org\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/facebook/react/blob/master/LICENSE\"\n  },\n  Bootstrap: {\n    page: \"https://getbootstrap.com\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/twbs/bootstrap/blob/master/LICENSEs\"\n  },\n  \"React Router\": {\n    page: \"https://reacttraining.com/react-router/\",\n    licence: \"MIT\",\n    licenceUrl:\n      \"https://github.com/ReactTraining/react-router/blob/master/LICENSE\"\n  },\n  RxJS: {\n    page: \"https://rxjs-dev.firebaseapp.com/\",\n    licence: \"Apache 2.0\",\n    licenceUrl: \"https://github.com/ReactiveX/rxjs/blob/master/LICENSE.txt\"\n  },\n  Typescript: {\n    page: \"https://www.typescriptlang.org/\",\n    licence: \"Apache 2.0\",\n    licenceUrl:\n      \"https://github.com/microsoft/TypeScript/blob/master/LICENSE.txt\"\n  },\n  Octicons: {\n    page: \"https://octicons.github.com/\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  Formik: {\n    page: \"https://jaredpalmer.com/formik/docs/overview\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/jaredpalmer/formik/blob/master/LICENSE\"\n  },\n  Immer: {\n    page: \"https://immerjs.github.io/immer/docs/introduction\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/immerjs/immer/blob/master/LICENSE\"\n  },\n  \"Dexie.js\": {\n    page: \"https://dexie.org/\",\n    licence: \"Apache 2.0\",\n    licenceUrl: \"https://github.com/dfahlander/Dexie.js/blob/master/LICENSE\"\n  },\n  JQuery: {\n    page: \"https://jquery.com/\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/jquery/jquery/blob/master/LICENSE.txt\"\n  },\n  \"Popper.js\": {\n    page: \"https://popper.js.org/\",\n    licence: \"MIT\",\n    licenceUrl: \"https://github.com/FezVrasta/popper.js/blob/master/LICENSE.md\"\n  },\n  \"Create React App\": {\n    page: \"https://create-react-app.dev/\",\n    licence: \"MIT\",\n    licenceUrl:\n      \"https://github.com/facebook/create-react-app/blob/master/LICENSE\"\n  },\n  \"es-shims/Array.prototype.flatMap\": {\n    page: \"https://github.com/es-shims/Array.prototype.flatMap\",\n    licence: \"MIT\",\n    licenceUrl:\n      \"https://github.com/es-shims/Array.prototype.flatMap/blob/master/LICENSE\"\n  }\n});\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport Octicon, {\n  FileMedia,\n  MarkGithub,\n  Octoface\n} from \"@primer/octicons-react\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { opensource } from \"../data/opensource\";\nimport { labels } from \"../data/labels\";\n\ninterface Props {}\n\nexport const OpenSourcePage: FC<Props> = ({}: Props) => {\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader\n          icon={Octoface}\n          headline={labels.openSourcePage.headline}\n        ></PageHeader>\n      }\n    >\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <blockquote className=\"blockquote\">\n            <p className=\"mb-0\">\n              <em>\n                &quot;If I have seen further it is by standing on the shoulders\n                of giants.&quot;\n              </em>\n            </p>\n            <footer className=\"blockquote-footer\">\n              <cite title=\"Source Title\">\n                <a href=\"https://en.wikipedia.org/wiki/Bernard_of_Chartres\">\n                  Bernard of Chartres\n                </a>\n              </cite>\n            </footer>\n          </blockquote>\n        </div>\n      </div>\n\n      <div className=\"card mt-3\">\n        <div className=\"card-body\">\n          <table className=\"table\">\n            <thead>\n              <th>Project</th>\n              <th>Website</th>\n              <th>Licence</th>\n            </thead>\n            <tbody>\n              {Object.entries(opensource).map(([name, info]) => (\n                <tr key={name}>\n                  <td>{name}</td>\n                  <td>\n                    <a href={info.page}>{info.page}</a>\n                  </td>\n                  <td>\n                    <a href={info.licenceUrl}>{info.licence}</a>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","export class SettingToggle {\n  constructor(\n    private readonly name: string,\n    private readonly defaultValue: boolean\n  ) {}\n\n  get(): boolean {\n    const key = this.key;\n    const loadedValue = localStorage.getItem(key);\n    switch (loadedValue) {\n      case \"true\":\n        return true;\n      case \"false\":\n        return false;\n      default:\n        return this.defaultValue;\n    }\n  }\n\n  private get key(): string {\n    return `toggle-${this.name}`;\n  }\n\n  set(value: boolean): void {\n    localStorage.setItem(this.key, `${value}`);\n  }\n}\n\nexport const settingStorage = Object.freeze({\n  redirectToAbout: new SettingToggle(\"redirect-to-about\", true)\n});\n","import React, { FC, ReactNode } from \"react\";\nimport { settingStorage } from \"../services/SettingStorage\";\nimport { Redirect } from \"react-router\";\nimport { routing } from \"../App\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport const RedirectToAboutOnFirstVisit: FC<Props> = ({ children }: Props) => {\n  const redirectToAbout = settingStorage.redirectToAbout.get();\n  if (redirectToAbout) {\n    settingStorage.redirectToAbout.set(false);\n  }\n  return (\n    <>\n      {redirectToAbout && <Redirect to={routing.about} />}\n      {!redirectToAbout && children}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport Octicon, { Home, Key, Law } from \"@primer/octicons-react\";\nimport { routing } from \"../App\";\nimport { Link } from \"react-router-dom\";\nimport { links } from \"../data/links\";\nimport { PageHeader } from \"../common/PageHeader\";\n\ninterface Props {}\n\nexport const HomeButton: FC<Props> = ({}: Props) => {\n  return (\n    <>\n      <div className=\"navbar navbar-dark bg-dark logo-menu\">\n        <Link\n          className=\"btn mb-md-2 btn-outline-primary logo-button\"\n          to={routing.start}\n        >\n          <div>\n            <div className=\"position-absolute\">\n              <Octicon icon={Home} width={30} height={50} />\n            </div>\n          </div>\n        </Link>\n      </div>\n    </>\n  );\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { RedirectToAboutOnFirstVisit } from \"./RedirectToAboutOnFirstVisit\";\nimport { HomeButton } from \"./HomeButton\";\nimport backgroundImage from \"../images/john-westrock-UHFQPFt5-WA-unsplash.jpg\";\nimport { Legal } from \"./Legal\";\n\ninterface Props {\n  noBackground?: boolean;\n  noHomeButton?: boolean;\n  hideLegal?: boolean;\n  noRedirectToAboutOnFirstVisit?: boolean;\n  children: ReactNode;\n}\n\nexport const AppPage: FC<Props> = ({\n  noBackground,\n  noHomeButton,\n  hideLegal,\n  noRedirectToAboutOnFirstVisit,\n  children\n}: Props) => {\n  const wrapWithRedirect = (content: ReactElement): ReactElement => {\n    if (noRedirectToAboutOnFirstVisit) {\n      return (\n        <RedirectToAboutOnFirstVisit>{content}</RedirectToAboutOnFirstVisit>\n      );\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <>\n      {wrapWithRedirect(\n        <>\n          {!hideLegal && <Legal />}\n          {!noHomeButton && <HomeButton />}\n          {!noBackground && (\n            <img src={backgroundImage} className=\"background\" />\n          )}\n          {children}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { FullPageWithHeading } from \"../common/FullPageWithHeading\";\nimport { FileMedia } from \"@primer/octicons-react\";\nimport { PageHeader } from \"../common/PageHeader\";\nimport { labels } from \"../data/labels\";\n\ninterface Props {}\n\nexport const AssetsPage: FC<Props> = ({}: Props) => {\n  return (\n    <FullPageWithHeading\n      heading={\n        <PageHeader\n          icon={FileMedia}\n          headline={labels.assetPage.headline}\n        ></PageHeader>\n      }\n    >\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <table className=\"table\">\n            <thead>\n              <th>Image</th>\n              <th>Artist</th>\n              <th>Website</th>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Background (Mountain)</td>\n                <td>\n                  <a href=\"https://unsplash.com/@johnwestrock\">John Westrock</a>\n                </td>\n                <td>\n                  <a href=\"https://unsplash.com/photos/UHFQPFt5-WA\">Unsplash</a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </FullPageWithHeading>\n  );\n};\n","import { ImageGridMapRepository } from \"./ImageGridMapRepository\";\nimport { GridMap } from \"../model/GridMap\";\nimport { Observable, of } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Vector } from \"../utils/Vector\";\n\nexport class GridMapService {\n  private static BLANK_GRID_MAP: GridMap = Object.freeze({\n    name: \"BLANK-MAP\",\n    isAsset: false,\n    squares: new Vector(100, 100)\n  });\n\n  constructor(readonly imageGridMapRepository: ImageGridMapRepository) {}\n\n  getGridMaps(): Observable<ReadonlyArray<GridMap>> {\n    return this.imageGridMapRepository\n      .findAll()\n      .pipe(\n        map(list => Object.freeze([...list, GridMapService.BLANK_GRID_MAP]))\n      );\n  }\n\n  getGridMapByName(name: string): Observable<GridMap | null> {\n    if (name === GridMapService.BLANK_GRID_MAP.name) {\n      return of(GridMapService.BLANK_GRID_MAP);\n    }\n    return this.imageGridMapRepository.findBy(name);\n  }\n}\n","import React, { FC, useState } from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport { GridMapsPage } from \"./App/GridMapsPage\";\nimport { SessionsPage } from \"./App/SessionsPage\";\nimport { ManageTokenTypesPage } from \"./App/ManageTokenTypesPage\";\nimport { AboutPage } from \"./App/AboutPage\";\nimport { PlayPage } from \"./App/PlayPage\";\nimport { IndexedDbStorageProvider } from \"./services/IndexedDbStorageProvider\";\nimport { StartPage } from \"./App/StartPage\";\nimport { ImageGridMapRepository } from \"./services/ImageGridMapRepository\";\nimport { SessionRepository } from \"./services/SessionRepository\";\nimport { NewGridMapPage } from \"./App/NewGridMapPage\";\nimport { NewSessionPage } from \"./App/NewSessionPage\";\nimport { OpenSourcePage } from \"./App/OpenSourcePage\";\nimport { AppPage } from \"./App/AppPage\";\nimport { Route } from \"react-router\";\nimport { AssetsPage } from \"./App/AssetsPage\";\nimport { GridMapService } from \"./services/GridMapService\";\n\nexport const routing = {\n  start: \"/\",\n  play: \"/play\",\n  sessions: \"/sessions\",\n  newSessions: \"/sessions/new\",\n  gridMaps: \"/manage-maps\",\n  newGridMap: \"/manage-maps/new\",\n  about: \"/about\",\n  tokenTypes: \"/token-types\",\n  openSource: \"/open-source\",\n  assets: \"/assets\"\n};\n\ninterface Props {}\n\nexport const App: FC<Props> = ({}: Props) => {\n  const [services] = useState(() => {\n    const storageProvider = new IndexedDbStorageProvider();\n    const imageGridMapRepository = new ImageGridMapRepository(storageProvider);\n    const sessionRepository = new SessionRepository(storageProvider);\n    const gridMapService = new GridMapService(imageGridMapRepository);\n    return {\n      storageProvider,\n      imageGridMapRepository,\n      sessionRepository,\n      gridMapService\n    };\n  });\n\n  return (\n    <>\n      <Router>\n        <div className=\"h-100\">\n          <Switch>\n            <Route path={routing.start} exact={true}>\n              <AppPage noHomeButton={true}>\n                <StartPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.play}>\n              <AppPage noBackground={true} hideLegal={true}>\n                <PlayPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.newSessions}>\n              <AppPage>\n                <NewSessionPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.sessions}>\n              <AppPage>\n                <SessionsPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.newGridMap}>\n              <AppPage>\n                <NewGridMapPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.gridMaps}>\n              <AppPage>\n                <GridMapsPage {...services} />\n              </AppPage>\n            </Route>\n            <Route path={routing.tokenTypes}>\n              <AppPage>\n                <ManageTokenTypesPage />\n              </AppPage>\n            </Route>\n            <Route path={routing.openSource}>\n              <AppPage>\n                <OpenSourcePage />\n              </AppPage>\n            </Route>\n            <Route path={routing.assets}>\n              <AppPage>\n                <AssetsPage />\n              </AppPage>\n            </Route>\n            <Route path={routing.about} noRedirectToAboutOnFirstVisit={true}>\n              <AppPage>\n                <AboutPage />\n              </AppPage>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import flatMap from \"array.prototype.flatmap\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"jquery\";\nimport \"popper.js\";\nimport \"bootstrap\";\n\nflatMap.shim();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}